{"ast":null,"code":"export function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return \"import { toHandlers as _toHandlers, mergeProps as _mergeProps, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, resolveDirective as _resolveDirective, openBlock as _openBlock, createBlock as _createBlock, withDirectives as _withDirectives } from \\\"vue\\\" export function render(_ctx, _cache, $props, $setup, $data, $options) { const _component_v_color_picker = _resolveComponent(\\\"v-color-picker\\\") const _component_v_card_text = _resolveComponent(\\\"v-card-text\\\") const _component_v_card = _resolveComponent(\\\"v-card\\\") const _component_v_menu = _resolveComponent(\\\"v-menu\\\") const _component_v_text_field = _resolveComponent(\\\"v-text-field\\\") const _directive_mask = _resolveDirective(\\\"mask\\\") return _withDirectives((_openBlock(), _createBlock(_component_v_text_field, _mergeProps({ value: _ctx.value, label: _ctx.label, \\\"hide-details\\\": \\\"\\\", class: \\\"ma-0 pa-0\\\", onInput: _cache[2] || (_cache[2] = $event => (_ctx.update( $event ))) }, _ctx.props, { onClick: _cache[3] || (_cache[3] = $event => ($data.pickColor=true)), readonly: \\\"\\\", dense: \\\"\\\", outlined: \\\"\\\" }), { append: _withCtx(() => [ _createVNode(_component_v_menu, { modelValue: $data.pickColor, \\\"onUpdate:modelValue\\\": _cache[1] || (_cache[1] = $event => (($data.pickColor) = $event)), top: \\\"\\\", \\\"nudge-bottom\\\": \\\"105\\\", \\\"nudge-left\\\": \\\"16\\\", \\\"close-on-content-click\\\": false }, { activator: _withCtx(({ on }) => [ _createElementVNode(\\\"div\\\", _mergeProps({ style: $options.swatchStyle(_ctx.value) }, _toHandlers(on, true)), null, 16 /* FULL_PROPS */) ]), default: _withCtx(() => [ _createVNode(_component_v_card, null, { default: _withCtx(() => [ _createVNode(_component_v_card_text, { class: \\\"pa-0\\\" }, { default: _withCtx(() => [ _createVNode(_component_v_color_picker, _mergeProps({ flat: \\\"\\\", value: _ctx.value, label: _ctx.label, onInput: _cache[0] || (_cache[0] = $event => (_ctx.update($event))) }, _ctx.secondaryProps), null, 16 /* FULL_PROPS */, [\\\"value\\\", \\\"label\\\"]) ]), _: 1 /* STABLE */ }) ]), _: 1 /* STABLE */ }) ]), _: 1 /* STABLE */ }, 8 /* PROPS */, [\\\"modelValue\\\"]) ]), _: 1 /* STABLE */ }, 16 /* FULL_PROPS */, [\\\"value\\\", \\\"label\\\"])), [ [_directive_mask, $data.mask] ]) }\";\n}","map":{"version":3,"names":[],"sources":["/var/www/crm_template/packages/oobook/crm-base/vue/src/js/components/inputs/Color.vue"],"sourcesContent":["<template>\n    <v-text-field \n        :value=\"value\"\n        :label=\"label\"\n        v-mask=\"mask\"\n        hide-details \n        class=\"ma-0 pa-0\" \n        @input=\"update( $event )\"\n        v-bind=\"props\"\n\n        @click=\"pickColor=true\"\n        readonly\n        dense\n        outlined\n    >\n\n        <template v-slot:append>\n            <v-menu \n                v-model=\"pickColor\" \n                top \n                nudge-bottom=\"105\" \n                nudge-left=\"16\" \n                :close-on-content-click=\"false\"\n            >\n\n                <template v-slot:activator=\"{ on }\">\n                    <div :style=\"swatchStyle(value)\" v-on=\"on\" />\n                </template>\n                <v-card>\n                    <v-card-text class=\"pa-0\">\n                        <v-color-picker \n                            flat \n                            :value=\"value\"\n                            :label=\"label\"\n                            @input=\"update($event)\"\n                            v-bind=\"secondaryProps\"\n                        />\n                    </v-card-text>\n                </v-card>\n            </v-menu>\n        </template>\n    </v-text-field>\n</template>\n\n<script>\nimport { InputMixin } from '@/mixins'\n\nexport default {\n    mixins: [InputMixin],\n    data() {\n        return {\n            pickColor: false,\n            mask: '!XNNNNNNNN',\n        }\n    },\n\n    methods: {\n        swatchStyle(color){\n            const { pickColor } = this\n            return {\n                backgroundColor: color,\n                cursor: 'pointer',\n                height: '30px',\n                width: '30px',\n                borderRadius: pickColor ? '50%' : '4px',\n                transition: 'border-radius 200ms ease-in-out',\n                marginTop: '-3px',\n            }\n        },\n    }\n}\n</script>"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}