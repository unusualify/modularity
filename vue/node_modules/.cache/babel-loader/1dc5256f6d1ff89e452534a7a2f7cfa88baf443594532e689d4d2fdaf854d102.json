{"ast":null,"code":"import _slicedToArray from \"/var/www/crm_template/packages/oobook/crm-base/vue/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _regeneratorRuntime from \"/var/www/crm_template/packages/oobook/crm-base/vue/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/var/www/crm_template/packages/oobook/crm-base/vue/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _toConsumableArray from \"/var/www/crm_template/packages/oobook/crm-base/vue/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"/var/www/crm_template/packages/oobook/crm-base/vue/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport { mergeProps as _mergeProps, createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VDialog.css\";\n\n// Components\nimport { VDialogTransition } from \"../transitions/index.mjs\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\";\nimport { VOverlay } from \"../VOverlay/index.mjs\"; // Composables\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\";\nimport { useScopeId } from \"../../composables/scopeId.mjs\";\nimport { forwardRefs } from \"../../composables/forwardRefs.mjs\"; // Utilities\nimport { computed, mergeProps, nextTick, ref, watch } from 'vue';\nimport { genericComponent, IN_BROWSER, useRender } from \"../../util/index.mjs\";\nimport { filterVOverlayProps, makeVOverlayProps } from \"../VOverlay/VOverlay.mjs\"; // Types\nexport var VDialog = genericComponent()({\n  name: 'VDialog',\n  props: _objectSpread({\n    fullscreen: Boolean,\n    retainFocus: {\n      type: Boolean,\n      \"default\": true\n    },\n    scrollable: Boolean\n  }, makeVOverlayProps({\n    origin: 'center center',\n    scrollStrategy: 'block',\n    transition: {\n      component: VDialogTransition\n    },\n    zIndex: 2400\n  })),\n  emits: {\n    'update:modelValue': function updateModelValue(value) {\n      return true;\n    }\n  },\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n    var isActive = useProxiedModel(props, 'modelValue');\n    var _useScopeId = useScopeId(),\n      scopeId = _useScopeId.scopeId;\n    var overlay = ref();\n    function onFocusin(e) {\n      var _overlay$value, _overlay$value2;\n      var before = e.relatedTarget;\n      var after = e.target;\n      if (before !== after && (_overlay$value = overlay.value) !== null && _overlay$value !== void 0 && _overlay$value.contentEl && // We're the topmost dialog\n      (_overlay$value2 = overlay.value) !== null && _overlay$value2 !== void 0 && _overlay$value2.globalTop &&\n      // It isn't the document or the dialog body\n      ![document, overlay.value.contentEl].includes(after) &&\n      // It isn't inside the dialog body\n      !overlay.value.contentEl.contains(after)) {\n        var focusable = _toConsumableArray(overlay.value.contentEl.querySelectorAll('button, [href], input:not([type=\"hidden\"]), select, textarea, [tabindex]:not([tabindex=\"-1\"])')).filter(function (el) {\n          return !el.hasAttribute('disabled') && !el.matches('[tabindex=\"-1\"]');\n        });\n        if (!focusable.length) return;\n        var firstElement = focusable[0];\n        var lastElement = focusable[focusable.length - 1];\n        if (before === firstElement) {\n          lastElement.focus();\n        } else {\n          firstElement.focus();\n        }\n      }\n    }\n    if (IN_BROWSER) {\n      watch(function () {\n        return isActive.value && props.retainFocus;\n      }, function (val) {\n        val ? document.addEventListener('focusin', onFocusin) : document.removeEventListener('focusin', onFocusin);\n      }, {\n        immediate: true\n      });\n    }\n    watch(isActive, /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(val) {\n        var _overlay$value$conten, _overlay$value$activa;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return nextTick();\n            case 2:\n              if (val) {\n                (_overlay$value$conten = overlay.value.contentEl) === null || _overlay$value$conten === void 0 ? void 0 : _overlay$value$conten.focus({\n                  preventScroll: true\n                });\n              } else {\n                (_overlay$value$activa = overlay.value.activatorEl) === null || _overlay$value$activa === void 0 ? void 0 : _overlay$value$activa.focus({\n                  preventScroll: true\n                });\n              }\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    var activatorProps = computed(function () {\n      return mergeProps({\n        'aria-haspopup': 'dialog',\n        'aria-expanded': String(isActive.value)\n      }, props.activatorProps);\n    });\n    useRender(function () {\n      var _filterVOverlayProps = filterVOverlayProps(props),\n        _filterVOverlayProps2 = _slicedToArray(_filterVOverlayProps, 1),\n        overlayProps = _filterVOverlayProps2[0];\n      return _createVNode(VOverlay, _mergeProps({\n        \"ref\": overlay,\n        \"class\": ['v-dialog', {\n          'v-dialog--fullscreen': props.fullscreen,\n          'v-dialog--scrollable': props.scrollable\n        }]\n      }, overlayProps, {\n        \"modelValue\": isActive.value,\n        \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n          return isActive.value = $event;\n        },\n        \"aria-role\": \"dialog\",\n        \"aria-modal\": \"true\",\n        \"activatorProps\": activatorProps.value\n      }, scopeId), {\n        activator: slots.activator,\n        \"default\": function _default() {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n          return _createVNode(VDefaultsProvider, {\n            \"root\": true\n          }, {\n            \"default\": function _default() {\n              var _slots$default;\n              return [(_slots$default = slots[\"default\"]) === null || _slots$default === void 0 ? void 0 : _slots$default.call.apply(_slots$default, [slots].concat(args))];\n            }\n          });\n        }\n      });\n    });\n    return forwardRefs({}, overlay);\n  }\n});","map":{"version":3,"names":["VDialogTransition","VDefaultsProvider","VOverlay","useProxiedModel","useScopeId","forwardRefs","computed","mergeProps","nextTick","ref","watch","genericComponent","IN_BROWSER","useRender","filterVOverlayProps","makeVOverlayProps","VDialog","name","props","_objectSpread","fullscreen","Boolean","retainFocus","type","scrollable","origin","scrollStrategy","transition","component","zIndex","emits","updateModelValue","value","setup","_ref","slots","isActive","_useScopeId","scopeId","overlay","onFocusin","e","_overlay$value","_overlay$value2","before","relatedTarget","after","target","contentEl","globalTop","document","includes","contains","focusable","_toConsumableArray","querySelectorAll","filter","el","hasAttribute","matches","length","firstElement","lastElement","focus","val","addEventListener","removeEventListener","immediate","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_overlay$value$conten","_overlay$value$activa","wrap","_callee$","_context","prev","next","preventScroll","activatorEl","stop","_x","apply","arguments","activatorProps","String","_filterVOverlayProps","_filterVOverlayProps2","_slicedToArray","overlayProps","_createVNode","_mergeProps","onUpdateModelValue","$event","activator","_default","_len","args","Array","_key","_slots$default","call","concat"],"sources":["../../../src/components/VDialog/VDialog.tsx"],"sourcesContent":["// Styles\nimport './VDialog.sass'\n\n// Components\nimport { VDialogTransition } from '@/components/transitions'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VOverlay } from '@/components/VOverlay'\n\n// Composables\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { useScopeId } from '@/composables/scopeId'\nimport { forwardRefs } from '@/composables/forwardRefs'\n\n// Utilities\nimport { computed, mergeProps, nextTick, ref, watch } from 'vue'\nimport { genericComponent, IN_BROWSER, useRender } from '@/util'\nimport { filterVOverlayProps, makeVOverlayProps } from '@/components/VOverlay/VOverlay'\n\n// Types\nimport type { OverlaySlots } from '@/components/VOverlay/VOverlay'\n\nexport const VDialog = genericComponent<OverlaySlots>()({\n  name: 'VDialog',\n\n  props: {\n    fullscreen: Boolean,\n    retainFocus: {\n      type: Boolean,\n      default: true,\n    },\n    scrollable: Boolean,\n\n    ...makeVOverlayProps({\n      origin: 'center center' as const,\n      scrollStrategy: 'block' as const,\n      transition: { component: VDialogTransition },\n      zIndex: 2400,\n    }),\n  },\n\n  emits: {\n    'update:modelValue': (value: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const isActive = useProxiedModel(props, 'modelValue')\n    const { scopeId } = useScopeId()\n\n    const overlay = ref<VOverlay>()\n    function onFocusin (e: FocusEvent) {\n      const before = e.relatedTarget as HTMLElement | null\n      const after = e.target as HTMLElement | null\n\n      if (\n        before !== after &&\n        overlay.value?.contentEl &&\n        // We're the topmost dialog\n        overlay.value?.globalTop &&\n        // It isn't the document or the dialog body\n        ![document, overlay.value.contentEl].includes(after!) &&\n        // It isn't inside the dialog body\n        !overlay.value.contentEl.contains(after)\n      ) {\n        const focusable = [...overlay.value.contentEl.querySelectorAll(\n          'button, [href], input:not([type=\"hidden\"]), select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n        )].filter(el => !el.hasAttribute('disabled') && !el.matches('[tabindex=\"-1\"]')) as HTMLElement[]\n\n        if (!focusable.length) return\n\n        const firstElement = focusable[0]\n        const lastElement = focusable[focusable.length - 1]\n\n        if (before === firstElement) {\n          lastElement.focus()\n        } else {\n          firstElement.focus()\n        }\n      }\n    }\n\n    if (IN_BROWSER) {\n      watch(() => isActive.value && props.retainFocus, val => {\n        val\n          ? document.addEventListener('focusin', onFocusin)\n          : document.removeEventListener('focusin', onFocusin)\n      }, { immediate: true })\n    }\n\n    watch(isActive, async val => {\n      await nextTick()\n      if (val) {\n        overlay.value!.contentEl?.focus({ preventScroll: true })\n      } else {\n        overlay.value!.activatorEl?.focus({ preventScroll: true })\n      }\n    })\n\n    const activatorProps = computed(() =>\n      mergeProps({\n        'aria-haspopup': 'dialog',\n        'aria-expanded': String(isActive.value),\n      }, props.activatorProps)\n    )\n\n    useRender(() => {\n      const [overlayProps] = filterVOverlayProps(props)\n\n      return (\n        <VOverlay\n          ref={ overlay }\n          class={[\n            'v-dialog',\n            {\n              'v-dialog--fullscreen': props.fullscreen,\n              'v-dialog--scrollable': props.scrollable,\n            },\n          ]}\n          { ...overlayProps }\n          v-model={ isActive.value }\n          aria-role=\"dialog\"\n          aria-modal=\"true\"\n          activatorProps={ activatorProps.value }\n          { ...scopeId }\n        >\n          {{\n            activator: slots.activator,\n            default: (...args) => (\n              <VDefaultsProvider root>\n                { slots.default?.(...args) }\n              </VDefaultsProvider>\n            ),\n          }}\n        </VOverlay>\n      )\n    })\n\n    return forwardRefs({}, overlay)\n  },\n})\n\nexport type VDialog = InstanceType<typeof VDialog>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}