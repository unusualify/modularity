{"ast":null,"code":"import axios from 'axios';\nimport { globalError } from '@/utils/errors';\nconst component = 'MEDIA-LIBRARY';\nexport default {\n  get(endpoint, params, callback, errorCallback) {\n    // Params\n    //\n    // Form datas : query, page\n\n    // Set endpoint in global config\n    axios.get(endpoint, {\n      params: params\n    }).then(function (resp) {\n      if (callback && typeof callback === 'function') callback(resp);\n    }, function (resp) {\n      // error callback\n      const error = {\n        message: 'Media library get error.',\n        value: resp\n      };\n      globalError(component, error);\n      if (errorCallback && typeof errorCallback === 'function') errorCallback(resp);\n    });\n  },\n  update(endpoint, params, callback, errorCallback) {\n    axios.put(endpoint, params).then(function (resp) {\n      if (callback && typeof callback === 'function') callback(resp);\n    }, function (resp) {\n      // error callback\n      const error = {\n        message: 'Media library update error.',\n        value: resp\n      };\n      globalError(component, error);\n      if (errorCallback && typeof errorCallback === 'function') errorCallback(resp);\n    });\n  },\n  delete(endpoint, callback, errorCallback) {\n    axios.delete(endpoint).then(function (resp) {\n      if (callback && typeof callback === 'function') callback(resp);\n    }, function (resp) {\n      // error callback\n      const error = {\n        message: 'Media library delete error.',\n        value: resp\n      };\n      globalError(component, error);\n      if (errorCallback && typeof errorCallback === 'function') errorCallback(resp);\n    });\n  },\n  bulkDelete(endpoint, params, callback, errorCallback) {\n    axios.put(endpoint, params).then(function (resp) {\n      if (callback && typeof callback === 'function') callback(resp);\n    }, function (resp) {\n      // error callback\n      const error = {\n        message: 'Media library bulk delete error.',\n        value: resp\n      };\n      globalError(component, error);\n      if (errorCallback && typeof errorCallback === 'function') errorCallback(resp);\n    });\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}