{"ast":null,"code":"import _objectSpread from \"/var/www/crm_template/packages/oobook/crm-base/vue/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/var/www/crm_template/packages/oobook/crm-base/vue/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _createForOfIteratorHelper from \"/var/www/crm_template/packages/oobook/crm-base/vue/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _toConsumableArray from \"/var/www/crm_template/packages/oobook/crm-base/vue/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/var/www/crm_template/packages/oobook/crm-base/vue/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _excluded = [\"selected\", \"id\"],\n  _excluded2 = [\"id\", \"selected\", \"children\"],\n  _excluded3 = [\"id\", \"selected\", \"children\"];\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.every.js\";\n/* eslint-disable sonarjs/no-identical-functions */\nimport { toRaw } from 'vue';\nexport var independentSelectStrategy = function independentSelectStrategy(mandatory) {\n  var strategy = {\n    select: function select(_ref) {\n      var id = _ref.id,\n        value = _ref.value,\n        selected = _ref.selected;\n      id = toRaw(id);\n\n      // When mandatory and we're trying to deselect when id\n      // is the only currently selected item then do nothing\n      if (mandatory && !value) {\n        var on = Array.from(selected.entries()).reduce(function (arr, _ref2) {\n          var _ref8 = _slicedToArray(_ref2, 2),\n            key = _ref8[0],\n            value = _ref8[1];\n          return value === 'on' ? [].concat(_toConsumableArray(arr), [key]) : arr;\n        }, []);\n        if (on.length === 1 && on[0] === id) return selected;\n      }\n      selected.set(id, value ? 'on' : 'off');\n      return selected;\n    },\n    \"in\": function _in(v, children, parents) {\n      var map = new Map();\n      var _iterator = _createForOfIteratorHelper(v || []),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var id = _step.value;\n          map = strategy.select({\n            id: id,\n            value: true,\n            selected: new Map(map),\n            children: children,\n            parents: parents\n          });\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      return map;\n    },\n    out: function out(v) {\n      var arr = [];\n      var _iterator2 = _createForOfIteratorHelper(v.entries()),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _step2$value = _slicedToArray(_step2.value, 2),\n            key = _step2$value[0],\n            value = _step2$value[1];\n          if (value === 'on') arr.push(key);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      return arr;\n    }\n  };\n  return strategy;\n};\nexport var independentSingleSelectStrategy = function independentSingleSelectStrategy(mandatory) {\n  var parentStrategy = independentSelectStrategy(mandatory);\n  var strategy = {\n    select: function select(_ref3) {\n      var selected = _ref3.selected,\n        id = _ref3.id,\n        rest = _objectWithoutProperties(_ref3, _excluded);\n      id = toRaw(id);\n      var singleSelected = selected.has(id) ? new Map([[id, selected.get(id)]]) : new Map();\n      return parentStrategy.select(_objectSpread(_objectSpread({}, rest), {}, {\n        id: id,\n        selected: singleSelected\n      }));\n    },\n    \"in\": function _in(v, children, parents) {\n      var map = new Map();\n      if (v !== null && v !== void 0 && v.length) {\n        map = parentStrategy[\"in\"](v.slice(0, 1), children, parents);\n      }\n      return map;\n    },\n    out: function out(v, children, parents) {\n      return parentStrategy.out(v, children, parents);\n    }\n  };\n  return strategy;\n};\nexport var leafSelectStrategy = function leafSelectStrategy(mandatory) {\n  var parentStrategy = independentSelectStrategy(mandatory);\n  var strategy = {\n    select: function select(_ref4) {\n      var id = _ref4.id,\n        selected = _ref4.selected,\n        children = _ref4.children,\n        rest = _objectWithoutProperties(_ref4, _excluded2);\n      id = toRaw(id);\n      if (children.has(id)) return selected;\n      return parentStrategy.select(_objectSpread({\n        id: id,\n        selected: selected,\n        children: children\n      }, rest));\n    },\n    \"in\": parentStrategy[\"in\"],\n    out: parentStrategy.out\n  };\n  return strategy;\n};\nexport var leafSingleSelectStrategy = function leafSingleSelectStrategy(mandatory) {\n  var parentStrategy = independentSingleSelectStrategy(mandatory);\n  var strategy = {\n    select: function select(_ref5) {\n      var id = _ref5.id,\n        selected = _ref5.selected,\n        children = _ref5.children,\n        rest = _objectWithoutProperties(_ref5, _excluded3);\n      id = toRaw(id);\n      if (children.has(id)) return selected;\n      return parentStrategy.select(_objectSpread({\n        id: id,\n        selected: selected,\n        children: children\n      }, rest));\n    },\n    \"in\": parentStrategy[\"in\"],\n    out: parentStrategy.out\n  };\n  return strategy;\n};\nexport var classicSelectStrategy = function classicSelectStrategy(mandatory) {\n  var strategy = {\n    select: function select(_ref6) {\n      var id = _ref6.id,\n        value = _ref6.value,\n        selected = _ref6.selected,\n        children = _ref6.children,\n        parents = _ref6.parents;\n      id = toRaw(id);\n      var original = new Map(selected);\n      var items = [id];\n      while (items.length) {\n        var item = items.shift();\n        selected.set(item, value ? 'on' : 'off');\n        if (children.has(item)) {\n          items.push.apply(items, _toConsumableArray(children.get(item)));\n        }\n      }\n      var parent = parents.get(id);\n      while (parent) {\n        var childrenIds = children.get(parent);\n        var everySelected = childrenIds.every(function (cid) {\n          return selected.get(cid) === 'on';\n        });\n        var noneSelected = childrenIds.every(function (cid) {\n          return !selected.has(cid) || selected.get(cid) === 'off';\n        });\n        selected.set(parent, everySelected ? 'on' : noneSelected ? 'off' : 'indeterminate');\n        parent = parents.get(parent);\n      }\n\n      // If mandatory and planned deselect results in no selected\n      // items then we can't do it, so return original state\n      if (mandatory && !value) {\n        var on = Array.from(selected.entries()).reduce(function (arr, _ref7) {\n          var _ref9 = _slicedToArray(_ref7, 2),\n            key = _ref9[0],\n            value = _ref9[1];\n          return value === 'on' ? [].concat(_toConsumableArray(arr), [key]) : arr;\n        }, []);\n        if (on.length === 0) return original;\n      }\n      return selected;\n    },\n    \"in\": function _in(v, children, parents) {\n      var map = new Map();\n      var _iterator3 = _createForOfIteratorHelper(v || []),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var id = _step3.value;\n          map = strategy.select({\n            id: id,\n            value: true,\n            selected: new Map(map),\n            children: children,\n            parents: parents\n          });\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      return map;\n    },\n    out: function out(v, children) {\n      var arr = [];\n      var _iterator4 = _createForOfIteratorHelper(v.entries()),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var _step4$value = _slicedToArray(_step4.value, 2),\n            key = _step4$value[0],\n            value = _step4$value[1];\n          if (value === 'on' && !children.has(key)) arr.push(key);\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n      return arr;\n    }\n  };\n  return strategy;\n};","map":{"version":3,"names":["toRaw","independentSelectStrategy","mandatory","strategy","select","_ref","id","value","selected","on","Array","from","entries","reduce","arr","_ref2","_ref8","_slicedToArray","key","concat","_toConsumableArray","length","set","_in","v","children","parents","map","Map","_iterator","_createForOfIteratorHelper","_step","s","n","done","err","e","f","out","_iterator2","_step2","_step2$value","push","independentSingleSelectStrategy","parentStrategy","_ref3","rest","_objectWithoutProperties","_excluded","singleSelected","has","get","_objectSpread","slice","leafSelectStrategy","_ref4","_excluded2","leafSingleSelectStrategy","_ref5","_excluded3","classicSelectStrategy","_ref6","original","items","item","shift","apply","parent","childrenIds","everySelected","every","cid","noneSelected","_ref7","_ref9","_iterator3","_step3","_iterator4","_step4","_step4$value"],"sources":["../../../src/composables/nested/selectStrategies.ts"],"sourcesContent":["/* eslint-disable sonarjs/no-identical-functions */\nimport { toRaw } from 'vue'\n\nexport type SelectStrategyFn = (data: {\n  id: unknown\n  value: boolean\n  selected: Map<unknown, 'on' | 'off' | 'indeterminate'>\n  children: Map<unknown, unknown[]>\n  parents: Map<unknown, unknown>\n  event?: Event\n}) => Map<unknown, 'on' | 'off' | 'indeterminate'>\n\nexport type SelectStrategyTransformInFn = (\n  v: unknown[] | undefined,\n  children: Map<unknown, unknown[]>,\n  parents: Map<unknown, unknown>,\n) => Map<unknown, 'on' | 'off' | 'indeterminate'>\n\nexport type SelectStrategyTransformOutFn = (\n  v: Map<unknown, 'on' | 'off' | 'indeterminate'>,\n  children: Map<unknown, unknown[]>,\n  parents: Map<unknown, unknown>,\n) => unknown[]\n\nexport type SelectStrategy = {\n  select: SelectStrategyFn\n  in: SelectStrategyTransformInFn\n  out: SelectStrategyTransformOutFn\n}\n\nexport const independentSelectStrategy = (mandatory?: boolean): SelectStrategy => {\n  const strategy: SelectStrategy = {\n    select: ({ id, value, selected }) => {\n      id = toRaw(id)\n\n      // When mandatory and we're trying to deselect when id\n      // is the only currently selected item then do nothing\n      if (mandatory && !value) {\n        const on = Array.from(selected.entries()).reduce((arr, [key, value]) => value === 'on' ? [...arr, key] : arr, [] as unknown[])\n        if (on.length === 1 && on[0] === id) return selected\n      }\n\n      selected.set(id, value ? 'on' : 'off')\n\n      return selected\n    },\n    in: (v, children, parents) => {\n      let map = new Map()\n\n      for (const id of (v || [])) {\n        map = strategy.select({\n          id,\n          value: true,\n          selected: new Map(map),\n          children,\n          parents,\n        })\n      }\n\n      return map\n    },\n    out: v => {\n      const arr = []\n\n      for (const [key, value] of v.entries()) {\n        if (value === 'on') arr.push(key)\n      }\n\n      return arr\n    },\n  }\n\n  return strategy\n}\n\nexport const independentSingleSelectStrategy = (mandatory?: boolean): SelectStrategy => {\n  const parentStrategy = independentSelectStrategy(mandatory)\n\n  const strategy: SelectStrategy = {\n    select: ({ selected, id, ...rest }) => {\n      id = toRaw(id)\n      const singleSelected = selected.has(id) ? new Map([[id, selected.get(id)!]]) : new Map()\n      return parentStrategy.select({ ...rest, id, selected: singleSelected })\n    },\n    in: (v, children, parents) => {\n      let map = new Map()\n\n      if (v?.length) {\n        map = parentStrategy.in(v.slice(0, 1), children, parents)\n      }\n\n      return map\n    },\n    out: (v, children, parents) => {\n      return parentStrategy.out(v, children, parents)\n    },\n  }\n\n  return strategy\n}\n\nexport const leafSelectStrategy = (mandatory?: boolean): SelectStrategy => {\n  const parentStrategy = independentSelectStrategy(mandatory)\n\n  const strategy: SelectStrategy = {\n    select: ({ id, selected, children, ...rest }) => {\n      id = toRaw(id)\n      if (children.has(id)) return selected\n\n      return parentStrategy.select({ id, selected, children, ...rest })\n    },\n    in: parentStrategy.in,\n    out: parentStrategy.out,\n  }\n\n  return strategy\n}\n\nexport const leafSingleSelectStrategy = (mandatory?: boolean): SelectStrategy => {\n  const parentStrategy = independentSingleSelectStrategy(mandatory)\n\n  const strategy: SelectStrategy = {\n    select: ({ id, selected, children, ...rest }) => {\n      id = toRaw(id)\n      if (children.has(id)) return selected\n\n      return parentStrategy.select({ id, selected, children, ...rest })\n    },\n    in: parentStrategy.in,\n    out: parentStrategy.out,\n  }\n\n  return strategy\n}\n\nexport const classicSelectStrategy = (mandatory?: boolean): SelectStrategy => {\n  const strategy: SelectStrategy = {\n    select: ({ id, value, selected, children, parents }) => {\n      id = toRaw(id)\n      const original = new Map(selected)\n\n      const items = [id]\n\n      while (items.length) {\n        const item = items.shift()!\n\n        selected.set(item, value ? 'on' : 'off')\n\n        if (children.has(item)) {\n          items.push(...children.get(item)!)\n        }\n      }\n\n      let parent = parents.get(id)\n\n      while (parent) {\n        const childrenIds = children.get(parent)!\n        const everySelected = childrenIds.every(cid => selected.get(cid) === 'on')\n        const noneSelected = childrenIds.every(cid => !selected.has(cid) || selected.get(cid) === 'off')\n\n        selected.set(parent, everySelected ? 'on' : noneSelected ? 'off' : 'indeterminate')\n\n        parent = parents.get(parent)\n      }\n\n      // If mandatory and planned deselect results in no selected\n      // items then we can't do it, so return original state\n      if (mandatory && !value) {\n        const on = Array.from(selected.entries()).reduce((arr, [key, value]) => value === 'on' ? [...arr, key] : arr, [] as unknown[])\n        if (on.length === 0) return original\n      }\n\n      return selected\n    },\n    in: (v, children, parents) => {\n      let map = new Map()\n\n      for (const id of (v || [])) {\n        map = strategy.select({\n          id,\n          value: true,\n          selected: new Map(map),\n          children,\n          parents,\n        })\n      }\n\n      return map\n    },\n    out: (v, children) => {\n      const arr = []\n\n      for (const [key, value] of v.entries()) {\n        if (value === 'on' && !children.has(key)) arr.push(key)\n      }\n\n      return arr\n    },\n  }\n\n  return strategy\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}