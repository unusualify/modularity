{"ast":null,"code":"import _objectSpread from \"/var/www/crm_template/packages/oobook/crm-base/vue/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/var/www/crm_template/packages/oobook/crm-base/vue/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"modelValue\", \"color\"];\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport { withDirectives as _withDirectives, resolveDirective as _resolveDirective, vShow as _vShow, Fragment as _Fragment, createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\n// Styles\nimport \"./VOverlay.css\";\n\n// Composables\nimport { makeActivatorProps, useActivator } from \"./useActivator.mjs\";\nimport { makeDimensionProps, useDimension } from \"../../composables/dimensions.mjs\";\nimport { makeLazyProps, useLazy } from \"../../composables/lazy.mjs\";\nimport { makeLocationStrategyProps, useLocationStrategies } from \"./locationStrategies.mjs\";\nimport { makeScrollStrategyProps, useScrollStrategies } from \"./scrollStrategies.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { makeTransitionProps, MaybeTransition } from \"../../composables/transition.mjs\";\nimport { useBackButton, useRouter } from \"../../composables/router.mjs\";\nimport { useBackgroundColor } from \"../../composables/color.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\";\nimport { useHydration } from \"../../composables/hydration.mjs\";\nimport { useRtl } from \"../../composables/locale.mjs\";\nimport { useScopeId } from \"../../composables/scopeId.mjs\";\nimport { useStack } from \"../../composables/stack.mjs\";\nimport { useTeleport } from \"../../composables/teleport.mjs\";\nimport { useToggleScope } from \"../../composables/toggleScope.mjs\"; // Directives\nimport { ClickOutside } from \"../../directives/click-outside/index.mjs\"; // Utilities\nimport { animate, convertToUnit, genericComponent, getScrollParent, IN_BROWSER, pick, propsFactory, standardEasing, useRender } from \"../../util/index.mjs\";\nimport { computed, mergeProps, ref, Teleport, toHandlers, toRef, Transition, watch } from 'vue';\n\n// Types\n\nfunction Scrim(props) {\n  var modelValue = props.modelValue,\n    color = props.color,\n    rest = _objectWithoutProperties(props, _excluded);\n  return _createVNode(Transition, {\n    \"name\": \"fade-transition\",\n    \"appear\": true\n  }, {\n    \"default\": function _default() {\n      return [props.modelValue && _createVNode(\"div\", _mergeProps({\n        \"class\": ['v-overlay__scrim', props.color.backgroundColorClasses.value],\n        \"style\": props.color.backgroundColorStyles.value\n      }, rest), null)];\n    }\n  });\n}\nexport var makeVOverlayProps = propsFactory(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({\n  absolute: Boolean,\n  attach: [Boolean, String, Object],\n  closeOnBack: {\n    type: Boolean,\n    \"default\": true\n  },\n  contained: Boolean,\n  contentClass: null,\n  contentProps: null,\n  disabled: Boolean,\n  noClickAnimation: Boolean,\n  modelValue: Boolean,\n  persistent: Boolean,\n  scrim: {\n    type: [String, Boolean],\n    \"default\": true\n  },\n  zIndex: {\n    type: [Number, String],\n    \"default\": 2000\n  }\n}, makeActivatorProps()), makeDimensionProps()), makeLazyProps()), makeLocationStrategyProps()), makeScrollStrategyProps()), makeThemeProps()), makeTransitionProps()), 'v-overlay');\nexport var VOverlay = genericComponent()({\n  name: 'VOverlay',\n  directives: {\n    ClickOutside: ClickOutside\n  },\n  inheritAttrs: false,\n  props: _objectSpread({\n    _disableGlobalStack: Boolean\n  }, makeVOverlayProps()),\n  emits: {\n    'click:outside': function clickOutside(e) {\n      return true;\n    },\n    'update:modelValue': function updateModelValue(value) {\n      return true;\n    },\n    afterLeave: function afterLeave() {\n      return true;\n    }\n  },\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots,\n      attrs = _ref.attrs,\n      emit = _ref.emit;\n    var model = useProxiedModel(props, 'modelValue');\n    var isActive = computed({\n      get: function get() {\n        return model.value;\n      },\n      set: function set(v) {\n        if (!(v && props.disabled)) model.value = v;\n      }\n    });\n    var _useTeleport = useTeleport(computed(function () {\n        return props.attach || props.contained;\n      })),\n      teleportTarget = _useTeleport.teleportTarget;\n    var _provideTheme = provideTheme(props),\n      themeClasses = _provideTheme.themeClasses;\n    var _useRtl = useRtl(),\n      rtlClasses = _useRtl.rtlClasses,\n      isRtl = _useRtl.isRtl;\n    var _useLazy = useLazy(props, isActive),\n      hasContent = _useLazy.hasContent,\n      _onAfterLeave = _useLazy.onAfterLeave;\n    var scrimColor = useBackgroundColor(computed(function () {\n      return typeof props.scrim === 'string' ? props.scrim : null;\n    }));\n    var _useStack = useStack(isActive, toRef(props, 'zIndex'), props._disableGlobalStack),\n      globalTop = _useStack.globalTop,\n      localTop = _useStack.localTop,\n      stackStyles = _useStack.stackStyles;\n    var _useActivator = useActivator(props, {\n        isActive: isActive,\n        isTop: localTop\n      }),\n      activatorEl = _useActivator.activatorEl,\n      activatorRef = _useActivator.activatorRef,\n      activatorEvents = _useActivator.activatorEvents,\n      contentEvents = _useActivator.contentEvents,\n      scrimEvents = _useActivator.scrimEvents;\n    var _useDimension = useDimension(props),\n      dimensionStyles = _useDimension.dimensionStyles;\n    var isMounted = useHydration();\n    var _useScopeId = useScopeId(),\n      scopeId = _useScopeId.scopeId;\n    watch(function () {\n      return props.disabled;\n    }, function (v) {\n      if (v) isActive.value = false;\n    });\n    var root = ref();\n    var contentEl = ref();\n    var _useLocationStrategie = useLocationStrategies(props, {\n        isRtl: isRtl,\n        contentEl: contentEl,\n        activatorEl: activatorEl,\n        isActive: isActive\n      }),\n      contentStyles = _useLocationStrategie.contentStyles,\n      updateLocation = _useLocationStrategie.updateLocation;\n    useScrollStrategies(props, {\n      root: root,\n      contentEl: contentEl,\n      activatorEl: activatorEl,\n      isActive: isActive,\n      updateLocation: updateLocation\n    });\n    function onClickOutside(e) {\n      emit('click:outside', e);\n      if (!props.persistent) isActive.value = false;else animateClick();\n    }\n    function closeConditional() {\n      return isActive.value && globalTop.value;\n    }\n    IN_BROWSER && watch(isActive, function (val) {\n      if (val) {\n        window.addEventListener('keydown', onKeydown);\n      } else {\n        window.removeEventListener('keydown', onKeydown);\n      }\n    }, {\n      immediate: true\n    });\n    function onKeydown(e) {\n      if (e.key === 'Escape' && globalTop.value) {\n        if (!props.persistent) {\n          isActive.value = false;\n        } else animateClick();\n      }\n    }\n    var router = useRouter();\n    useToggleScope(function () {\n      return props.closeOnBack;\n    }, function () {\n      useBackButton(router, function (next) {\n        if (globalTop.value && isActive.value) {\n          next(false);\n          if (!props.persistent) isActive.value = false;else animateClick();\n        } else {\n          next();\n        }\n      });\n    });\n    var top = ref();\n    watch(function () {\n      return isActive.value && (props.absolute || props.contained) && teleportTarget.value == null;\n    }, function (val) {\n      if (val) {\n        var scrollParent = getScrollParent(root.value);\n        if (scrollParent && scrollParent !== document.scrollingElement) {\n          top.value = scrollParent.scrollTop;\n        }\n      }\n    });\n\n    // Add a quick \"bounce\" animation to the content\n    function animateClick() {\n      if (props.noClickAnimation) return;\n      contentEl.value && animate(contentEl.value, [{\n        transformOrigin: 'center'\n      }, {\n        transform: 'scale(1.03)'\n      }, {\n        transformOrigin: 'center'\n      }], {\n        duration: 150,\n        easing: standardEasing\n      });\n    }\n    useRender(function () {\n      var _slots$activator;\n      return _createVNode(_Fragment, null, [(_slots$activator = slots.activator) === null || _slots$activator === void 0 ? void 0 : _slots$activator.call(slots, {\n        isActive: isActive.value,\n        props: mergeProps({\n          ref: activatorRef\n        }, toHandlers(activatorEvents.value), props.activatorProps)\n      }), isMounted.value && _createVNode(Teleport, {\n        \"disabled\": !teleportTarget.value,\n        \"to\": teleportTarget.value\n      }, {\n        \"default\": function _default() {\n          return [hasContent.value && _createVNode(\"div\", _mergeProps({\n            \"class\": ['v-overlay', {\n              'v-overlay--absolute': props.absolute || props.contained,\n              'v-overlay--active': isActive.value,\n              'v-overlay--contained': props.contained\n            }, themeClasses.value, rtlClasses.value],\n            \"style\": [stackStyles.value, {\n              top: convertToUnit(top.value)\n            }],\n            \"ref\": root\n          }, scopeId, attrs), [_createVNode(Scrim, _mergeProps({\n            \"color\": scrimColor,\n            \"modelValue\": isActive.value && !!props.scrim\n          }, toHandlers(scrimEvents.value)), null), _createVNode(MaybeTransition, {\n            \"appear\": true,\n            \"persisted\": true,\n            \"transition\": props.transition,\n            \"target\": activatorEl.value,\n            \"onAfterLeave\": function onAfterLeave() {\n              _onAfterLeave();\n              emit('afterLeave');\n            }\n          }, {\n            \"default\": function _default() {\n              var _slots$default;\n              return [_withDirectives(_createVNode(\"div\", _mergeProps({\n                \"ref\": contentEl,\n                \"class\": ['v-overlay__content', props.contentClass],\n                \"style\": [dimensionStyles.value, contentStyles.value]\n              }, toHandlers(contentEvents.value), props.contentProps), [(_slots$default = slots[\"default\"]) === null || _slots$default === void 0 ? void 0 : _slots$default.call(slots, {\n                isActive: isActive\n              })]), [[_vShow, isActive.value], [_resolveDirective(\"click-outside\"), {\n                handler: onClickOutside,\n                closeConditional: closeConditional,\n                include: function include() {\n                  return [activatorEl.value];\n                }\n              }]])];\n            }\n          })])];\n        }\n      })]);\n    });\n    return {\n      activatorEl: activatorEl,\n      animateClick: animateClick,\n      contentEl: contentEl,\n      globalTop: globalTop,\n      localTop: localTop,\n      updateLocation: updateLocation\n    };\n  }\n});\nexport function filterVOverlayProps(props) {\n  return pick(props, Object.keys(VOverlay.props));\n}","map":{"version":3,"names":["makeActivatorProps","useActivator","makeDimensionProps","useDimension","makeLazyProps","useLazy","makeLocationStrategyProps","useLocationStrategies","makeScrollStrategyProps","useScrollStrategies","makeThemeProps","provideTheme","makeTransitionProps","MaybeTransition","useBackButton","useRouter","useBackgroundColor","useProxiedModel","useHydration","useRtl","useScopeId","useStack","useTeleport","useToggleScope","ClickOutside","animate","convertToUnit","genericComponent","getScrollParent","IN_BROWSER","pick","propsFactory","standardEasing","useRender","computed","mergeProps","ref","Teleport","toHandlers","toRef","Transition","watch","Scrim","props","modelValue","color","rest","_objectWithoutProperties","_excluded","_createVNode","_default","_mergeProps","backgroundColorClasses","value","backgroundColorStyles","makeVOverlayProps","_objectSpread","absolute","Boolean","attach","String","Object","closeOnBack","type","contained","contentClass","contentProps","disabled","noClickAnimation","persistent","scrim","zIndex","Number","VOverlay","name","directives","inheritAttrs","_disableGlobalStack","emits","clickOutside","e","updateModelValue","afterLeave","setup","_ref","slots","attrs","emit","model","isActive","get","set","v","_useTeleport","teleportTarget","_provideTheme","themeClasses","_useRtl","rtlClasses","isRtl","_useLazy","hasContent","onAfterLeave","scrimColor","_useStack","globalTop","localTop","stackStyles","_useActivator","isTop","activatorEl","activatorRef","activatorEvents","contentEvents","scrimEvents","_useDimension","dimensionStyles","isMounted","_useScopeId","scopeId","root","contentEl","_useLocationStrategie","contentStyles","updateLocation","onClickOutside","animateClick","closeConditional","val","window","addEventListener","onKeydown","removeEventListener","immediate","key","router","next","top","scrollParent","document","scrollingElement","scrollTop","transformOrigin","transform","duration","easing","_slots$activator","_Fragment","activator","call","activatorProps","transition","_slots$default","_withDirectives","_vShow","_resolveDirective","handler","include","filterVOverlayProps","keys"],"sources":["../../../src/components/VOverlay/VOverlay.tsx"],"sourcesContent":["// Styles\nimport './VOverlay.sass'\n\n// Composables\nimport { makeActivatorProps, useActivator } from './useActivator'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { makeLazyProps, useLazy } from '@/composables/lazy'\nimport { makeLocationStrategyProps, useLocationStrategies } from './locationStrategies'\nimport { makeScrollStrategyProps, useScrollStrategies } from './scrollStrategies'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { makeTransitionProps, MaybeTransition } from '@/composables/transition'\nimport { useBackButton, useRouter } from '@/composables/router'\nimport { useBackgroundColor } from '@/composables/color'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { useHydration } from '@/composables/hydration'\nimport { useRtl } from '@/composables/locale'\nimport { useScopeId } from '@/composables/scopeId'\nimport { useStack } from '@/composables/stack'\nimport { useTeleport } from '@/composables/teleport'\nimport { useToggleScope } from '@/composables/toggleScope'\n\n// Directives\nimport { ClickOutside } from '@/directives/click-outside'\n\n// Utilities\nimport {\n  animate,\n  convertToUnit,\n  genericComponent,\n  getScrollParent,\n  IN_BROWSER,\n  pick,\n  propsFactory,\n  standardEasing,\n  useRender,\n} from '@/util'\nimport {\n  computed,\n  mergeProps,\n  ref,\n  Teleport,\n  toHandlers,\n  toRef,\n  Transition,\n  watch,\n} from 'vue'\n\n// Types\nimport type { BackgroundColorData } from '@/composables/color'\nimport type { MakeSlots } from '@/util'\nimport type { ExtractPropTypes, PropType, Ref } from 'vue'\n\ninterface ScrimProps {\n  [key: string]: unknown\n  modelValue: boolean\n  color: BackgroundColorData\n}\nfunction Scrim (props: ScrimProps) {\n  const { modelValue, color, ...rest } = props\n  return (\n    <Transition name=\"fade-transition\" appear>\n      { props.modelValue && (\n        <div\n          class={[\n            'v-overlay__scrim',\n            props.color.backgroundColorClasses.value,\n          ]}\n          style={ props.color.backgroundColorStyles.value }\n          { ...rest }\n        />\n      )}\n    </Transition>\n  )\n}\n\nexport type OverlaySlots = MakeSlots<{\n  default: [{ isActive: Ref<boolean> }]\n  activator: [{ isActive: boolean, props: Record<string, any> }]\n}>\n\nexport const makeVOverlayProps = propsFactory({\n  absolute: Boolean,\n  attach: [Boolean, String, Object] as PropType<boolean | string | Element>,\n  closeOnBack: {\n    type: Boolean,\n    default: true,\n  },\n  contained: Boolean,\n  contentClass: null,\n  contentProps: null,\n  disabled: Boolean,\n  noClickAnimation: Boolean,\n  modelValue: Boolean,\n  persistent: Boolean,\n  scrim: {\n    type: [String, Boolean],\n    default: true,\n  },\n  zIndex: {\n    type: [Number, String],\n    default: 2000,\n  },\n\n  ...makeActivatorProps(),\n  ...makeDimensionProps(),\n  ...makeLazyProps(),\n  ...makeLocationStrategyProps(),\n  ...makeScrollStrategyProps(),\n  ...makeThemeProps(),\n  ...makeTransitionProps(),\n}, 'v-overlay')\n\nexport const VOverlay = genericComponent<OverlaySlots>()({\n  name: 'VOverlay',\n\n  directives: { ClickOutside },\n\n  inheritAttrs: false,\n\n  props: {\n    _disableGlobalStack: Boolean,\n\n    ...makeVOverlayProps(),\n  },\n\n  emits: {\n    'click:outside': (e: MouseEvent) => true,\n    'update:modelValue': (value: boolean) => true,\n    afterLeave: () => true,\n  },\n\n  setup (props, { slots, attrs, emit }) {\n    const model = useProxiedModel(props, 'modelValue')\n    const isActive = computed({\n      get: () => model.value,\n      set: v => {\n        if (!(v && props.disabled)) model.value = v\n      },\n    })\n    const { teleportTarget } = useTeleport(computed(() => props.attach || props.contained))\n    const { themeClasses } = provideTheme(props)\n    const { rtlClasses, isRtl } = useRtl()\n    const { hasContent, onAfterLeave } = useLazy(props, isActive)\n    const scrimColor = useBackgroundColor(computed(() => {\n      return typeof props.scrim === 'string' ? props.scrim : null\n    }))\n    const { globalTop, localTop, stackStyles } = useStack(isActive, toRef(props, 'zIndex'), props._disableGlobalStack)\n    const { activatorEl, activatorRef, activatorEvents, contentEvents, scrimEvents } = useActivator(props, { isActive, isTop: localTop })\n    const { dimensionStyles } = useDimension(props)\n    const isMounted = useHydration()\n    const { scopeId } = useScopeId()\n\n    watch(() => props.disabled, v => {\n      if (v) isActive.value = false\n    })\n\n    const root = ref<HTMLElement>()\n    const contentEl = ref<HTMLElement>()\n    const { contentStyles, updateLocation } = useLocationStrategies(props, {\n      isRtl,\n      contentEl,\n      activatorEl,\n      isActive,\n    })\n    useScrollStrategies(props, {\n      root,\n      contentEl,\n      activatorEl,\n      isActive,\n      updateLocation,\n    })\n\n    function onClickOutside (e: MouseEvent) {\n      emit('click:outside', e)\n\n      if (!props.persistent) isActive.value = false\n      else animateClick()\n    }\n\n    function closeConditional () {\n      return isActive.value && globalTop.value\n    }\n\n    IN_BROWSER && watch(isActive, val => {\n      if (val) {\n        window.addEventListener('keydown', onKeydown)\n      } else {\n        window.removeEventListener('keydown', onKeydown)\n      }\n    }, { immediate: true })\n\n    function onKeydown (e: KeyboardEvent) {\n      if (e.key === 'Escape' && globalTop.value) {\n        if (!props.persistent) {\n          isActive.value = false\n        } else animateClick()\n      }\n    }\n\n    const router = useRouter()\n    useToggleScope(() => props.closeOnBack, () => {\n      useBackButton(router, next => {\n        if (globalTop.value && isActive.value) {\n          next(false)\n          if (!props.persistent) isActive.value = false\n          else animateClick()\n        } else {\n          next()\n        }\n      })\n    })\n\n    const top = ref<number>()\n    watch(() => isActive.value && (props.absolute || props.contained) && teleportTarget.value == null, val => {\n      if (val) {\n        const scrollParent = getScrollParent(root.value)\n        if (scrollParent && scrollParent !== document.scrollingElement) {\n          top.value = scrollParent.scrollTop\n        }\n      }\n    })\n\n    // Add a quick \"bounce\" animation to the content\n    function animateClick () {\n      if (props.noClickAnimation) return\n\n      contentEl.value && animate(contentEl.value, [\n        { transformOrigin: 'center' },\n        { transform: 'scale(1.03)' },\n        { transformOrigin: 'center' },\n      ], {\n        duration: 150,\n        easing: standardEasing,\n      })\n    }\n\n    useRender(() => (\n      <>\n        { slots.activator?.({\n          isActive: isActive.value,\n          props: mergeProps({\n            ref: activatorRef,\n          }, toHandlers(activatorEvents.value), props.activatorProps),\n        }) }\n\n        { isMounted.value && (\n          <Teleport\n            disabled={ !teleportTarget.value }\n            to={ teleportTarget.value }\n          >\n            { hasContent.value && (\n              <div\n                class={[\n                  'v-overlay',\n                  {\n                    'v-overlay--absolute': props.absolute || props.contained,\n                    'v-overlay--active': isActive.value,\n                    'v-overlay--contained': props.contained,\n                  },\n                  themeClasses.value,\n                  rtlClasses.value,\n                ]}\n                style={[stackStyles.value, { top: convertToUnit(top.value) }]}\n                ref={ root }\n                { ...scopeId }\n                { ...attrs }\n              >\n                <Scrim\n                  color={ scrimColor }\n                  modelValue={ isActive.value && !!props.scrim }\n                  { ...toHandlers(scrimEvents.value) }\n                />\n                <MaybeTransition\n                  appear\n                  persisted\n                  transition={ props.transition }\n                  target={ activatorEl.value }\n                  onAfterLeave={() => { onAfterLeave(); emit('afterLeave') }}\n                >\n                  <div\n                    ref={ contentEl }\n                    v-show={ isActive.value }\n                    v-click-outside={{ handler: onClickOutside, closeConditional, include: () => [activatorEl.value] }}\n                    class={[\n                      'v-overlay__content',\n                      props.contentClass,\n                    ]}\n                    style={[\n                      dimensionStyles.value,\n                      contentStyles.value,\n                    ]}\n                    { ...toHandlers(contentEvents.value) }\n                    { ...props.contentProps }\n                  >\n                    { slots.default?.({ isActive }) }\n                  </div>\n                </MaybeTransition>\n              </div>\n            )}\n          </Teleport>\n        )}\n      </>\n    ))\n\n    return {\n      activatorEl,\n      animateClick,\n      contentEl,\n      globalTop,\n      localTop,\n      updateLocation,\n    }\n  },\n})\n\nexport type VOverlay = InstanceType<typeof VOverlay>\n\nexport function filterVOverlayProps (props: Partial<ExtractPropTypes<ReturnType<typeof makeVOverlayProps>>>) {\n  return pick(props, Object.keys(VOverlay.props) as any)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}