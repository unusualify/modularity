{"ast":null,"code":"import _typeof from \"/var/www/crm_template/packages/oobook/crm-base/vue/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.timers.js\";\nimport { attachedRoot } from \"../../util/index.mjs\";\nfunction defaultConditional() {\n  return true;\n}\nfunction checkEvent(e, el, binding) {\n  // The include element callbacks below can be expensive\n  // so we should avoid calling them when we're not active.\n  // Explicitly check for false to allow fallback compatibility\n  // with non-toggleable components\n  if (!e || checkIsActive(e, binding) === false) return false;\n\n  // If we're clicking inside the shadowroot, then the app root doesn't get the same\n  // level of introspection as to _what_ we're clicking. We want to check to see if\n  // our target is the shadowroot parent container, and if it is, ignore.\n  var root = attachedRoot(el);\n  if (typeof ShadowRoot !== 'undefined' && root instanceof ShadowRoot && root.host === e.target) return false;\n\n  // Check if additional elements were passed to be included in check\n  // (click must be outside all included elements, if any)\n  var elements = (_typeof(binding.value) === 'object' && binding.value.include || function () {\n    return [];\n  })();\n  // Add the root element for the component this directive was defined on\n  elements.push(el);\n\n  // Check if it's a click outside our elements, and then if our callback returns true.\n  // Non-toggleable components should take action in their callback and return falsy.\n  // Toggleable can return true if it wants to deactivate.\n  // Note that, because we're in the capture phase, this callback will occur before\n  // the bubbling click event on any outside elements.\n  return !elements.some(function (el) {\n    return el === null || el === void 0 ? void 0 : el.contains(e.target);\n  });\n}\nfunction checkIsActive(e, binding) {\n  var isActive = _typeof(binding.value) === 'object' && binding.value.closeConditional || defaultConditional;\n  return isActive(e);\n}\nfunction directive(e, el, binding) {\n  var handler = typeof binding.value === 'function' ? binding.value : binding.value.handler;\n  el._clickOutside.lastMousedownWasOutside && checkEvent(e, el, binding) && setTimeout(function () {\n    checkIsActive(e, binding) && handler && handler(e);\n  }, 0);\n}\nfunction handleShadow(el, callback) {\n  var root = attachedRoot(el);\n  callback(document);\n  if (typeof ShadowRoot !== 'undefined' && root instanceof ShadowRoot) {\n    callback(root);\n  }\n}\nexport var ClickOutside = {\n  // [data-app] may not be found\n  // if using bind, inserted makes\n  // sure that the root element is\n  // available, iOS does not support\n  // clicks on body\n  mounted: function mounted(el, binding) {\n    var onClick = function onClick(e) {\n      return directive(e, el, binding);\n    };\n    var onMousedown = function onMousedown(e) {\n      el._clickOutside.lastMousedownWasOutside = checkEvent(e, el, binding);\n    };\n    handleShadow(el, function (app) {\n      app.addEventListener('click', onClick, true);\n      app.addEventListener('mousedown', onMousedown, true);\n    });\n    if (!el._clickOutside) {\n      el._clickOutside = {\n        lastMousedownWasOutside: true\n      };\n    }\n    el._clickOutside[binding.instance.$.uid] = {\n      onClick: onClick,\n      onMousedown: onMousedown\n    };\n  },\n  unmounted: function unmounted(el, binding) {\n    if (!el._clickOutside) return;\n    handleShadow(el, function (app) {\n      var _el$_clickOutside;\n      if (!app || !((_el$_clickOutside = el._clickOutside) !== null && _el$_clickOutside !== void 0 && _el$_clickOutside[binding.instance.$.uid])) return;\n      var _el$_clickOutside$bin = el._clickOutside[binding.instance.$.uid],\n        onClick = _el$_clickOutside$bin.onClick,\n        onMousedown = _el$_clickOutside$bin.onMousedown;\n      app.removeEventListener('click', onClick, true);\n      app.removeEventListener('mousedown', onMousedown, true);\n    });\n    delete el._clickOutside[binding.instance.$.uid];\n  }\n};\nexport default ClickOutside;","map":{"version":3,"names":["attachedRoot","defaultConditional","checkEvent","e","el","binding","checkIsActive","root","ShadowRoot","host","target","elements","_typeof","value","include","push","some","contains","isActive","closeConditional","directive","handler","_clickOutside","lastMousedownWasOutside","setTimeout","handleShadow","callback","document","ClickOutside","mounted","onClick","onMousedown","app","addEventListener","instance","$","uid","unmounted","_el$_clickOutside","_el$_clickOutside$bin","removeEventListener"],"sources":["../../../src/directives/click-outside/index.ts"],"sourcesContent":["import { attachedRoot } from '@/util'\nimport type { DirectiveBinding } from 'vue'\n\ninterface ClickOutsideBindingArgs {\n  handler: (e: MouseEvent) => void\n  closeConditional?: (e: Event) => boolean\n  include?: () => HTMLElement[]\n}\n\ninterface ClickOutsideDirectiveBinding extends DirectiveBinding {\n  value: ((e: MouseEvent) => void) | ClickOutsideBindingArgs\n}\n\nfunction defaultConditional () {\n  return true\n}\n\nfunction checkEvent (e: MouseEvent, el: HTMLElement, binding: ClickOutsideDirectiveBinding): boolean {\n  // The include element callbacks below can be expensive\n  // so we should avoid calling them when we're not active.\n  // Explicitly check for false to allow fallback compatibility\n  // with non-toggleable components\n  if (!e || checkIsActive(e, binding) === false) return false\n\n  // If we're clicking inside the shadowroot, then the app root doesn't get the same\n  // level of introspection as to _what_ we're clicking. We want to check to see if\n  // our target is the shadowroot parent container, and if it is, ignore.\n  const root = attachedRoot(el)\n  if (\n    typeof ShadowRoot !== 'undefined' &&\n    root instanceof ShadowRoot &&\n    root.host === e.target\n  ) return false\n\n  // Check if additional elements were passed to be included in check\n  // (click must be outside all included elements, if any)\n  const elements = ((typeof binding.value === 'object' && binding.value.include) || (() => []))()\n  // Add the root element for the component this directive was defined on\n  elements.push(el)\n\n  // Check if it's a click outside our elements, and then if our callback returns true.\n  // Non-toggleable components should take action in their callback and return falsy.\n  // Toggleable can return true if it wants to deactivate.\n  // Note that, because we're in the capture phase, this callback will occur before\n  // the bubbling click event on any outside elements.\n  return !elements.some(el => el?.contains(e.target as Node))\n}\n\nfunction checkIsActive (e: MouseEvent, binding: ClickOutsideDirectiveBinding): boolean | void {\n  const isActive = (typeof binding.value === 'object' && binding.value.closeConditional) || defaultConditional\n\n  return isActive(e)\n}\n\nfunction directive (e: MouseEvent, el: HTMLElement, binding: ClickOutsideDirectiveBinding) {\n  const handler = typeof binding.value === 'function' ? binding.value : binding.value.handler\n\n  el._clickOutside!.lastMousedownWasOutside && checkEvent(e, el, binding) && setTimeout(() => {\n    checkIsActive(e, binding) && handler && handler(e)\n  }, 0)\n}\n\nfunction handleShadow (el: HTMLElement, callback: Function): void {\n  const root = attachedRoot(el)\n\n  callback(document)\n\n  if (typeof ShadowRoot !== 'undefined' && root instanceof ShadowRoot) {\n    callback(root)\n  }\n}\n\nexport const ClickOutside = {\n  // [data-app] may not be found\n  // if using bind, inserted makes\n  // sure that the root element is\n  // available, iOS does not support\n  // clicks on body\n  mounted (el: HTMLElement, binding: ClickOutsideDirectiveBinding) {\n    const onClick = (e: Event) => directive(e as MouseEvent, el, binding)\n    const onMousedown = (e: Event) => {\n      el._clickOutside!.lastMousedownWasOutside = checkEvent(e as MouseEvent, el, binding)\n    }\n\n    handleShadow(el, (app: HTMLElement) => {\n      app.addEventListener('click', onClick, true)\n      app.addEventListener('mousedown', onMousedown, true)\n    })\n\n    if (!el._clickOutside) {\n      el._clickOutside = {\n        lastMousedownWasOutside: true,\n      }\n    }\n\n    el._clickOutside[binding.instance!.$.uid] = {\n      onClick,\n      onMousedown,\n    }\n  },\n\n  unmounted (el: HTMLElement, binding: ClickOutsideDirectiveBinding) {\n    if (!el._clickOutside) return\n\n    handleShadow(el, (app: HTMLElement) => {\n      if (!app || !el._clickOutside?.[binding.instance!.$.uid]) return\n\n      const { onClick, onMousedown } = el._clickOutside[binding.instance!.$.uid]!\n\n      app.removeEventListener('click', onClick, true)\n      app.removeEventListener('mousedown', onMousedown, true)\n    })\n\n    delete el._clickOutside[binding.instance!.$.uid]\n  },\n}\n\nexport default ClickOutside\n"],"mappings":";;;;;SAASA,YAAY;AAarB,SAASC,kBAAkBA,CAAA,EAAI;EAC7B,OAAO,IAAI;AACb;AAEA,SAASC,UAAUA,CAAEC,CAAa,EAAEC,EAAe,EAAEC,OAAqC,EAAW;EACnG;EACA;EACA;EACA;EACA,IAAI,CAACF,CAAC,IAAIG,aAAa,CAACH,CAAC,EAAEE,OAAO,CAAC,KAAK,KAAK,EAAE,OAAO,KAAK;;EAE3D;EACA;EACA;EACA,IAAME,IAAI,GAAGP,YAAY,CAACI,EAAE,CAAC;EAC7B,IACE,OAAOI,UAAU,KAAK,WAAW,IACjCD,IAAI,YAAYC,UAAU,IAC1BD,IAAI,CAACE,IAAI,KAAKN,CAAC,CAACO,MAAM,EACtB,OAAO,KAAK;;EAEd;EACA;EACA,IAAMC,QAAQ,GAAG,CAAEC,OAAA,CAAOP,OAAO,CAACQ,KAAK,MAAK,QAAQ,IAAIR,OAAO,CAACQ,KAAK,CAACC,OAAO,IAAM;IAAA,OAAM,EAAE;EAAA,CAAC,GAAG;EAC/F;EACAH,QAAQ,CAACI,IAAI,CAACX,EAAE,CAAC;;EAEjB;EACA;EACA;EACA;EACA;EACA,OAAO,CAACO,QAAQ,CAACK,IAAI,CAAC,UAAAZ,EAAE;IAAA,OAAIA,EAAE,aAAFA,EAAE,uBAAFA,EAAE,CAAEa,QAAQ,CAACd,CAAC,CAACO,MAAM,CAAS;EAAA,EAAC;AAC7D;AAEA,SAASJ,aAAaA,CAAEH,CAAa,EAAEE,OAAqC,EAAkB;EAC5F,IAAMa,QAAQ,GAAIN,OAAA,CAAOP,OAAO,CAACQ,KAAK,MAAK,QAAQ,IAAIR,OAAO,CAACQ,KAAK,CAACM,gBAAgB,IAAKlB,kBAAkB;EAE5G,OAAOiB,QAAQ,CAACf,CAAC,CAAC;AACpB;AAEA,SAASiB,SAASA,CAAEjB,CAAa,EAAEC,EAAe,EAAEC,OAAqC,EAAE;EACzF,IAAMgB,OAAO,GAAG,OAAOhB,OAAO,CAACQ,KAAK,KAAK,UAAU,GAAGR,OAAO,CAACQ,KAAK,GAAGR,OAAO,CAACQ,KAAK,CAACQ,OAAO;EAE3FjB,EAAE,CAACkB,aAAa,CAAEC,uBAAuB,IAAIrB,UAAU,CAACC,CAAC,EAAEC,EAAE,EAAEC,OAAO,CAAC,IAAImB,UAAU,CAAC,YAAM;IAC1FlB,aAAa,CAACH,CAAC,EAAEE,OAAO,CAAC,IAAIgB,OAAO,IAAIA,OAAO,CAAClB,CAAC,CAAC;EACpD,CAAC,EAAE,CAAC,CAAC;AACP;AAEA,SAASsB,YAAYA,CAAErB,EAAe,EAAEsB,QAAkB,EAAQ;EAChE,IAAMnB,IAAI,GAAGP,YAAY,CAACI,EAAE,CAAC;EAE7BsB,QAAQ,CAACC,QAAQ,CAAC;EAElB,IAAI,OAAOnB,UAAU,KAAK,WAAW,IAAID,IAAI,YAAYC,UAAU,EAAE;IACnEkB,QAAQ,CAACnB,IAAI,CAAC;EAChB;AACF;AAEA,OAAO,IAAMqB,YAAY,GAAG;EAC1B;EACA;EACA;EACA;EACA;EACAC,OAAO,WAAAA,QAAEzB,EAAe,EAAEC,OAAqC,EAAE;IAC/D,IAAMyB,OAAO,GAAI,SAAXA,OAAOA,CAAI3B,CAAQ;MAAA,OAAKiB,SAAS,CAACjB,CAAC,EAAgBC,EAAE,EAAEC,OAAO,CAAC;IAAA;IACrE,IAAM0B,WAAW,GAAI,SAAfA,WAAWA,CAAI5B,CAAQ,EAAK;MAChCC,EAAE,CAACkB,aAAa,CAAEC,uBAAuB,GAAGrB,UAAU,CAACC,CAAC,EAAgBC,EAAE,EAAEC,OAAO,CAAC;IACtF,CAAC;IAEDoB,YAAY,CAACrB,EAAE,EAAG,UAAA4B,GAAgB,EAAK;MACrCA,GAAG,CAACC,gBAAgB,CAAC,OAAO,EAAEH,OAAO,EAAE,IAAI,CAAC;MAC5CE,GAAG,CAACC,gBAAgB,CAAC,WAAW,EAAEF,WAAW,EAAE,IAAI,CAAC;IACtD,CAAC,CAAC;IAEF,IAAI,CAAC3B,EAAE,CAACkB,aAAa,EAAE;MACrBlB,EAAE,CAACkB,aAAa,GAAG;QACjBC,uBAAuB,EAAE;MAC3B,CAAC;IACH;IAEAnB,EAAE,CAACkB,aAAa,CAACjB,OAAO,CAAC6B,QAAQ,CAAEC,CAAC,CAACC,GAAG,CAAC,GAAG;MAC1CN,OAAO,EAAPA,OAAO;MACPC,WAAA,EAAAA;IACF,CAAC;EACH,CAAC;EAEDM,SAAS,WAAAA,UAAEjC,EAAe,EAAEC,OAAqC,EAAE;IACjE,IAAI,CAACD,EAAE,CAACkB,aAAa,EAAE;IAEvBG,YAAY,CAACrB,EAAE,EAAG,UAAA4B,GAAgB,EAAK;MAAA,IAAAM,iBAAA;MACrC,IAAI,CAACN,GAAG,IAAI,GAAAM,iBAAA,GAAClC,EAAE,CAACkB,aAAa,cAAAgB,iBAAA,eAAhBA,iBAAA,CAAmBjC,OAAO,CAAC6B,QAAQ,CAAEC,CAAC,CAACC,GAAG,CAAC,GAAE;MAE1D,IAAAG,qBAAA,GAAiCnC,EAAE,CAACkB,aAAa,CAACjB,OAAO,CAAC6B,QAAQ,CAAEC,CAAC,CAACC,GAAG,CAAE;QAAnEN,OAAO,GAAAS,qBAAA,CAAPT,OAAO;QAAEC,WAAA,GAAAQ,qBAAA,CAAAR,WAAA;MAEjBC,GAAG,CAACQ,mBAAmB,CAAC,OAAO,EAAEV,OAAO,EAAE,IAAI,CAAC;MAC/CE,GAAG,CAACQ,mBAAmB,CAAC,WAAW,EAAET,WAAW,EAAE,IAAI,CAAC;IACzD,CAAC,CAAC;IAEF,OAAO3B,EAAE,CAACkB,aAAa,CAACjB,OAAO,CAAC6B,QAAQ,CAAEC,CAAC,CAACC,GAAG,CAAC;EAClD;AACF,CAAC;AAED,eAAeR,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}