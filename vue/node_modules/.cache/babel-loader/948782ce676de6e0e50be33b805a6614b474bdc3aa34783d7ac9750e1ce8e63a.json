{"ast":null,"code":"import { renderSlot as _renderSlot, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveDynamicComponent as _resolveDynamicComponent, createBlock as _createBlock, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"d-flex flex-column align-items-center\",\n  style: {\n    \"position\": \"sticky\",\n    \"top\": \"100px\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ue_btn = _resolveComponent(\"ue-btn\");\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n  const _component_v_form = _resolveComponent(\"v-form\");\n  return _openBlock(), _createBlock(_component_v_form, {\n    modelValue: $data.valid,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.valid = $event),\n    onSubmit: _withModifiers($options.submit, [\"prevent\"]),\n    id: $data.id\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_container, null, {\n      default: _withCtx(() => [_createVNode(_component_v_row, null, {\n        default: _withCtx(() => [_createVNode(_component_v_col, {\n          cols: 12,\n          sm: 12,\n          md: 12,\n          lg: 4,\n          xl: 6,\n          \"order-lg\": 1,\n          \"order-xl\": 1,\n          class: \"d-flex flex-column\",\n          style: {\n            \"position\": \"sticky\"\n          }\n        }, {\n          default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [$props.stickyButton && $props.hasSubmit ? _renderSlot(_ctx.$slots, \"submitButton\", {\n            key: 0,\n            attrs: {},\n            on: {}\n          }, () => [_createVNode(_component_ue_btn, {\n            form: $data.id,\n            type: \"submit\",\n            width: \"60%\",\n            class: \"mb-6\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$tc('submit')), 1 /* TEXT */)]),\n\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"form\"])]) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" <v-card class=\\\"mt-6\\\" height=\\\"\\\">\\n                                    <div>\\n                                        <v-icon>mdi-camera</v-icon>\\n                                        <h3>Upload</h3>\\n                                    </div>\\n                            </v-card> \")]), _createCommentVNode(\" <v-spacer></v-spacer> \")]),\n          _: 3 /* FORWARDED */\n        }), _createVNode(_component_v_col, {\n          cols: 12,\n          sm: 12,\n          md: 12,\n          lg: 8,\n          xl: 6,\n          \"order-lg\": 0,\n          \"order-xl\": 0\n        }, {\n          default: _withCtx(() => [_renderSlot(_ctx.$slots, \"body\", {\n            attrs: {\n              // inputs: this.formInputs,\n              // item: this.editedItem\n            }\n          }, () => [_createVNode(_component_v_row, null, {\n            default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.formInputs, (input, i) => {\n              return _openBlock(), _createBlock(_component_v_col, {\n                key: i,\n                index: i,\n                cols: input.cols,\n                sm: input.sm,\n                md: input.md,\n                lg: input.lg,\n                xl: input.xl\n              }, {\n                default: _withCtx(() => [(_openBlock(), _createBlock(_resolveDynamicComponent(`ue-input-${input.type}`), {\n                  modelValue: $options.model[input.name],\n                  \"onUpdate:modelValue\": $event => $options.model[input.name] = $event,\n                  attributes: input\n                }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"attributes\"]))]),\n                _: 2 /* DYNAMIC */\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"index\", \"cols\", \"sm\", \"md\", \"lg\", \"xl\"]);\n            }), 128 /* KEYED_FRAGMENT */))]),\n\n            _: 1 /* STABLE */\n          })])]),\n\n          _: 3 /* FORWARDED */\n        })]),\n\n        _: 3 /* FORWARDED */\n      })]),\n\n      _: 3 /* FORWARDED */\n    }), _createCommentVNode(\" <v-divider></v-divider> \"), !$props.stickyButton && $props.hasSubmit ? (_openBlock(), _createBlock(_component_v_container, {\n      key: 0\n    }, {\n      default: _withCtx(() => [_createCommentVNode(\" <v-spacer></v-spacer> \"), _renderSlot(_ctx.$slots, \"submitButton\", {\n        attrs: {},\n        on: {}\n      }, () => [_createVNode(_component_ue_btn, {\n        form: $data.id,\n        type: \"submit\",\n        right: \"\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$tc('submit')), 1 /* TEXT */)]),\n\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"form\"])])]),\n      _: 3 /* FORWARDED */\n    })) : _createCommentVNode(\"v-if\", true), _createVNode(_component_v_container, null, {\n      default: _withCtx(() => [_ctx.loading ? (_openBlock(), _createBlock(_component_v_text_field, {\n        key: 0,\n        color: \"success\",\n        loading: \"\",\n        disabled: \"\"\n      })) : _createCommentVNode(\"v-if\", true)]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 3 /* FORWARDED */\n  }, 8 /* PROPS */, [\"modelValue\", \"onSubmit\", \"id\"]);\n}","map":{"version":3,"names":["class","style","_createBlock","_component_v_form","$data","valid","$event","onSubmit","_withModifiers","$options","submit","id","_createVNode","_component_v_container","_component_v_row","_component_v_col","cols","sm","md","lg","xl","_createElementVNode","_hoisted_1","$props","stickyButton","hasSubmit","_renderSlot","_ctx","$slots","attrs","on","_component_ue_btn","form","type","width","$tc","_createCommentVNode","_createElementBlock","_Fragment","_renderList","formInputs","input","i","key","index","_resolveDynamicComponent","model","name","attributes","right","loading","_component_v_text_field","color","disabled"],"sources":["/Users/oguzhanbukcuoglu/Desktop/Projects/crm_template/packages/oobook/crm-base/vue/src/js/components/Form.vue"],"sourcesContent":["<template>\n\n    <v-form v-model=\"valid\" @submit.prevent=\"submit\" :id=\"id\" >\n\n        <v-container>\n\n            <v-row>\n                <v-col\n                    :cols=\"12\"\n                    :sm=\"12\"\n                    :md=\"12\"\n                    :lg=\"4\"\n                    :xl=\"6\"\n\n                    :order-lg=\"1\"\n                    :order-xl=\"1\"\n                    class=\"d-flex flex-column\"\n                    style=\"position:sticky;\"\n                    \n                    >\n                        <div class=\"d-flex flex-column align-items-center\" style=\"position:sticky;top:100px;\">\n                            <slot \n                                v-if=\"stickyButton && hasSubmit\"\n                                name=\"submitButton\"\n                                :attrs=\"{\n                                    \n                                }\"\n                                :on=\"{\n                                    \n                                }\"\n                                >\n                                <ue-btn\n                                    :form=\"id\"\n                                    type=\"submit\"\n                                    width=\"60%\"\n                                    class=\"mb-6\"\n                                    >\n                                    {{ $tc('submit') }}\n                                </ue-btn>\n                            </slot>\n    \n                            <!-- <v-card class=\"mt-6\" height=\"\">\n                                    <div>\n                                        <v-icon>mdi-camera</v-icon>\n                                        <h3>Upload</h3>\n                                    </div>\n                            </v-card> -->\n                        </div>\n                        <!-- <v-spacer></v-spacer> -->\n\n                </v-col>\n\n                <v-col\n                    :cols=\"12\"\n                    :sm=\"12\"\n                    :md=\"12\"\n                    :lg=\"8\"\n                    :xl=\"6\"\n\n                    :order-lg=\"0\"\n                    :order-xl=\"0\"\n                    >\n    \n                    <slot \n                        name=\"body\"\n                        :attrs=\"{\n                            // inputs: this.formInputs,\n                            // item: this.editedItem\n                        }\"\n                        >\n                        <v-row>\n                            <v-col\n                                v-for=\"(input, i) in formInputs\"\n                                :key =\"i\"\n                                :index=\"i\"\n                                :cols='input.cols'\n                                :sm='input.sm'\n                                :md='input.md'\n                                :lg='input.lg'\n                                :xl='input.xl'\n                            >\n                                <component \n                                    :is=\"`ue-input-${input.type}`\" \n                                    v-model=\"model[input.name]\"    \n                                    :attributes=\"input\"\n                                    />                    \n                \n                            </v-col>\n                        </v-row>\n                    </slot>\n                </v-col>\n                \n            </v-row>\n\n\n        </v-container>\n\n        <!-- <v-divider></v-divider> -->\n\n        <v-container v-if=\"!stickyButton && hasSubmit\">\n                <!-- <v-spacer></v-spacer> -->\n                <slot \n                    name=\"submitButton\"\n                    :attrs=\"{\n                        \n                    }\"\n                    :on=\"{\n                        \n                    }\"\n                    >\n                    <ue-btn\n                        :form=\"id\"\n                        type=\"submit\"\n                        right\n                        >\n                        {{ $tc('submit') }}\n                    </ue-btn>\n                </slot>\n        </v-container>\n\n        <v-container>\n            <v-text-field\n                v-if=\"loading\"\n                color=\"success\"\n                loading\n                disabled\n            />\n        </v-container>\n\n    </v-form>\n\n</template>\n\n<script>\nimport { mapGetters, mapState } from 'vuex'\nimport { FORM } from '@/store/mutations/index'\nimport ACTIONS from '@/store/actions'\n\nexport default {\n    // name: \"ue-form\",\n    props: {\n        value: {\n            type: Object,\n            default() {\n                return {}\n            }\n        },\n        inputs: {\n            type: Array\n        },\n        async: {\n            type: Boolean,\n            default: true\n        },\n        hasSubmit: {\n            type: Boolean,\n            default: false\n        },\n        buttonFloat: {\n            type: String,\n            default: 'right'\n        },\n        buttonPosition: {\n            type: String,\n            default: 'bottom'\n        },\n        stickyButton: {\n            type: Boolean,\n            default: false\n        },\n    },\n    data() {\n        return {\n            id: Math.ceil(Math.random()*1000000) + \"-form\",\n            valid: false,\n        }\n    },\n\n    created() {\n        // Object.fromEntries(this.inputs[1].extras.map(v => ([v,true])))\n        // console.log(this.inputs[2])\n    },\n\n    computed: {\n        issetModel() {\n            return Object.keys(this.value).length > 0;\n        },\n        model: {\n            get () {\n                return this.issetModel ? this.value : this.$store.state.form.editedItem;\n            },\n            set (value) {\n                // __log('Form.vue->model set', value)\n                // this.$store.commit(FORM.SET_EDITED_ITEM, value);\n\n            }\n        },\n        formInputs: {\n            get () {\n                // __log(this.inputs ?? this.$store.state.form.inputs ?? [])\n                return this.inputs ?? this.$store.state.form.inputs ?? [];\n            },\n            set (value) {\n                __log('form->inputs set', value)\n                // this.$store.commit(FORM.SET_EDITED_ITEM, value);\n\n            }\n        },\n        ...mapState({\n            loading: state => state.form.loading,\n            errors: state => state.form.errors,\n        }),\n\n        ...mapGetters([\n            'defaultItem'\n        ])\n    },\n    \n    methods: {\n        // update(key, value) {\n        //     __log('form->update', key, value);\n        //     // this.$emit('input', { ...this.value, [key]: value })\n        // },\n\n        saveForm(callback=null, errorCallback=null){\n            __log(\n                this.model,\n            );\n            return;\n            let fields = {};\n\n            Object.keys(this.defaultItem).forEach( (key,i) => {\n                fields[key] = (this.$store.state.form.editedItem[key]==null || this.defaultItem[key] != '') \n                    ? this.defaultItem[key]\n                    : this.$store.state.form.editedItem[key]\n            });\n\n            if(!!this.$store.state.form.editedItem.id)\n                fields.id = this.$store.state.form.editedItem.id;\n\n            this.$store.commit(FORM.SET_EDITED_ITEM, fields);\n\n            this.$store.dispatch(ACTIONS.SAVE_FORM, {item:null, callback:callback, errorCallback:errorCallback})\n        },\n\n        submit () {\n            if(this.async){\n                this.saveForm();\n            }\n\n            // this.$v.$touch()\n        },\n    }\n\n\n}\n</script>\n\n<style>\n\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}