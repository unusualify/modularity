{"ast":null,"code":"import debounce from 'lodash/debounce';\nimport FormDataAsObj from '@/utils/formDataAsObj.js';\nexport default {\n  name: 'UEFilter',\n  props: {\n    initialSearchValue: {\n      type: String,\n      default: ''\n    },\n    placeholder: {\n      type: String,\n      default() {\n        return this.$trans('filter.search-placeholder', 'Search');\n      }\n    },\n    closed: {\n      type: Boolean,\n      default: false\n    },\n    clearOption: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function () {\n    return {\n      openable: !this.closed,\n      open: false,\n      withHiddenFilters: true,\n      withNavigation: true,\n      searchValue: this.initialSearchValue,\n      transitionTimeout: null\n    };\n  },\n  computed: {\n    opened: function () {\n      return this.open && this.openable;\n    }\n  },\n  watch: {\n    closed: function () {\n      this.openable = !this.closed;\n    },\n    initialSearchValue: function () {\n      this.searchValue = this.initialSearchValue;\n    }\n  },\n  methods: {\n    getHeight: function () {\n      // Retrieve height from more inner container\n      return this.$refs.moreInner.clientHeight;\n    },\n    beforeEnter: function (el) {\n      el.style.height = '0px';\n      el.style.overflow = 'hidden';\n    },\n    enter: function (el, done) {\n      // Reset height.\n      this.resetHeight();\n\n      // Delete timeout if exists.\n      if (this.transitionTimeout) {\n        clearTimeout(this.transitionTimeout);\n      }\n\n      // Set timeout.\n      this.transitionTimeout = setTimeout(() => {\n        el.style.overflow = 'visible';\n      }, 275);\n\n      // Add resize event.\n      window.addEventListener('resize', this._resize, false);\n    },\n    beforeLeave: function (el) {\n      // Delete timeout if exists.\n      if (this.transitionTimeout) {\n        clearTimeout(this.transitionTimeout);\n      }\n\n      // Reset height.\n      this.resetHeight();\n\n      // Hide content.\n      el.style.overflow = 'hidden';\n\n      // Remove resize event.\n      window.removeEventListener('resize', this._resize);\n    },\n    leave: function (el, done) {\n      el.style.height = '0px';\n    },\n    toggleFilter: function () {\n      this.openable = true;\n      this.open = !this.open;\n    },\n    submitFilter: function () {\n      const formData = FormDataAsObj(this.$refs.form);\n      this.$emit('submit', formData);\n    },\n    onSearchInput: function (val) {\n      this.searchValue = val;\n    },\n    clear: function () {\n      this.searchValue = '';\n      this.$emit('clear');\n    },\n    resetHeight: function () {\n      // Return if ref is not set.\n      if (!this.$refs.more) return;\n\n      // Set height to the container.\n      this.$refs.more.style.height = this.getHeight() + 'px';\n    },\n    _resize: debounce(function () {\n      this.resetHeight();\n    }, 50)\n  },\n  beforeMount: function () {\n    if (!this.$slots.navigation) this.withNavigation = false;\n    if (!this.$slots['hidden-filters']) this.withHiddenFilters = false;\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}