{"ast":null,"code":"import _objectSpread from \"/var/www/crm_template/packages/oobook/crm-base/vue/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport { resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VInput.css\";\n\n// Components\nimport { VMessages } from \"../VMessages/index.mjs\"; // Composables\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { makeDensityProps, useDensity } from \"../../composables/density.mjs\";\nimport { makeValidationProps, useValidation } from \"../../composables/validation.mjs\"; // Utilities\nimport { computed } from 'vue';\nimport { EventProp, genericComponent, getUid, isOn, pick, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nimport { useInputIcon } from \"./InputIcon.mjs\";\nexport var makeVInputProps = propsFactory(_objectSpread(_objectSpread({\n  id: String,\n  appendIcon: IconValue,\n  prependIcon: IconValue,\n  hideDetails: [Boolean, String],\n  messages: {\n    type: [Array, String],\n    \"default\": function _default() {\n      return [];\n    }\n  },\n  direction: {\n    type: String,\n    \"default\": 'horizontal',\n    validator: function validator(v) {\n      return ['horizontal', 'vertical'].includes(v);\n    }\n  },\n  'onClick:prepend': EventProp,\n  'onClick:append': EventProp\n}, makeDensityProps()), makeValidationProps()), 'v-input');\nexport var VInput = genericComponent()({\n  name: 'VInput',\n  props: _objectSpread({}, makeVInputProps()),\n  emits: {\n    'update:modelValue': function updateModelValue(val) {\n      return true;\n    }\n  },\n  setup: function setup(props, _ref) {\n    var attrs = _ref.attrs,\n      slots = _ref.slots,\n      emit = _ref.emit;\n    var _useDensity = useDensity(props),\n      densityClasses = _useDensity.densityClasses;\n    var _useInputIcon = useInputIcon(props),\n      InputIcon = _useInputIcon.InputIcon;\n    var uid = getUid();\n    var id = computed(function () {\n      return props.id || \"input-\".concat(uid);\n    });\n    var messagesId = computed(function () {\n      return \"\".concat(id.value, \"-messages\");\n    });\n    var _useValidation = useValidation(props, 'v-input', id),\n      errorMessages = _useValidation.errorMessages,\n      isDirty = _useValidation.isDirty,\n      isDisabled = _useValidation.isDisabled,\n      isReadonly = _useValidation.isReadonly,\n      isPristine = _useValidation.isPristine,\n      isValid = _useValidation.isValid,\n      isValidating = _useValidation.isValidating,\n      reset = _useValidation.reset,\n      resetValidation = _useValidation.resetValidation,\n      validate = _useValidation.validate,\n      validationClasses = _useValidation.validationClasses;\n    var slotProps = computed(function () {\n      return {\n        id: id,\n        messagesId: messagesId,\n        isDirty: isDirty,\n        isDisabled: isDisabled,\n        isReadonly: isReadonly,\n        isPristine: isPristine,\n        isValid: isValid,\n        isValidating: isValidating,\n        reset: reset,\n        resetValidation: resetValidation,\n        validate: validate\n      };\n    });\n    useRender(function () {\n      var _props$messages, _slots$prepend, _slots$default, _slots$append, _slots$details;\n      var hasPrepend = !!(slots.prepend || props.prependIcon);\n      var hasAppend = !!(slots.append || props.appendIcon);\n      var hasMessages = !!((_props$messages = props.messages) !== null && _props$messages !== void 0 && _props$messages.length || errorMessages.value.length);\n      var hasDetails = !props.hideDetails || props.hideDetails === 'auto' && (hasMessages || !!slots.details);\n      return _createVNode(\"div\", {\n        \"class\": ['v-input', \"v-input--\".concat(props.direction), densityClasses.value, validationClasses.value]\n      }, [hasPrepend && _createVNode(\"div\", {\n        \"key\": \"prepend\",\n        \"class\": \"v-input__prepend\"\n      }, [(_slots$prepend = slots.prepend) === null || _slots$prepend === void 0 ? void 0 : _slots$prepend.call(slots, slotProps.value), props.prependIcon && _createVNode(InputIcon, {\n        \"key\": \"prepend-icon\",\n        \"name\": \"prepend\"\n      }, null)]), slots[\"default\"] && _createVNode(\"div\", {\n        \"class\": \"v-input__control\"\n      }, [(_slots$default = slots[\"default\"]) === null || _slots$default === void 0 ? void 0 : _slots$default.call(slots, slotProps.value)]), hasAppend && _createVNode(\"div\", {\n        \"key\": \"append\",\n        \"class\": \"v-input__append\"\n      }, [props.appendIcon && _createVNode(InputIcon, {\n        \"key\": \"append-icon\",\n        \"name\": \"append\"\n      }, null), (_slots$append = slots.append) === null || _slots$append === void 0 ? void 0 : _slots$append.call(slots, slotProps.value)]), hasDetails && _createVNode(\"div\", {\n        \"class\": \"v-input__details\"\n      }, [_createVNode(VMessages, {\n        \"id\": messagesId.value,\n        \"active\": hasMessages,\n        \"messages\": errorMessages.value.length > 0 ? errorMessages.value : props.messages\n      }, {\n        message: slots.message\n      }), (_slots$details = slots.details) === null || _slots$details === void 0 ? void 0 : _slots$details.call(slots, slotProps.value)])]);\n    });\n    return {\n      reset: reset,\n      resetValidation: resetValidation,\n      validate: validate\n    };\n  }\n});\nexport function filterInputProps(props) {\n  var keys = Object.keys(VInput.props).filter(function (k) {\n    return !isOn(k);\n  });\n  return pick(props, keys);\n}","map":{"version":3,"names":["VMessages","IconValue","makeDensityProps","useDensity","makeValidationProps","useValidation","computed","EventProp","genericComponent","getUid","isOn","pick","propsFactory","useRender","useInputIcon","makeVInputProps","_objectSpread","id","String","appendIcon","prependIcon","hideDetails","Boolean","messages","type","Array","_default","direction","validator","v","includes","VInput","name","props","emits","updateModelValue","val","setup","_ref","attrs","slots","emit","_useDensity","densityClasses","_useInputIcon","InputIcon","uid","concat","messagesId","value","_useValidation","errorMessages","isDirty","isDisabled","isReadonly","isPristine","isValid","isValidating","reset","resetValidation","validate","validationClasses","slotProps","_props$messages","_slots$prepend","_slots$default","_slots$append","_slots$details","hasPrepend","prepend","hasAppend","append","hasMessages","length","hasDetails","details","_createVNode","call","message","filterInputProps","keys","Object","filter","k"],"sources":["../../../src/components/VInput/VInput.tsx"],"sourcesContent":["// Styles\nimport './VInput.sass'\n\n// Components\nimport { VMessages } from '@/components/VMessages'\n\n// Composables\nimport { IconValue } from '@/composables/icons'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeValidationProps, useValidation } from '@/composables/validation'\n\n// Utilities\nimport { computed } from 'vue'\nimport { EventProp, genericComponent, getUid, isOn, pick, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { ComputedRef, PropType, Ref } from 'vue'\nimport type { MakeSlots } from '@/util'\nimport { useInputIcon } from '@/components/VInput/InputIcon'\n\nexport interface VInputSlot {\n  id: ComputedRef<string>\n  messagesId: ComputedRef<string>\n  isDirty: ComputedRef<boolean>\n  isDisabled: ComputedRef<boolean>\n  isReadonly: ComputedRef<boolean>\n  isPristine: Ref<boolean>\n  isValid: ComputedRef<boolean | null>\n  isValidating: Ref<boolean>\n  reset: () => void\n  resetValidation: () => void\n  validate: () => void\n}\n\nexport const makeVInputProps = propsFactory({\n  id: String,\n  appendIcon: IconValue,\n  prependIcon: IconValue,\n  hideDetails: [Boolean, String] as PropType<boolean | 'auto'>,\n  messages: {\n    type: [Array, String] as PropType<string | string[]>,\n    default: () => ([]),\n  },\n  direction: {\n    type: String as PropType<'horizontal' | 'vertical'>,\n    default: 'horizontal',\n    validator: (v: any) => ['horizontal', 'vertical'].includes(v),\n  },\n\n  'onClick:prepend': EventProp,\n  'onClick:append': EventProp,\n\n  ...makeDensityProps(),\n  ...makeValidationProps(),\n}, 'v-input')\n\nexport type VInputSlots = MakeSlots<{\n  default: [VInputSlot]\n  prepend: [VInputSlot]\n  append: [VInputSlot]\n  details: [VInputSlot]\n}>\n\nexport const VInput = genericComponent<VInputSlots>()({\n  name: 'VInput',\n\n  props: {\n    ...makeVInputProps(),\n  },\n\n  emits: {\n    'update:modelValue': (val: any) => true,\n  },\n\n  setup (props, { attrs, slots, emit }) {\n    const { densityClasses } = useDensity(props)\n    const { InputIcon } = useInputIcon(props)\n\n    const uid = getUid()\n    const id = computed(() => props.id || `input-${uid}`)\n    const messagesId = computed(() => `${id.value}-messages`)\n\n    const {\n      errorMessages,\n      isDirty,\n      isDisabled,\n      isReadonly,\n      isPristine,\n      isValid,\n      isValidating,\n      reset,\n      resetValidation,\n      validate,\n      validationClasses,\n    } = useValidation(props, 'v-input', id)\n\n    const slotProps = computed<VInputSlot>(() => ({\n      id,\n      messagesId,\n      isDirty,\n      isDisabled,\n      isReadonly,\n      isPristine,\n      isValid,\n      isValidating,\n      reset,\n      resetValidation,\n      validate,\n    }))\n\n    useRender(() => {\n      const hasPrepend = !!(slots.prepend || props.prependIcon)\n      const hasAppend = !!(slots.append || props.appendIcon)\n      const hasMessages = !!(\n        props.messages?.length ||\n        errorMessages.value.length\n      )\n      const hasDetails = !props.hideDetails || (\n        props.hideDetails === 'auto' &&\n        (hasMessages || !!slots.details)\n      )\n\n      return (\n        <div class={[\n          'v-input',\n          `v-input--${props.direction}`,\n          densityClasses.value,\n          validationClasses.value,\n        ]}\n        >\n          { hasPrepend && (\n            <div key=\"prepend\" class=\"v-input__prepend\">\n              { slots.prepend?.(slotProps.value) }\n\n              { props.prependIcon && (\n                <InputIcon\n                  key=\"prepend-icon\"\n                  name=\"prepend\"\n                />\n              ) }\n            </div>\n          ) }\n\n          { slots.default && (\n            <div class=\"v-input__control\">\n              { slots.default?.(slotProps.value) }\n            </div>\n          ) }\n\n          { hasAppend && (\n            <div key=\"append\" class=\"v-input__append\">\n              { props.appendIcon && (\n                <InputIcon\n                  key=\"append-icon\"\n                  name=\"append\"\n                />\n              ) }\n\n              { slots.append?.(slotProps.value) }\n            </div>\n          ) }\n\n          { hasDetails && (\n            <div class=\"v-input__details\">\n              <VMessages\n                id={ messagesId.value }\n                active={ hasMessages }\n                messages={ errorMessages.value.length > 0\n                  ? errorMessages.value\n                  : props.messages\n                }\n                v-slots={{ message: slots.message }}\n              />\n\n              { slots.details?.(slotProps.value) }\n            </div>\n          ) }\n        </div>\n      )\n    })\n\n    return {\n      reset,\n      resetValidation,\n      validate,\n    }\n  },\n})\n\nexport type VInput = InstanceType<typeof VInput>\n\nexport function filterInputProps (props: Record<string, unknown>) {\n  const keys = Object.keys(VInput.props).filter(k => !isOn(k))\n  return pick(props, keys)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}