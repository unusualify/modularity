{"ast":null,"code":"import _objectSpread from \"/var/www/crm_template/packages/oobook/crm-base/vue/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _defineProperty from \"/var/www/crm_template/packages/oobook/crm-base/vue/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _toConsumableArray from \"/var/www/crm_template/packages/oobook/crm-base/vue/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.array.flat.js\";\nimport \"core-js/modules/es.array.unscopables.flat.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport isEmpty from 'lodash/isEmpty';\n\n/*\n* Gather selected items in a selected object (currently used for medias and browsers)\n* if a block is passed as second argument, we retrieve selected items namespaced by the block id\n* and strip it out from the key to clean things up and make it easier for the backend\n*/\nvar gatherSelected = function gatherSelected(selected) {\n  var block = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  return Object.assign.apply(Object, [{}].concat(_toConsumableArray(Object.keys(selected).map(function (key) {\n    if (block) {\n      if (isBlockField(key, block.id)) {\n        return _defineProperty({}, stripOutBlockNamespace(key, block.id), selected[key]);\n      }\n    } else if (!key.startsWith('blocks[')) {\n      return _defineProperty({}, key, selected[key]);\n    }\n    return null;\n  }).filter(function (x) {\n    return x;\n  }))));\n};\nexport var isBlockField = function isBlockField(name, id) {\n  return name.startsWith('blocks[' + id + ']');\n};\nexport var stripOutBlockNamespace = function stripOutBlockNamespace(name, id) {\n  var nameWithoutBlock = name.replace('blocks[' + id + '][', '');\n  return nameWithoutBlock.match(/]/gi).length > 1 ? nameWithoutBlock.replace(']', '') : nameWithoutBlock.slice(0, -1);\n};\nexport var buildBlock = function buildBlock(block, rootState) {\n  return {\n    id: block.id,\n    type: block.type,\n    editor_name: block.name,\n    // retrieve all fields for this block and clean up field names\n    content: rootState.form.fields.filter(function (field) {\n      return isBlockField(field.name, block.id);\n    }).map(function (field) {\n      return {\n        name: stripOutBlockNamespace(field.name, block.id),\n        value: field.value\n      };\n    }).reduce(function (content, field) {\n      content[field.name] = field.value;\n      return content;\n    }, {}),\n    medias: gatherSelected(rootState.mediaLibrary.selected, block),\n    browsers: gatherSelected(rootState.browser.selected, block),\n    // gather repeater blocks from the repeater store module\n    blocks: Object.assign.apply(Object, [{}].concat(_toConsumableArray(Object.keys(rootState.repeaters.repeaters).filter(function (repeaterKey) {\n      return repeaterKey.startsWith('blocks-' + block.id);\n    }).map(function (repeaterKey) {\n      return _defineProperty({}, repeaterKey.replace('blocks-' + block.id + '_', ''), rootState.repeaters.repeaters[repeaterKey].map(function (repeaterItem) {\n        return buildBlock(repeaterItem, rootState);\n      }));\n    }))))\n  };\n};\nexport var isBlockEmpty = function isBlockEmpty(blockData) {\n  return isEmpty(blockData.content) && isEmpty(blockData.browsers) && isEmpty(blockData.medias) && isEmpty(blockData.blocks);\n};\nexport var gatherRepeaters = function gatherRepeaters(rootState) {\n  return Object.assign.apply(Object, [{}].concat(_toConsumableArray(Object.keys(rootState.repeaters.repeaters).filter(function (repeaterKey) {\n    // we start by filtering out repeater blocks\n    return !repeaterKey.startsWith('blocks-');\n  }).map(function (repeater) {\n    return _defineProperty({}, repeater, rootState.repeaters.repeaters[repeater].map(function (repeaterItem) {\n      // and for each repeater we build a block for each item\n      var repeaterBlock = buildBlock(repeaterItem, rootState);\n\n      // we want to inline fields in the repeater object\n      // and we don't need the type of component used\n      var fields = repeaterBlock.content;\n      delete repeaterBlock.content;\n      delete repeaterBlock.type;\n\n      // and lastly we want to keep the id to update existing items\n      fields.id = repeaterItem.id;\n      return Object.assign(repeaterBlock, fields);\n    }));\n  }))));\n};\nexport var gatherBlocks = function gatherBlocks(rootState) {\n  var used = _objectSpread({}, rootState.blocks.blocks);\n  return Object.keys(used).map(function (name) {\n    return used[name].map(function (block) {\n      block.name = name;\n      return buildBlock(block, rootState);\n    });\n  }).flat();\n};\nexport var getFormFields = function getFormFields(rootState) {\n  var fields = rootState.form.fields.filter(function (field) {\n    // we start by filtering out blocks related form fields\n    return !field.name.startsWith('blocks[') && !field.name.startsWith('mediaMeta[');\n  }).reduce(function (fields, field) {\n    // and we create a new object with field names as keys,\n    // to inline fields in the submitted data\n    fields[field.name] = field.value;\n    return fields;\n  }, {});\n  return fields;\n};\nexport var getModalFormFields = function getModalFormFields(rootState) {\n  var fields = rootState.form.modalFields.filter(function (field) {\n    // we start by filtering out blocks related form fields\n    return !field.name.startsWith('blocks[') && !field.name.startsWith('mediaMeta[');\n  }).reduce(function (fields, field) {\n    // and we create a new object with field names as keys,\n    // to inline fields in the submitted data\n    fields[field.name] = field.value;\n    return fields;\n  }, {});\n  return fields;\n};\nexport var getFormData = function getFormData(rootState) {\n  var fields = getFormFields(rootState);\n\n  // we can now create our submitted data object out of:\n  // - our just created fields object,\n  // - publication properties\n  // - selected medias and browsers\n  // - created blocks and repeaters\n  var data = Object.assign(fields, {\n    cmsSaveType: rootState.form.type,\n    published: rootState.publication.published,\n    \"public\": rootState.publication.visibility === 'public',\n    publish_start_date: rootState.publication.startDate,\n    publish_end_date: rootState.publication.endDate,\n    languages: rootState.language.all,\n    parent_id: rootState.parents.active,\n    medias: gatherSelected(rootState.mediaLibrary.selected),\n    browsers: gatherSelected(rootState.browser.selected),\n    blocks: gatherBlocks(rootState),\n    repeaters: gatherRepeaters(rootState)\n  });\n  return data;\n};\nexport var getSchemaModel = function getSchemaModel(inputs) {\n  // __log(inputs)\n  var isTreeview = 'custom-input-treeview|treeview';\n  var values = Object.keys(inputs).reduce(function (a, c) {\n    if (isTreeview.includes(inputs[c].type)) {\n      a[inputs[c].name] = [];\n    } else if (__isObject(inputs[c])) {\n      a[inputs[c].name] = inputs[c].hasOwnProperty('default') ? inputs[c][\"default\"] : '';\n    }\n    return a;\n  }, {});\n  return values;\n  Object.keys(inputs).reduce(function (a, c) {\n    return a[inputs[c].name] = inputs[c].hasOwnProperty('default') ? inputs[c][\"default\"] : '', a;\n  }, {});\n};\nexport var getSchema = function getSchema(inputs) {\n  // __log(inputs)\n  var values = Object.keys(inputs).reduce(function (a, c) {\n    if (__isObject(inputs[c])) {\n      a[inputs[c].name] = inputs[c].hasOwnProperty('default') ? inputs[c][\"default\"] : '';\n    } else if (Array.isArray(inputs[c])) {\n      a[inputs[c].name] = [];\n    }\n    return a;\n  }, {});\n  return values;\n  Object.keys(inputs).reduce(function (a, c) {\n    return a[inputs[c].name] = inputs[c].hasOwnProperty('default') ? inputs[c][\"default\"] : '', a;\n  }, {});\n};","map":{"version":3,"names":["isEmpty","gatherSelected","selected","block","arguments","length","undefined","Object","assign","apply","concat","_toConsumableArray","keys","map","key","isBlockField","id","_defineProperty","stripOutBlockNamespace","startsWith","filter","x","name","nameWithoutBlock","replace","match","slice","buildBlock","rootState","type","editor_name","content","form","fields","field","value","reduce","medias","mediaLibrary","browsers","browser","blocks","repeaters","repeaterKey","repeaterItem","isBlockEmpty","blockData","gatherRepeaters","repeater","repeaterBlock","gatherBlocks","used","_objectSpread","flat","getFormFields","getModalFormFields","modalFields","getFormData","data","cmsSaveType","published","publication","visibility","publish_start_date","startDate","publish_end_date","endDate","languages","language","all","parent_id","parents","active","getSchemaModel","inputs","isTreeview","values","a","c","includes","__isObject","hasOwnProperty","getSchema","Array","isArray"],"sources":["/var/www/crm_template/packages/oobook/crm-base/vue/src/js/utils/getFormData.js"],"sourcesContent":["import isEmpty from 'lodash/isEmpty'\n\n/*\n* Gather selected items in a selected object (currently used for medias and browsers)\n* if a block is passed as second argument, we retrieve selected items namespaced by the block id\n* and strip it out from the key to clean things up and make it easier for the backend\n*/\nconst gatherSelected = (selected, block = null) => {\n  return Object.assign({}, ...Object.keys(selected).map(key => {\n    if (block) {\n      if (isBlockField(key, block.id)) {\n        return {\n          [stripOutBlockNamespace(key, block.id)]: selected[key]\n        }\n      }\n    } else if (!key.startsWith('blocks[')) {\n      return {\n        [key]: selected[key]\n      }\n    }\n    return null\n  }).filter(x => x))\n}\n\nexport const isBlockField = (name, id) => {\n  return name.startsWith('blocks[' + id + ']')\n}\n\nexport const stripOutBlockNamespace = (name, id) => {\n  const nameWithoutBlock = name.replace('blocks[' + id + '][', '')\n  return nameWithoutBlock.match(/]/gi).length > 1 ? nameWithoutBlock.replace(']', '') : nameWithoutBlock.slice(0, -1)\n}\n\nexport const buildBlock = (block, rootState) => {\n  return {\n    id: block.id,\n    type: block.type,\n    editor_name: block.name,\n    // retrieve all fields for this block and clean up field names\n    content: rootState.form.fields.filter((field) => {\n      return isBlockField(field.name, block.id)\n    }).map((field) => {\n      return {\n        name: stripOutBlockNamespace(field.name, block.id),\n        value: field.value\n      }\n    }).reduce((content, field) => {\n      content[field.name] = field.value\n      return content\n    }, {}),\n    medias: gatherSelected(rootState.mediaLibrary.selected, block),\n    browsers: gatherSelected(rootState.browser.selected, block),\n    // gather repeater blocks from the repeater store module\n    blocks: Object.assign({}, ...Object.keys(rootState.repeaters.repeaters).filter(repeaterKey => {\n      return repeaterKey.startsWith('blocks-' + block.id)\n    }).map(repeaterKey => {\n      return {\n        [repeaterKey.replace('blocks-' + block.id + '_', '')]: rootState.repeaters.repeaters[repeaterKey].map(repeaterItem => {\n          return buildBlock(repeaterItem, rootState)\n        })\n      }\n    }))\n  }\n}\n\nexport const isBlockEmpty = (blockData) => {\n  return isEmpty(blockData.content) && isEmpty(blockData.browsers) && isEmpty(blockData.medias) && isEmpty(blockData.blocks)\n}\n\nexport const gatherRepeaters = (rootState) => {\n  return Object.assign({}, ...Object.keys(rootState.repeaters.repeaters).filter(repeaterKey => {\n    // we start by filtering out repeater blocks\n    return !repeaterKey.startsWith('blocks-')\n  }).map(repeater => {\n    return {\n      [repeater]: rootState.repeaters.repeaters[repeater].map(repeaterItem => {\n        // and for each repeater we build a block for each item\n        const repeaterBlock = buildBlock(repeaterItem, rootState)\n\n        // we want to inline fields in the repeater object\n        // and we don't need the type of component used\n        const fields = repeaterBlock.content\n        delete repeaterBlock.content\n        delete repeaterBlock.type\n\n        // and lastly we want to keep the id to update existing items\n        fields.id = repeaterItem.id\n\n        return Object.assign(repeaterBlock, fields)\n      })\n    }\n  }))\n}\n\nexport const gatherBlocks = (rootState) => {\n  const used = { ...rootState.blocks.blocks }\n  return Object.keys(used).map(name => {\n    return used[name].map(block => {\n      block.name = name\n      return buildBlock(block, rootState)\n    })\n  }).flat()\n}\n\nexport const getFormFields = (rootState) => {\n  const fields = rootState.form.fields.filter((field) => {\n    // we start by filtering out blocks related form fields\n    return !field.name.startsWith('blocks[') && !field.name.startsWith('mediaMeta[')\n  }).reduce((fields, field) => {\n    // and we create a new object with field names as keys,\n    // to inline fields in the submitted data\n    fields[field.name] = field.value\n    return fields\n  }, {})\n\n  return fields\n}\n\nexport const getModalFormFields = (rootState) => {\n  const fields = rootState.form.modalFields.filter((field) => {\n    // we start by filtering out blocks related form fields\n    return !field.name.startsWith('blocks[') && !field.name.startsWith('mediaMeta[')\n  }).reduce((fields, field) => {\n    // and we create a new object with field names as keys,\n    // to inline fields in the submitted data\n    fields[field.name] = field.value\n    return fields\n  }, {})\n\n  return fields\n}\n\nexport const getFormData = (rootState) => {\n  const fields = getFormFields(rootState)\n\n  // we can now create our submitted data object out of:\n  // - our just created fields object,\n  // - publication properties\n  // - selected medias and browsers\n  // - created blocks and repeaters\n  const data = Object.assign(fields, {\n    cmsSaveType: rootState.form.type,\n    published: rootState.publication.published,\n    public: rootState.publication.visibility === 'public',\n    publish_start_date: rootState.publication.startDate,\n    publish_end_date: rootState.publication.endDate,\n    languages: rootState.language.all,\n    parent_id: rootState.parents.active,\n    medias: gatherSelected(rootState.mediaLibrary.selected),\n    browsers: gatherSelected(rootState.browser.selected),\n    blocks: gatherBlocks(rootState),\n    repeaters: gatherRepeaters(rootState)\n  })\n\n  return data\n}\n\nexport const getSchemaModel = (inputs) => {\n  // __log(inputs)\n  const isTreeview = 'custom-input-treeview|treeview'\n  const values = Object.keys(inputs).reduce((a, c) => {\n    if (isTreeview.includes(inputs[c].type)) {\n      a[inputs[c].name] = []\n    } else if (__isObject(inputs[c])) {\n      a[inputs[c].name] = inputs[c].hasOwnProperty('default') ? inputs[c].default : ''\n    }\n    return a\n  }\n  , {})\n\n  return values\n\n  Object.keys(inputs).reduce((a, c) => (\n    a[inputs[c].name] = inputs[c].hasOwnProperty('default') ? inputs[c].default : '',\n    a\n  )\n  , {})\n}\n\nexport const getSchema = (inputs) => {\n  // __log(inputs)\n  const values = Object.keys(inputs).reduce((a, c) => {\n    if (__isObject(inputs[c])) {\n      a[inputs[c].name] = inputs[c].hasOwnProperty('default') ? inputs[c].default : ''\n    } else if (Array.isArray(inputs[c])) {\n      a[inputs[c].name] = []\n    }\n    return a\n  }\n  , {})\n  return values\n\n  Object.keys(inputs).reduce((a, c) => (\n    a[inputs[c].name] = inputs[c].hasOwnProperty('default') ? inputs[c].default : '',\n    a\n  )\n  , {})\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}