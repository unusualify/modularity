{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.parse-float.js\";\nimport { createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VColorPickerCanvas.css\";\n\n// Composables\nimport { useResizeObserver } from \"../../composables/resizeObserver.mjs\"; // Utilities\nimport { clamp, convertToUnit, defineComponent, getEventCoordinates, useRender } from \"../../util/index.mjs\";\nimport { computed, onMounted, ref, watch } from 'vue';\n\n// Types\n\nexport var VColorPickerCanvas = defineComponent({\n  name: 'VColorPickerCanvas',\n  props: {\n    color: {\n      type: Object\n    },\n    disabled: Boolean,\n    dotSize: {\n      type: [Number, String],\n      \"default\": 10\n    },\n    height: {\n      type: [Number, String],\n      \"default\": 150\n    },\n    width: {\n      type: [Number, String],\n      \"default\": 300\n    }\n  },\n  emits: {\n    'update:color': function updateColor(color) {\n      return true;\n    },\n    'update:position': function updatePosition(hue) {\n      return true;\n    }\n  },\n  setup: function setup(props, _ref) {\n    var emit = _ref.emit;\n    var isInteracting = ref(false);\n    var isOutsideUpdate = ref(false);\n    var dotPosition = ref({\n      x: 0,\n      y: 0\n    });\n    var dotStyles = computed(function () {\n      var _dotPosition$value = dotPosition.value,\n        x = _dotPosition$value.x,\n        y = _dotPosition$value.y;\n      var radius = parseInt(props.dotSize, 10) / 2;\n      return {\n        width: convertToUnit(props.dotSize),\n        height: convertToUnit(props.dotSize),\n        transform: \"translate(\".concat(convertToUnit(x - radius), \", \").concat(convertToUnit(y - radius), \")\")\n      };\n    });\n    var canvasRef = ref();\n    var canvasWidth = ref(parseFloat(props.width));\n    var canvasHeight = ref(parseFloat(props.height));\n    var _useResizeObserver = useResizeObserver(function (entries) {\n        var _resizeRef$value;\n        if (!((_resizeRef$value = resizeRef.value) !== null && _resizeRef$value !== void 0 && _resizeRef$value.offsetParent)) return;\n        var _entries$0$contentRec = entries[0].contentRect,\n          width = _entries$0$contentRec.width,\n          height = _entries$0$contentRec.height;\n        canvasWidth.value = width;\n        canvasHeight.value = height;\n      }),\n      resizeRef = _useResizeObserver.resizeRef;\n    function updateDotPosition(x, y, rect) {\n      var left = rect.left,\n        top = rect.top,\n        width = rect.width,\n        height = rect.height;\n      dotPosition.value = {\n        x: clamp(x - left, 0, width),\n        y: clamp(y - top, 0, height)\n      };\n    }\n    function handleClick(e) {\n      if (props.disabled || !canvasRef.value) return;\n      updateDotPosition(e.clientX, e.clientY, canvasRef.value.getBoundingClientRect());\n    }\n    function handleMouseDown(e) {\n      // To prevent selection while moving cursor\n      e.preventDefault();\n      if (props.disabled) return;\n      isInteracting.value = true;\n      window.addEventListener('mousemove', handleMouseMove);\n      window.addEventListener('mouseup', handleMouseUp);\n      window.addEventListener('touchmove', handleMouseMove);\n      window.addEventListener('touchend', handleMouseUp);\n    }\n    function handleMouseMove(e) {\n      if (props.disabled || !canvasRef.value) return;\n      isInteracting.value = true;\n      var coords = getEventCoordinates(e);\n      updateDotPosition(coords.clientX, coords.clientY, canvasRef.value.getBoundingClientRect());\n    }\n    function handleMouseUp() {\n      window.removeEventListener('mousemove', handleMouseMove);\n      window.removeEventListener('mouseup', handleMouseUp);\n      window.removeEventListener('touchmove', handleMouseMove);\n      window.removeEventListener('touchend', handleMouseUp);\n    }\n    watch(dotPosition, function () {\n      var _props$color$h, _props$color, _props$color$a, _props$color2;\n      if (isOutsideUpdate.value) {\n        isOutsideUpdate.value = false;\n        return;\n      }\n      if (!canvasRef.value) return;\n      var _dotPosition$value2 = dotPosition.value,\n        x = _dotPosition$value2.x,\n        y = _dotPosition$value2.y;\n      emit('update:color', {\n        h: (_props$color$h = (_props$color = props.color) === null || _props$color === void 0 ? void 0 : _props$color.h) !== null && _props$color$h !== void 0 ? _props$color$h : 0,\n        s: clamp(x, 0, canvasWidth.value) / canvasWidth.value,\n        v: 1 - clamp(y, 0, canvasHeight.value) / canvasHeight.value,\n        a: (_props$color$a = (_props$color2 = props.color) === null || _props$color2 === void 0 ? void 0 : _props$color2.a) !== null && _props$color$a !== void 0 ? _props$color$a : 1\n      });\n    });\n    function updateCanvas() {\n      var _props$color$h2, _props$color3;\n      if (!canvasRef.value) return;\n      var canvas = canvasRef.value;\n      var ctx = canvas.getContext('2d');\n      if (!ctx) return;\n      var saturationGradient = ctx.createLinearGradient(0, 0, canvas.width, 0);\n      saturationGradient.addColorStop(0, 'hsla(0, 0%, 100%, 1)'); // white\n      saturationGradient.addColorStop(1, \"hsla(\".concat((_props$color$h2 = (_props$color3 = props.color) === null || _props$color3 === void 0 ? void 0 : _props$color3.h) !== null && _props$color$h2 !== void 0 ? _props$color$h2 : 0, \", 100%, 50%, 1)\"));\n      ctx.fillStyle = saturationGradient;\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n      var valueGradient = ctx.createLinearGradient(0, 0, 0, canvas.height);\n      valueGradient.addColorStop(0, 'hsla(0, 0%, 100%, 0)'); // transparent\n      valueGradient.addColorStop(1, 'hsla(0, 0%, 0%, 1)'); // black\n      ctx.fillStyle = valueGradient;\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n    }\n    watch(function () {\n      var _props$color4;\n      return (_props$color4 = props.color) === null || _props$color4 === void 0 ? void 0 : _props$color4.h;\n    }, updateCanvas, {\n      immediate: true\n    });\n    watch(function () {\n      return [canvasWidth.value, canvasHeight.value];\n    }, function (newVal, oldVal) {\n      updateCanvas();\n      dotPosition.value = {\n        x: dotPosition.value.x * newVal[0] / oldVal[0],\n        y: dotPosition.value.y * newVal[1] / oldVal[1]\n      };\n    }, {\n      flush: 'post'\n    });\n    watch(function () {\n      return props.color;\n    }, function () {\n      if (isInteracting.value) {\n        isInteracting.value = false;\n        return;\n      }\n      isOutsideUpdate.value = true;\n      dotPosition.value = props.color ? {\n        x: props.color.s * canvasWidth.value,\n        y: (1 - props.color.v) * canvasHeight.value\n      } : {\n        x: 0,\n        y: 0\n      };\n    }, {\n      deep: true,\n      immediate: true\n    });\n    onMounted(function () {\n      return updateCanvas();\n    });\n    useRender(function () {\n      return _createVNode(\"div\", {\n        \"ref\": resizeRef,\n        \"class\": \"v-color-picker-canvas\",\n        \"onClick\": handleClick,\n        \"onMousedown\": handleMouseDown,\n        \"onTouchstart\": handleMouseDown\n      }, [_createVNode(\"canvas\", {\n        \"ref\": canvasRef,\n        \"width\": canvasWidth.value,\n        \"height\": canvasHeight.value\n      }, null), props.color && _createVNode(\"div\", {\n        \"class\": ['v-color-picker-canvas__dot', {\n          'v-color-picker-canvas__dot--disabled': props.disabled\n        }],\n        \"style\": dotStyles.value\n      }, null)]);\n    });\n    return {};\n  }\n});","map":{"version":3,"names":["useResizeObserver","clamp","convertToUnit","defineComponent","getEventCoordinates","useRender","computed","onMounted","ref","watch","VColorPickerCanvas","name","props","color","type","Object","disabled","Boolean","dotSize","Number","String","height","width","emits","updateColor","updatePosition","hue","setup","_ref","emit","isInteracting","isOutsideUpdate","dotPosition","x","y","dotStyles","_dotPosition$value","value","radius","parseInt","transform","concat","canvasRef","canvasWidth","parseFloat","canvasHeight","_useResizeObserver","entries","_resizeRef$value","resizeRef","offsetParent","_entries$0$contentRec","contentRect","updateDotPosition","rect","left","top","handleClick","e","clientX","clientY","getBoundingClientRect","handleMouseDown","preventDefault","window","addEventListener","handleMouseMove","handleMouseUp","coords","removeEventListener","_props$color$h","_props$color","_props$color$a","_props$color2","_dotPosition$value2","h","s","v","a","updateCanvas","_props$color$h2","_props$color3","canvas","ctx","getContext","saturationGradient","createLinearGradient","addColorStop","fillStyle","fillRect","valueGradient","_props$color4","immediate","newVal","oldVal","flush","deep","_createVNode"],"sources":["../../../src/components/VColorPicker/VColorPickerCanvas.tsx"],"sourcesContent":["// Styles\nimport './VColorPickerCanvas.sass'\n\n// Composables\nimport { useResizeObserver } from '@/composables/resizeObserver'\n\n// Utilities\nimport { clamp, convertToUnit, defineComponent, getEventCoordinates, useRender } from '@/util'\nimport { computed, onMounted, ref, watch } from 'vue'\n\n// Types\nimport type { HSV } from '@/util'\nimport type { PropType } from 'vue'\n\nexport const VColorPickerCanvas = defineComponent({\n  name: 'VColorPickerCanvas',\n\n  props: {\n    color: {\n      type: Object as PropType<HSV | null>,\n    },\n    disabled: Boolean,\n    dotSize: {\n      type: [Number, String],\n      default: 10,\n    },\n    height: {\n      type: [Number, String],\n      default: 150,\n    },\n    width: {\n      type: [Number, String],\n      default: 300,\n    },\n  },\n\n  emits: {\n    'update:color': (color: HSV) => true,\n    'update:position': (hue: any) => true,\n  },\n\n  setup (props, { emit }) {\n    const isInteracting = ref(false)\n    const isOutsideUpdate = ref(false)\n    const dotPosition = ref({ x: 0, y: 0 })\n\n    const dotStyles = computed(() => {\n      const { x, y } = dotPosition.value\n      const radius = parseInt(props.dotSize, 10) / 2\n\n      return {\n        width: convertToUnit(props.dotSize),\n        height: convertToUnit(props.dotSize),\n        transform: `translate(${convertToUnit(x - radius)}, ${convertToUnit(y - radius)})`,\n      }\n    })\n\n    const canvasRef = ref<HTMLCanvasElement | null>()\n    const canvasWidth = ref(parseFloat(props.width))\n    const canvasHeight = ref(parseFloat(props.height))\n    const { resizeRef } = useResizeObserver(entries => {\n      if (!resizeRef.value?.offsetParent) return\n\n      const { width, height } = entries[0].contentRect\n\n      canvasWidth.value = width\n      canvasHeight.value = height\n    })\n\n    function updateDotPosition (x: number, y: number, rect: DOMRect) {\n      const { left, top, width, height } = rect\n      dotPosition.value = {\n        x: clamp(x - left, 0, width),\n        y: clamp(y - top, 0, height),\n      }\n    }\n\n    function handleClick (e: MouseEvent) {\n      if (props.disabled || !canvasRef.value) return\n\n      updateDotPosition(e.clientX, e.clientY, canvasRef.value.getBoundingClientRect())\n    }\n\n    function handleMouseDown (e: MouseEvent | TouchEvent) {\n      // To prevent selection while moving cursor\n      e.preventDefault()\n\n      if (props.disabled) return\n\n      isInteracting.value = true\n\n      window.addEventListener('mousemove', handleMouseMove)\n      window.addEventListener('mouseup', handleMouseUp)\n      window.addEventListener('touchmove', handleMouseMove)\n      window.addEventListener('touchend', handleMouseUp)\n    }\n\n    function handleMouseMove (e: MouseEvent | TouchEvent) {\n      if (props.disabled || !canvasRef.value) return\n\n      isInteracting.value = true\n\n      const coords = getEventCoordinates(e)\n\n      updateDotPosition(coords.clientX, coords.clientY, canvasRef.value.getBoundingClientRect())\n    }\n\n    function handleMouseUp () {\n      window.removeEventListener('mousemove', handleMouseMove)\n      window.removeEventListener('mouseup', handleMouseUp)\n      window.removeEventListener('touchmove', handleMouseMove)\n      window.removeEventListener('touchend', handleMouseUp)\n    }\n\n    watch(dotPosition, () => {\n      if (isOutsideUpdate.value) {\n        isOutsideUpdate.value = false\n        return\n      }\n\n      if (!canvasRef.value) return\n\n      const { x, y } = dotPosition.value\n\n      emit('update:color', {\n        h: props.color?.h ?? 0,\n        s: clamp(x, 0, canvasWidth.value) / canvasWidth.value,\n        v: 1 - clamp(y, 0, canvasHeight.value) / canvasHeight.value,\n        a: props.color?.a ?? 1,\n      })\n    })\n\n    function updateCanvas () {\n      if (!canvasRef.value) return\n\n      const canvas = canvasRef.value\n      const ctx = canvas.getContext('2d')\n\n      if (!ctx) return\n\n      const saturationGradient = ctx.createLinearGradient(0, 0, canvas.width, 0)\n      saturationGradient.addColorStop(0, 'hsla(0, 0%, 100%, 1)') // white\n      saturationGradient.addColorStop(1, `hsla(${props.color?.h ?? 0}, 100%, 50%, 1)`)\n      ctx.fillStyle = saturationGradient\n      ctx.fillRect(0, 0, canvas.width, canvas.height)\n\n      const valueGradient = ctx.createLinearGradient(0, 0, 0, canvas.height)\n      valueGradient.addColorStop(0, 'hsla(0, 0%, 100%, 0)') // transparent\n      valueGradient.addColorStop(1, 'hsla(0, 0%, 0%, 1)') // black\n      ctx.fillStyle = valueGradient\n      ctx.fillRect(0, 0, canvas.width, canvas.height)\n    }\n\n    watch(() => props.color?.h, updateCanvas, { immediate: true })\n    watch(() => [canvasWidth.value, canvasHeight.value], (newVal, oldVal) => {\n      updateCanvas()\n      dotPosition.value = {\n        x: dotPosition.value.x * newVal[0] / oldVal[0],\n        y: dotPosition.value.y * newVal[1] / oldVal[1],\n      }\n    }, { flush: 'post' })\n\n    watch(() => props.color, () => {\n      if (isInteracting.value) {\n        isInteracting.value = false\n        return\n      }\n\n      isOutsideUpdate.value = true\n\n      dotPosition.value = props.color ? {\n        x: props.color.s * canvasWidth.value,\n        y: (1 - props.color.v) * canvasHeight.value,\n      } : { x: 0, y: 0 }\n    }, { deep: true, immediate: true })\n\n    onMounted(() => updateCanvas())\n\n    useRender(() => (\n      <div\n        ref={ resizeRef }\n        class=\"v-color-picker-canvas\"\n        onClick={ handleClick }\n        onMousedown={ handleMouseDown }\n        onTouchstart={ handleMouseDown }\n      >\n        <canvas\n          ref={ canvasRef }\n          width={ canvasWidth.value }\n          height={ canvasHeight.value }\n        />\n        { props.color && (\n          <div\n            class={[\n              'v-color-picker-canvas__dot',\n              {\n                'v-color-picker-canvas__dot--disabled': props.disabled,\n              },\n            ]}\n            style={ dotStyles.value }\n          />\n        )}\n      </div>\n    ))\n\n    return {}\n  },\n})\n\nexport type VColorPickerCanvas = InstanceType<typeof VColorPickerCanvas>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}