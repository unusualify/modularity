{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelSelect as _vModelSelect, createElementVNode as _createElementVNode, withDirectives as _withDirectives, vShow as _vShow, normalizeStyle as _normalizeStyle, toHandlers as _toHandlers, mergeProps as _mergeProps, createBlock as _createBlock, renderSlot as _renderSlot, withKeys as _withKeys, createSlots as _createSlots } from \"vue\";\nconst _hoisted_1 = [\"value\"];\nconst _hoisted_2 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_toolbar_title = _resolveComponent(\"v-toolbar-title\");\n  const _component_v_divider = _resolveComponent(\"v-divider\");\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n  const _component_v_spacer = _resolveComponent(\"v-spacer\");\n  const _component_v_icon = _resolveComponent(\"v-icon\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_list_item_title = _resolveComponent(\"v-list-item-title\");\n  const _component_v_list_item = _resolveComponent(\"v-list-item\");\n  const _component_v_list = _resolveComponent(\"v-list\");\n  const _component_v_menu = _resolveComponent(\"v-menu\");\n  const _component_ue_btn = _resolveComponent(\"ue-btn\");\n  const _component_ue_modal_form = _resolveComponent(\"ue-modal-form\");\n  const _component_ue_modal_dialog = _resolveComponent(\"ue-modal-dialog\");\n  const _component_v_toolbar = _resolveComponent(\"v-toolbar\");\n  const _component_v_edit_dialog = _resolveComponent(\"v-edit-dialog\");\n  const _component_v_data_table = _resolveComponent(\"v-data-table\");\n  return _openBlock(), _createBlock(_component_v_data_table, {\n    headers: _ctx.headers,\n    items: _ctx.elements,\n    class: \"elevation-1\",\n    loading: _ctx.loading,\n    options: _ctx.options,\n    \"server-items-length\": _ctx.totalElements,\n    search: _ctx.search,\n    \"hide-default-header\": _ctx.hideDefaultHeader,\n    \"hide-default-footer\": _ctx.hideDefaultFooter,\n    \"footer-props\": {\n      showFirstLastPage: true,\n      firstIcon: 'mdi-arrow-collapse-left',\n      lastIcon: 'mdi-arrow-collapse-right',\n      nextIcon: 'mdi-chevron-right',\n      prevIcon: 'mdi-chevron-left'\n    },\n    \"disable-pagination\": false,\n    \"disable-sort\": false\n  }, _createSlots({\n    top: _withCtx(() => [_createVNode(_component_v_toolbar, {\n      flat: \"\"\n    }, {\n      default: _withCtx(() => [_createCommentVNode(\" #title.left-top \"), _createVNode(_component_v_toolbar_title, null, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$tc('list-of-item', [_ctx.name, _ctx.$tc('modules.' + _ctx.name.toLowerCase())])) + \" \", 1 /* TEXT */), _createCommentVNode(\" {{ $t('errors.missingMessage') }} \")]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_v_divider, {\n        class: \"mx-4\",\n        inset: \"\",\n        vertical: \"\"\n      }), _createCommentVNode(\" #search input \"), _createVNode(_component_v_text_field, {\n        modelValue: _ctx.search,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.search = $event),\n        \"append-icon\": \"mdi-magnify\",\n        label: \"Search\",\n        \"single-line\": \"\",\n        \"hide-details\": \"\"\n      }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_divider, {\n        class: \"mx-4\",\n        inset: \"\",\n        vertical: \"\"\n      }), _createCommentVNode(\" #language selector \"), _withDirectives(_createVNode(_component_v_toolbar_title, null, {\n        default: _withCtx(() => [_createCommentVNode(\" {{ $tc('list') }}\\n          {{ $n(100.77, 'currency') }} \"), _createTextVNode(\" \" + _toDisplayString(_ctx.$t('language-select')) + \" \", 1 /* TEXT */), _withDirectives(_createElementVNode(\"select\", {\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.$i18n.locale = $event)\n        }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.langs, (lang, i) => {\n          return _openBlock(), _createElementBlock(\"option\", {\n            key: `Lang${i}`,\n            value: lang\n          }, _toDisplayString(lang), 9 /* TEXT, PROPS */, _hoisted_1);\n        }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, _ctx.$i18n.locale]])]),\n        _: 1 /* STABLE */\n      }, 512 /* NEED_PATCH */), [[_vShow, false]]), _createCommentVNode(\" Custom Filters \"), _createVNode(_component_v_menu, {\n        \"offset-y\": \"\",\n        rounded: \"xs\",\n        \"open-on-hover\": \"\"\n      }, {\n        activator: _withCtx(({\n          on,\n          attrs,\n          value\n        }) => [_createVNode(_component_v_btn, _mergeProps(attrs, _toHandlers(on), {\n          class: \"rounded-xs\",\n          color: \"primary\",\n          dark: \"\",\n          ripple: false\n        }), {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.mainFilters.at(0).name) + \" \", 1 /* TEXT */), _createVNode(_component_v_spacer), _createVNode(_component_v_icon, {\n            right: \"\",\n            style: _normalizeStyle({\n              transform: value ? 'rotate(-180deg)' : 'rotate(0)'\n            })\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"mdi-chevron-down\")]),\n            _: 2 /* DYNAMIC */\n          }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"style\"])]),\n          _: 2 /* DYNAMIC */\n        }, 1040 /* FULL_PROPS, DYNAMIC_SLOTS */)]),\n\n        default: _withCtx(() => [_createVNode(_component_v_list, null, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.mainFilters, (item, index) => {\n            return _openBlock(), _createBlock(_component_v_list_item, {\n              key: index\n            }, {\n              default: _withCtx(() => [_createVNode(_component_v_list_item_title, null, {\n                default: _withCtx(() => [_createTextVNode(_toDisplayString(item.name), 1 /* TEXT */)]),\n\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */)]),\n\n              _: 2 /* DYNAMIC */\n            }, 1024 /* DYNAMIC_SLOTS */);\n          }), 128 /* KEYED_FRAGMENT */))]),\n\n          _: 1 /* STABLE */\n        })]),\n\n        _: 1 /* STABLE */\n      }), _createVNode(_component_v_divider, {\n        class: \"mx-4\",\n        inset: \"\",\n        vertical: \"\"\n      }), _createVNode(_component_v_spacer), _createCommentVNode(\" #form dialog \"), _ctx.createOnModal || _ctx.editOnModal ? _renderSlot(_ctx.$slots, \"FormDialog\", {\n        key: 0\n      }, () => [_createVNode(_component_ue_modal_form, {\n        ref: \"formModal\",\n        modelValue: _ctx.formModalActive,\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.formModalActive = $event),\n        \"route-name\": _ctx.name\n      }, {\n        activator: _withCtx(({\n          on,\n          attrs\n        }) => [_ctx.createOnModal ? (_openBlock(), _createBlock(_component_ue_btn, _mergeProps({\n          key: 0\n        }, attrs, _toHandlers(on), {\n          color: \"success\",\n          dark: \"\"\n        }), {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('new-item', {\n            'item': _ctx.name\n          })), 1 /* TEXT */)]),\n\n          _: 2 /* DYNAMIC */\n        }, 1040 /* FULL_PROPS, DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true)]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\", \"route-name\"])]) : _createCommentVNode(\"v-if\", true), !_ctx.createOnModal ? (_openBlock(), _createBlock(_component_ue_btn, {\n        key: 1,\n        href: _ctx.createUrl,\n        target: \"_blank\",\n        color: \"success\",\n        dark: \"\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('new-item', {\n          'item': _ctx.name\n        })), 1 /* TEXT */)]),\n\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"href\"])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" general #dialog \"), _createVNode(_component_ue_modal_dialog, {\n        modelValue: _ctx.dialogActive,\n        \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.dialogActive = $event),\n        ref: \"dialog\",\n        description: $options.dialogDescription,\n        onCancel: _ctx.resetEditedItem,\n        onConfirm: $options.deleteRow\n      }, null, 8 /* PROPS */, [\"modelValue\", \"description\", \"onCancel\", \"onConfirm\"])]),\n      _: 3 /* FORWARDED */\n    })]),\n\n    \"item.actions\": _withCtx(({\n      item\n    }) => [_createCommentVNode(\" @click's editItem|deleteItem \"), _createCommentVNode(\" #actions \"), _ctx.rowActionsType == 'dropdown' || _ctx.$vuetify.display.smOnly ? (_openBlock(), _createBlock(_component_v_menu, {\n      key: 0,\n      \"close-on-content-click\": false,\n      \"open-on-hover\": \"\",\n      left: \"\",\n      \"offset-x\": \"\"\n    }, {\n      activator: _withCtx(({\n        on,\n        attrs\n      }) => [_createVNode(_component_v_btn, _mergeProps({\n        icon: \"\"\n      }, attrs, _toHandlers(on)), {\n        default: _withCtx(() => [_createVNode(_component_v_icon, {\n          color: \"green darken-2\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(\" $list \")]),\n          _: 1 /* STABLE */\n        })]),\n\n        _: 2 /* DYNAMIC */\n      }, 1040 /* FULL_PROPS, DYNAMIC_SLOTS */)]),\n\n      default: _withCtx(() => [_createVNode(_component_v_list, null, {\n        default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.rowActions, (action, k) => {\n          return _openBlock(), _createBlock(_component_v_list_item, {\n            key: k,\n            onClick: $event => _ctx.handleFunctionCall(action.name + 'Item', item)\n          }, {\n            default: _withCtx(() => [_createVNode(_component_v_icon, {\n              small: \"\",\n              color: action.color,\n              left: \"\"\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString(action.icon ? action.icon : '$' + action.name), 1 /* TEXT */)]),\n\n              _: 2 /* DYNAMIC */\n            }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"color\"]), _createTextVNode(\" \" + _toDisplayString(_ctx.$tc(action.name)), 1 /* TEXT */)]),\n\n            _: 2 /* DYNAMIC */\n          }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]);\n        }), 128 /* KEYED_FRAGMENT */))]),\n\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */)]),\n\n      _: 2 /* DYNAMIC */\n    }, 1024 /* DYNAMIC_SLOTS */)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.rowActions, (action, k) => {\n      return _openBlock(), _createBlock(_component_v_icon, {\n        key: k,\n        small: \"\",\n        class: \"mr-2\",\n        onClick: $event => _ctx.handleFunctionCall(action.name + 'Item', item),\n        color: action.color\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(action.icon ? action.icon : '$' + action.name), 1 /* TEXT */)]),\n\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\", \"color\"]);\n    }), 128 /* KEYED_FRAGMENT */))]))]),\n\n    \"no-data\": _withCtx(() => [_createVNode(_component_v_btn, {\n      color: \"primary\",\n      onClick: _ctx.initialize\n    }, {\n      default: _withCtx(() => [_createTextVNode(\" Reset \")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"])]),\n    _: 2 /* DYNAMIC */\n  }, [_renderList(_ctx.formatterColumns, (col, i) => {\n    return {\n      name: `item.${col.value}`,\n      fn: _withCtx(({\n        header,\n        value\n      }) => [_createTextVNode(_toDisplayString(_ctx.handleFunctionCall(header.formatter, value)) + \" \", 1 /* TEXT */), _createCommentVNode(\" {{ [header.formatter](value) }} \")])\n    };\n  }), _renderList(_ctx.editableColumns, (header, k) => {\n    return {\n      name: `item.${header.value}`,\n      fn: _withCtx(props => [(_openBlock(), _createBlock(_component_v_edit_dialog, {\n        key: k,\n        \"return-value\": props.item[header.value],\n        \"save-text\": _ctx.$t('save'),\n        onOpen: $event => _ctx.setEditedItem(props.item),\n        onCancel: _cache[4] || (_cache[4] = $event => _ctx.resetEditedItem()),\n        onClose: _cache[5] || (_cache[5] = $event => _ctx.resetEditedItem()),\n        onSave: $event => $options.updateCell(header.value),\n        persistent: \"\",\n        large: \"\"\n      }, {\n        input: _withCtx(() => [_createVNode(_component_v_text_field, {\n          value: props.item[header.value],\n          onInput: $options.columnChanged,\n          onKeyup: _withKeys($event => $options.updateCell(header.value), [\"enter\"]),\n          label: \"Edit\",\n          \"single-line\": \"\",\n          counter: \"\"\n        }, null, 8 /* PROPS */, [\"value\", \"onInput\", \"onKeyup\"])]),\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(props.item[header.value]) + \" \", 1 /* TEXT */)]),\n\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"return-value\", \"save-text\", \"onOpen\", \"onSave\"]))])\n    };\n  })]), 1032 /* PROPS, DYNAMIC_SLOTS */, [\"headers\", \"items\", \"loading\", \"options\", \"server-items-length\", \"search\", \"hide-default-header\", \"hide-default-footer\"]);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}