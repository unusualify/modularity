{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.weak-map.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n// Utilities\n\nimport { getCurrentInstance as _getCurrentInstance } from 'vue';\nimport { toKebabCase } from \"./helpers.mjs\";\nexport function getCurrentInstance(name, message) {\n  var vm = _getCurrentInstance();\n  if (!vm) {\n    throw new Error(\"[Vuetify] \".concat(name, \" \").concat(message || 'must be called from inside a setup function'));\n  }\n  return vm;\n}\nexport function getCurrentInstanceName() {\n  var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'composables';\n  var vm = getCurrentInstance(name).type;\n  return toKebabCase((vm === null || vm === void 0 ? void 0 : vm.aliasName) || (vm === null || vm === void 0 ? void 0 : vm.name));\n}\nvar _uid = 0;\nvar _map = new WeakMap();\nexport function getUid() {\n  var vm = getCurrentInstance('getUid');\n  if (_map.has(vm)) return _map.get(vm);else {\n    var uid = _uid++;\n    _map.set(vm, uid);\n    return uid;\n  }\n}\ngetUid.reset = function () {\n  _uid = 0;\n  _map = new WeakMap();\n};","map":{"version":3,"names":["getCurrentInstance","_getCurrentInstance","toKebabCase","name","message","vm","Error","concat","getCurrentInstanceName","arguments","length","undefined","type","aliasName","_uid","_map","WeakMap","getUid","has","get","uid","set","reset"],"sources":["../../src/util/getCurrentInstance.ts"],"sourcesContent":["// Utilities\nimport type { ComponentInternalInstance } from 'vue'\nimport { getCurrentInstance as _getCurrentInstance } from 'vue'\nimport { toKebabCase } from '@/util/helpers'\n\nexport function getCurrentInstance (name: string, message?: string) {\n  const vm = _getCurrentInstance()\n\n  if (!vm) {\n    throw new Error(`[Vuetify] ${name} ${message || 'must be called from inside a setup function'}`)\n  }\n\n  return vm\n}\n\nexport function getCurrentInstanceName (name = 'composables') {\n  const vm = getCurrentInstance(name).type\n\n  return toKebabCase(vm?.aliasName || vm?.name)\n}\n\nlet _uid = 0\nlet _map = new WeakMap<ComponentInternalInstance, number>()\nexport function getUid () {\n  const vm = getCurrentInstance('getUid')\n\n  if (_map.has(vm)) return _map.get(vm)!\n  else {\n    const uid = _uid++\n    _map.set(vm, uid)\n    return uid\n  }\n}\ngetUid.reset = () => {\n  _uid = 0\n  _map = new WeakMap()\n}\n"],"mappings":";;;;;;;;AAAA;;AAEA,SAASA,kBAAkB,IAAIC,mBAAmB,QAAQ,KAAK;AAAA,SACtDC,WAAW;AAEpB,OAAO,SAASF,kBAAkBA,CAAEG,IAAY,EAAEC,OAAgB,EAAE;EAClE,IAAMC,EAAE,GAAGJ,mBAAmB,EAAE;EAEhC,IAAI,CAACI,EAAE,EAAE;IACP,MAAM,IAAIC,KAAK,cAAAC,MAAA,CAAcJ,IAAK,OAAAI,MAAA,CAAGH,OAAO,IAAI,6CAA8C,EAAE;EAClG;EAEA,OAAOC,EAAE;AACX;AAEA,OAAO,SAASG,sBAAsBA,CAAA,EAAwB;EAAA,IAAtBL,IAAI,GAAAM,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,aAAa;EAC1D,IAAMJ,EAAE,GAAGL,kBAAkB,CAACG,IAAI,CAAC,CAACS,IAAI;EAExC,OAAOV,WAAW,CAAC,CAAAG,EAAE,aAAFA,EAAE,uBAAFA,EAAE,CAAEQ,SAAS,MAAIR,EAAE,aAAFA,EAAE,uBAAFA,EAAE,CAAEF,IAAI,EAAC;AAC/C;AAEA,IAAIW,IAAI,GAAG,CAAC;AACZ,IAAIC,IAAI,GAAG,IAAIC,OAAO,EAAqC;AAC3D,OAAO,SAASC,MAAMA,CAAA,EAAI;EACxB,IAAMZ,EAAE,GAAGL,kBAAkB,CAAC,QAAQ,CAAC;EAEvC,IAAIe,IAAI,CAACG,GAAG,CAACb,EAAE,CAAC,EAAE,OAAOU,IAAI,CAACI,GAAG,CAACd,EAAE,CAAC,CAAC,KACjC;IACH,IAAMe,GAAG,GAAGN,IAAI,EAAE;IAClBC,IAAI,CAACM,GAAG,CAAChB,EAAE,EAAEe,GAAG,CAAC;IACjB,OAAOA,GAAG;EACZ;AACF;AACAH,MAAM,CAACK,KAAK,GAAG,YAAM;EACnBR,IAAI,GAAG,CAAC;EACRC,IAAI,GAAG,IAAIC,OAAO,EAAE;AACtB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}