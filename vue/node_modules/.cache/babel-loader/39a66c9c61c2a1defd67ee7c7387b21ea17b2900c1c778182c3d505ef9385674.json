{"ast":null,"code":"import { mapState, mapGetters } from 'vuex';\nexport default {\n  props: {\n    value: null,\n    attributes: {\n      type: Object,\n      default() {\n        return {};\n      }\n    }\n  },\n  data: function () {\n    return {\n      id: Math.ceil(Math.random() * 1000000) + \"-input\",\n      label: this.attributes.title\n    };\n  },\n  created() {},\n  watch: {\n    value(val) {\n      // __log(\n      //   'mixins/input.js value changed',\n      //   val\n      // )\n    }\n  },\n  computed: {\n    ...mapState({\n      errors: state => state.form.errors\n    }),\n    ...mapGetters([]),\n    props() {\n      if (!!this.attributes.props) {\n        return this.configureProps(this.attributes.props);\n      } else {\n        return {};\n      }\n    },\n    secondaryProps() {\n      if (!!this.attributes.props && !!this.attributes.props.props) {\n        return this.configureProps(this.attributes.props.props);\n      } else {\n        return {};\n      }\n    }\n  },\n  methods: {\n    update(value) {\n      this.$emit('input', value);\n    },\n    errorMessages(name) {\n      return this.errors[name];\n    },\n    configureProps(props) {\n      let _props = {};\n      Object.keys(props).forEach((v, i) => {\n        if (parseInt(v) > -1) {\n          _props[props[v]] = true;\n        } else {\n          _props[v] = props[v];\n        }\n      });\n      // __log(_props)\n      return _props;\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}