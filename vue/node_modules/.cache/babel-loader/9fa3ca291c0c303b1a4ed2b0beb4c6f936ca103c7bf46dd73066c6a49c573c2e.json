{"ast":null,"code":"import { AlertMixin } from '@/mixins';\nexport default {\n  mixins: [AlertMixin],\n  data: function data() {\n    return {\n      // show: false,\n      // message: null,\n      // type: 'info',\n      timeout: 3000\n    };\n  },\n  computed: {\n    text: function text() {\n      return this.message || this.defaultMessage;\n    },\n    defaultMessage: function defaultMessage() {\n      return this.$t('messages.' + this.type);\n    }\n  },\n  methods: {\n    info: function info() {\n      var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var timeout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3000;\n      this.open('info', message, timeout);\n    },\n    success: function success() {\n      var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var timeout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3000;\n      this.open('success', message, timeout);\n    },\n    warning: function warning() {\n      var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var timeout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3000;\n      this.open('warning', message, timeout);\n    },\n    error: function error() {\n      var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var timeout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3000;\n      this.open('error', message, timeout);\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}