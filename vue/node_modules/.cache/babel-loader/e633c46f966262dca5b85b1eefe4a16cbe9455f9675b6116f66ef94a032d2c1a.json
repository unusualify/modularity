{"ast":null,"code":"import { renderSlot as _renderSlot, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, createBlock as _createBlock, createElementVNode as _createElementVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-1f9cceb8\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"medialibrary\"\n};\nconst _hoisted_2 = {\n  class: \"medialibrary__frame\"\n};\nconst _hoisted_3 = {\n  class: \"medialibrary__header\",\n  ref: \"form\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"secondarynav secondarynav--desktop py\",\n  slot: \"navigation\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"secondarynav__number\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  slot: \"hidden-filters\"\n}, [/*#__PURE__*/_createCommentVNode(\" <a17-vselect class=\\\"medialibrary__filter-item\\\" ref=\\\"filter\\\" name=\\\"tag\\\" :options=\\\"tags\\\"\\n                              :placeholder=\\\"$trans('media-library.filter-select-label', 'Filter by tag')\\\" :searchable=\\\"true\\\" maxHeight=\\\"175px\\\"/>\\n                  <a17-checkbox class=\\\"medialibrary__filter-item\\\" ref=\\\"unused\\\" name=\\\"unused\\\" :initial-value=\\\"0\\\" :value=\\\"1\\\" :label=\\\"$trans('media-library.unused-filter-label', 'Show unused only')\\\"/> \")], -1 /* HOISTED */));\nconst _hoisted_7 = {\n  class: \"medialibrary__inner\"\n};\nconst _hoisted_8 = {\n  class: \"medialibrary__grid\"\n};\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"aside\", {\n  class: \"medialibrary__sidebar\"\n}, \" Side \", -1 /* HOISTED */));\nconst _hoisted_10 = {\n  key: 0,\n  class: \"medialibrary__footer\"\n};\nconst _hoisted_11 = {\n  class: \"medialibrary__list\",\n  ref: \"list\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_toolbar_title = _resolveComponent(\"v-toolbar-title\");\n  const _component_v_spacer = _resolveComponent(\"v-spacer\");\n  const _component_v_icon = _resolveComponent(\"v-icon\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_toolbar_items = _resolveComponent(\"v-toolbar-items\");\n  const _component_v_toolbar = _resolveComponent(\"v-toolbar\");\n  const _component_v_chip = _resolveComponent(\"v-chip\");\n  const _component_ue_filter = _resolveComponent(\"ue-filter\");\n  const _component_ue_btn = _resolveComponent(\"ue-btn\");\n  const _component_ue_uploader = _resolveComponent(\"ue-uploader\");\n  const _component_ue_modal = _resolveComponent(\"ue-modal\");\n  return _openBlock(), _createBlock(_component_ue_modal, {\n    modelValue: _ctx.show,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.show = $event),\n    id: \"modalMedia\",\n    ref: \"modalMedia\",\n    fullscreen: \"\",\n    \"content-class\": \"bg-primary\"\n  }, {\n    activator: _withCtx(({\n      on,\n      attrs\n    }) => [_renderSlot(_ctx.$slots, \"activator\", {\n      attrs: {\n        ...attrs\n      },\n      on: {\n        ...on\n      }\n    }, undefined, true)]),\n    body: _withCtx(({\n      on,\n      attrs\n    }) => [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_v_toolbar, {\n      dark: \"\",\n      color: \"primary\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_toolbar_title, null, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($options.modalTitle), 1 /* TEXT */)]),\n\n        _: 1 /* STABLE */\n      }), _createVNode(_component_v_spacer), _createVNode(_component_v_toolbar_items, null, {\n        default: _withCtx(() => [_createVNode(_component_v_btn, {\n          icon: \"\",\n          dark: \"\",\n          onClick: _ctx.closeModal\n        }, {\n          default: _withCtx(() => [_createVNode(_component_v_icon, null, {\n            default: _withCtx(() => [_createTextVNode(\"mdi-close\")]),\n            _: 1 /* STABLE */\n          })]),\n\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onClick\"])]),\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_ue_filter, {\n      onSubmit: $options.submitFilter,\n      clearOption: true,\n      onClear: $options.clearFilters\n    }, {\n      default: _withCtx(() => [_ctx.types.length ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.types, navType => {\n        return _openBlock(), _createBlock(_component_v_chip, {\n          key: navType.value,\n          class: \"ma-2\",\n          onClick: _withModifiers($event => $options.updateType(navType.value), [\"prevent\"])\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString(navType.text) + \" \", 1 /* TEXT */), navType.total > 0 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_5, \" (\" + _toDisplayString(navType.total) + \") \", 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]);\n      }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\" <li\\n                    class=\\\"secondarynav__item\\\"\\n                    v-for=\\\"navType in types\\\"\\n                    :key=\\\"navType.value\\\"\\n                    :class=\\\"{ 's--on': type === navType.value, 's--disabled' : type !== navType.value && strict }\\\"\\n                    >\\n                    <a href=\\\"#\\\" @click.prevent=\\\"updateType(navType.value)\\\">\\n                      <span class=\\\"secondarynav__link\\\">{{ navType.text }}</span>\\n                      <span\\n                        v-if=\\\"navType.total > 0\\\" class=\\\"secondarynav__number\\\"\\n                        >\\n                        ({{ navType.total }})\\n                      </span>\\n                    </a>\\n                  </li> \")])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" <div class=\\\"secondarynav secondarynav--mobile secondarynav--dropdown\\\" slot=\\\"navigation\\\">\\n                  <a17-dropdown ref=\\\"secondaryNavDropdown\\\" position=\\\"bottom-left\\\" width=\\\"full\\\" :offset=\\\"0\\\">\\n                    <a17-button class=\\\"secondarynav__button\\\" variant=\\\"dropdown-transparent\\\" size=\\\"small\\\"\\n                                @click=\\\"$refs.secondaryNavDropdown.toggle()\\\" v-if=\\\"selectedType\\\">\\n                      <span class=\\\"secondarynav__link\\\">{{ selectedType.text }}</span><span class=\\\"secondarynav__number\\\">{{ selectedType.total }}</span>\\n                    </a17-button>\\n                    <div slot=\\\"dropdown__content\\\">\\n                      <ul>\\n                        <li v-for=\\\"navType in types\\\" :key=\\\"navType.value\\\" class=\\\"secondarynav__item\\\">\\n                          <a href=\\\"#\\\" v-on:click.prevent=\\\"updateType(navType.value)\\\"><span class=\\\"secondarynav__link\\\">{{ navType.text }}</span><span\\n                            class=\\\"secondarynav__number\\\">{{ navType.total }}</span></a>\\n                        </li>\\n                      </ul>\\n                    </div>\\n                  </a17-dropdown>\\n                </div> \"), _hoisted_6]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onSubmit\", \"onClear\"])], 512 /* NEED_PATCH */), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [_hoisted_9, _ctx.selectedMedias.length && $props.showInsert && _ctx.connector ? (_openBlock(), _createElementBlock(\"footer\", _hoisted_10, [_createCommentVNode(\" <a17-button v-if=\\\"canInsert\\\" variant=\\\"action\\\" @click=\\\"saveAndClose\\\">{{ btnLabel }}</a17-button>\\n                  <a17-button v-else variant=\\\"action\\\" :disabled=\\\"true\\\">{{ btnLabel }}</a17-button> \"), $options.canInsert ? (_openBlock(), _createBlock(_component_ue_btn, {\n      key: 0,\n      onClick: _ctx.saveAndClose\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($options.btnLabel), 1 /* TEXT */)]),\n\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"])) : (_openBlock(), _createBlock(_component_ue_btn, {\n      key: 1,\n      disabled: true\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($options.btnLabel), 1 /* TEXT */)]),\n\n      _: 1 /* STABLE */\n    }))])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_11, [$props.authorized ? (_openBlock(), _createBlock(_component_ue_uploader, {\n      key: 0,\n      ref: \"uploader\",\n      onLoaded: $options.addMedia,\n      onClear: $options.clearSelectedMedias,\n      type: $options.currentTypeObject\n    }, null, 8 /* PROPS */, [\"onLoaded\", \"onClear\", \"type\"])) : _createCommentVNode(\"v-if\", true)], 512 /* NEED_PATCH */)])])])])]),\n\n    _: 3 /* FORWARDED */\n  }, 8 /* PROPS */, [\"modelValue\"]);\n}","map":{"version":3,"names":["class","ref","slot","_createElementVNode","_createCommentVNode","_createBlock","_component_ue_modal","_ctx","show","$event","id","fullscreen","activator","_withCtx","on","attrs","_renderSlot","$slots","body","_hoisted_1","_hoisted_2","_createVNode","_component_v_toolbar","dark","color","_component_v_toolbar_title","$options","modalTitle","_component_v_spacer","_component_v_toolbar_items","_component_v_btn","icon","onClick","closeModal","_component_v_icon","_hoisted_3","_component_ue_filter","onSubmit","submitFilter","clearOption","onClear","clearFilters","types","length","_createElementBlock","_hoisted_4","_Fragment","_renderList","navType","_component_v_chip","key","value","_withModifiers","updateType","text","total","_hoisted_5","_toDisplayString","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","selectedMedias","$props","showInsert","connector","_hoisted_10","canInsert","_component_ue_btn","saveAndClose","btnLabel","disabled","_hoisted_11","authorized","_component_ue_uploader","onLoaded","addMedia","clearSelectedMedias","type","currentTypeObject"],"sources":["/var/www/crm_template/packages/oobook/crm-base/vue/src/js/components/modals/ModalMedia.vue"],"sourcesContent":["<template>\n  <ue-modal\n    v-model=\"show\"\n    id=\"modalMedia\"\n    ref=\"modalMedia\"\n\n    fullscreen\n    content-class=\"bg-primary\"\n\n    >\n    <template v-slot:activator=\"{on, attrs}\">\n      <slot\n          name=\"activator\"\n          :attrs=\"{...attrs}\"\n          :on=\"{...on}\"\n          >\n      </slot>\n    </template>\n    <template\n        v-slot:body=\"{on, attrs}\"\n        v-bind=\"attrs\"\n        v-on=\"on\"\n        >\n\n        <div class=\"medialibrary\">\n          <div class=\"medialibrary__frame\">\n\n            <v-toolbar\n              dark\n              color=\"primary\"\n            >\n              <v-toolbar-title>{{ modalTitle }}</v-toolbar-title>\n              <v-spacer></v-spacer>\n              <v-toolbar-items>\n                <v-btn\n                  icon\n                  dark\n                  @click=\"closeModal\"\n                >\n                  <v-icon>mdi-close</v-icon>\n                </v-btn>\n              </v-toolbar-items>\n            </v-toolbar>\n            <div class=\"medialibrary__header\" ref=\"form\">\n              <ue-filter @submit=\"submitFilter\" :clearOption=\"true\" @clear=\"clearFilters\">\n                <ul class=\"secondarynav secondarynav--desktop py\" slot=\"navigation\" v-if=\"types.length\">\n\n                  <v-chip\n\n                    v-for=\"navType in types\"\n                    :key=\"navType.value\"\n                    class=\"ma-2\"\n                    @click.prevent=\"updateType(navType.value)\"\n                    >\n                      {{  navType.text }}\n                      <span\n                        v-if=\"navType.total > 0\" class=\"secondarynav__number\"\n                        >\n                        ({{ navType.total }})\n                      </span>\n                  </v-chip>\n                  <!-- <li\n                    class=\"secondarynav__item\"\n                    v-for=\"navType in types\"\n                    :key=\"navType.value\"\n                    :class=\"{ 's--on': type === navType.value, 's--disabled' : type !== navType.value && strict }\"\n                    >\n                    <a href=\"#\" @click.prevent=\"updateType(navType.value)\">\n                      <span class=\"secondarynav__link\">{{ navType.text }}</span>\n                      <span\n                        v-if=\"navType.total > 0\" class=\"secondarynav__number\"\n                        >\n                        ({{ navType.total }})\n                      </span>\n                    </a>\n                  </li> -->\n                </ul>\n\n                <!-- <div class=\"secondarynav secondarynav--mobile secondarynav--dropdown\" slot=\"navigation\">\n                  <a17-dropdown ref=\"secondaryNavDropdown\" position=\"bottom-left\" width=\"full\" :offset=\"0\">\n                    <a17-button class=\"secondarynav__button\" variant=\"dropdown-transparent\" size=\"small\"\n                                @click=\"$refs.secondaryNavDropdown.toggle()\" v-if=\"selectedType\">\n                      <span class=\"secondarynav__link\">{{ selectedType.text }}</span><span class=\"secondarynav__number\">{{ selectedType.total }}</span>\n                    </a17-button>\n                    <div slot=\"dropdown__content\">\n                      <ul>\n                        <li v-for=\"navType in types\" :key=\"navType.value\" class=\"secondarynav__item\">\n                          <a href=\"#\" v-on:click.prevent=\"updateType(navType.value)\"><span class=\"secondarynav__link\">{{ navType.text }}</span><span\n                            class=\"secondarynav__number\">{{ navType.total }}</span></a>\n                        </li>\n                      </ul>\n                    </div>\n                  </a17-dropdown>\n                </div> -->\n\n                <div slot=\"hidden-filters\">\n                  <!-- <a17-vselect class=\"medialibrary__filter-item\" ref=\"filter\" name=\"tag\" :options=\"tags\"\n                              :placeholder=\"$trans('media-library.filter-select-label', 'Filter by tag')\" :searchable=\"true\" maxHeight=\"175px\"/>\n                  <a17-checkbox class=\"medialibrary__filter-item\" ref=\"unused\" name=\"unused\" :initial-value=\"0\" :value=\"1\" :label=\"$trans('media-library.unused-filter-label', 'Show unused only')\"/> -->\n                </div>\n              </ue-filter>\n            </div>\n\n            <div class=\"medialibrary__inner\">\n              <div class=\"medialibrary__grid\">\n                <aside class=\"medialibrary__sidebar\">\n                  Side\n                </aside>\n                <footer class=\"medialibrary__footer\" v-if=\"selectedMedias.length && showInsert && connector\">\n                  <!-- <a17-button v-if=\"canInsert\" variant=\"action\" @click=\"saveAndClose\">{{ btnLabel }}</a17-button>\n                  <a17-button v-else variant=\"action\" :disabled=\"true\">{{ btnLabel }}</a17-button> -->\n                  <ue-btn\n                      v-if=\"canInsert\" @click=\"saveAndClose\"\n                      >\n                      {{ btnLabel }}\n                  </ue-btn>\n                  <ue-btn\n                      v-else\n                      :disabled=\"true\"\n                      >\n                      {{ btnLabel }}\n                  </ue-btn>\n                </footer>\n\n                <div class=\"medialibrary__list\" ref=\"list\">\n                  <ue-uploader\n                    ref=\"uploader\"\n                    v-if=\"authorized\"\n                    @loaded=\"addMedia\"\n                    @clear=\"clearSelectedMedias\"\n                    :type=\"currentTypeObject\"\n                    />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n    </template>\n  </ue-modal>\n</template>\n\n<script>\nimport { getCurrentInstance } from 'vue'\nimport { mapState } from 'vuex'\nimport { MEDIA_LIBRARY } from '@/store/mutations'\n\nimport api from '../../store/api/media-library'\n\nimport ACTIONS from '@/store/actions'\n\nimport UEModal from './Modal.vue'\n\nimport scrollToY from '@/utils/scrollToY.js'\n\nimport FormDataAsObj from '@/utils/formDataAsObj.js'\n\nimport { ModalMixin } from '@/mixins'\n\nexport default {\n  mixins: [ModalMixin],\n  components: {\n    'ue-modal': UEModal\n  },\n  props: {\n    modalTitlePrefix: {\n      type: String,\n      default: function (props) {\n        __log(\n          inject('$trans', 'media-library.title', 'Media Library')\n        //   $trans('media-library.title', 'Media Library')\n        )\n        return this.$trans('media-library.title', 'Media Library')\n      }\n    },\n    btnLabelSingle: {\n      type: String,\n      default: function () {\n        return this.$trans('media-library.insert', 'Insert')\n      }\n    },\n    btnLabelUpdate: {\n      type: String,\n      default: function () {\n        return this.$trans('media-library.update', 'Update')\n      }\n    },\n    btnLabelMulti: {\n      type: String,\n      default: function () {\n        return this.$trans('media-library.insert', 'Insert')\n      }\n    },\n    initialPage: {\n      type: Number,\n      default: 1\n    },\n    authorized: {\n      type: Boolean,\n      default: true\n    },\n    showInsert: {\n      type: Boolean,\n      default: true\n    },\n    extraMetadatas: {\n      type: Array,\n      default () {\n        return []\n      }\n    },\n    translatableMetadatas: {\n      type: Array,\n      default () {\n        return []\n      }\n    }\n  },\n  data: function () {\n    return {\n      loading: false,\n      maxPage: 20,\n      mediaItems: [],\n      selectedMedias: [],\n      gridHeight: 0,\n      page: this.initialPage,\n      tags: [],\n      lastScrollTop: 0,\n      gridLoaded: false,\n\n      full: true,\n      show: true\n    }\n  },\n  computed: {\n    renderedMediaItems: function () {\n      return this.mediaItems.map((item) => {\n        item.disabled = (this.filesizeMax > 0 && item.filesizeInMb > this.filesizeMax) ||\n            (this.widthMin > 0 && item.width < this.widthMin) ||\n            (this.heightMin > 0 && item.height < this.heightMin)\n        return item\n      })\n    },\n    currentTypeObject: function () {\n      return this.types.find((type) => {\n        return type.value === this.type\n      })\n    },\n    endpoint: function () {\n      return this.currentTypeObject.endpoint\n    },\n    modalTitle: function () {\n      if (this.connector) {\n        if (this.indexToReplace > -1) return this.modalTitlePrefix + ' – ' + this.btnLabelUpdate\n        return this.selectedMedias.length > 1 ? this.modalTitlePrefix + ' – ' + this.btnLabelMulti : this.modalTitlePrefix + ' – ' + this.btnLabelSingle\n      }\n      return this.modalTitlePrefix\n    },\n    btnLabel: function () {\n      let type = this.$trans('media-library.types.single.' + this.type, this.type)\n\n      if (this.indexToReplace > -1) {\n        return this.btnLabelUpdate + ' ' + type\n      } else {\n        if (this.selectedMedias.length > 1) {\n          type = this.$trans('media-library.types.multiple.' + this.type, this.type)\n        }\n\n        return this.btnLabelSingle + ' ' + type\n      }\n    },\n    usedMedias: function () {\n      return this.selected[this.connector] || []\n    },\n    selectedType: function () {\n      const self = this\n      const navItem = self.types.filter(function (t) {\n        return t.value === self.type\n      })\n      return navItem[0]\n    },\n    canInsert: function () {\n      return !this.selectedMedias.some(sMedia => !!this.usedMedias.find(uMedia => uMedia.id === sMedia.id))\n    },\n    ...mapState({\n      connector: state => state.mediaLibrary.connector,\n      max: state => state.mediaLibrary.max,\n      filesizeMax: state => state.mediaLibrary.filesizeMax,\n      widthMin: state => state.mediaLibrary.widthMin,\n      heightMin: state => state.mediaLibrary.heightMin,\n      type: state => state.mediaLibrary.type, // image, video, file\n      types: state => state.mediaLibrary.types,\n      strict: state => state.mediaLibrary.strict,\n      selected: state => state.mediaLibrary.selected,\n      indexToReplace: state => state.mediaLibrary.indexToReplace\n\n      // showModal: state => state.mediaLibrary.showModal,\n\n      // show: state => state.mediaLibrary.showModal,\n    })\n\n    // show: {\n    //     get () {\n    //         return this.$store.state.mediaLibrary.showModal;\n    //     },\n    //     set (value) {\n    //         // this.$store.dispatch(ACTIONS.TOGGLE_MEDIA_MODAL, value)\n    //     }\n    // },\n  },\n  watch: {\n    type: function () {\n      this.clearMediaItems()\n      this.gridLoaded = false\n    }\n  },\n  methods: {\n\n    // for ue-uploader\n    addMedia: function (media) {\n      const index = this.mediaItems.findIndex(function (item) {\n        return item.id === media.id\n      })\n\n      // Check of the media item exists i.e replacement\n      if (index > -1) {\n        for (const mediaRole in this.selected) {\n          this.selected[mediaRole].forEach((mediaCrop, index) => {\n            if (media.id === mediaCrop.id) {\n              const crops = []\n\n              for (const crop in mediaCrop.crops) {\n                crops[crop] = {\n                  height: media.height === mediaCrop.height ? mediaCrop.crops[crop].height : media.height,\n                  name: crop,\n                  width: media.width === mediaCrop.width ? mediaCrop.crops[crop].width : media.width,\n                  x: media.width === mediaCrop.width ? mediaCrop.crops[crop].x : 0,\n                  y: media.height === mediaCrop.height ? mediaCrop.crops[crop].y : 0\n                }\n              }\n\n              this.$store.commit(MEDIA_LIBRARY.UPDATE_MEDIAS, {\n                index,\n                media: {\n                  ...media,\n                  width: media.width === mediaCrop.width ? mediaCrop.width : media.width,\n                  height: media.height === mediaCrop.height ? mediaCrop.height : media.height,\n                  crops\n                },\n                mediaRole\n              })\n            }\n          })\n        }\n\n        this.$set(this.mediaItems, index, media)\n        this.selectedMedias.unshift(media)\n      } else {\n        // add media in first position of the available media\n        this.mediaItems.unshift(media)\n        this.$store.commit(MEDIA_LIBRARY.INCREMENT_MEDIA_TYPE_TOTAL, this.type)\n        // select it\n        this.updateSelectedMedias(media.id)\n      }\n    },\n    updateSelectedMedias: function (item, shift = false) {\n      const id = item.id\n      const alreadySelectedMedia = this.selectedMedias.filter(function (media) {\n        return media.id === id\n      })\n\n      // not already selected\n      if (alreadySelectedMedia.length === 0) {\n        if (this.max === 1) this.clearSelectedMedias()\n        if (this.selectedMedias.length >= this.max && this.max > 0) return\n\n        if (shift && this.selectedMedias.length > 0) {\n          const lastSelectedMedia = this.selectedMedias[this.selectedMedias.length - 1]\n          const lastSelectedMediaIndex = this.mediaItems.findIndex((media) => media.id === lastSelectedMedia.id)\n          const selectedMediaIndex = this.mediaItems.findIndex((media) => media.id === id)\n          if (selectedMediaIndex === -1 && lastSelectedMediaIndex === -1) return\n\n          let start = null\n          let end = null\n          if (lastSelectedMediaIndex < selectedMediaIndex) {\n            start = lastSelectedMediaIndex + 1\n            end = selectedMediaIndex + 1\n          } else {\n            start = selectedMediaIndex\n            end = lastSelectedMediaIndex\n          }\n\n          const selectedMedias = this.mediaItems.slice(start, end)\n\n          selectedMedias.forEach((media) => {\n            if (this.selectedMedias.length >= this.max && this.max > 0) return\n            const index = this.selectedMedias.findIndex((m) => m.id === media.id)\n            if (index === -1) {\n              this.selectedMedias.push(media)\n            }\n          })\n        } else {\n          const mediaToSelect = this.mediaItems.filter(function (media) {\n            return media.id === id\n          })\n\n          // Add one media to the selected media\n          if (mediaToSelect.length) this.selectedMedias.push(mediaToSelect[0])\n        }\n      } else {\n        // Remove one item from the selected media\n        this.selectedMedias = this.selectedMedias.filter(function (media) {\n          return media.id !== id\n        })\n      }\n    },\n    clearSelectedMedias: function () {\n      this.selectedMedias.splice(0)\n    },\n\n    // for ue-filter\n    clearFilters: function () {\n      const self = this\n      // reset tags\n      if (this.$refs.filter) this.$refs.filter.value = null\n      // reset unused field\n      if (this.$refs.unused) {\n        const input = this.$refs.unused.$el.querySelector('input')\n        input && input.checked && input.click()\n      }\n\n      this.$nextTick(function () {\n        self.submitFilter()\n      })\n    },\n    submitFilter: function (formData) {\n      const self = this\n      const el = this.$refs.list\n      // when changing filters, reset the page to 1\n      this.page = 1\n\n      this.clearMediaItems()\n      this.clearSelectedMedias()\n\n      if (el.scrollTop === 0) {\n        self.reloadGrid()\n        return\n      }\n\n      scrollToY({\n        el,\n        offset: 0,\n        easing: 'easeOut',\n        onComplete: function () {\n          self.reloadGrid()\n        }\n      })\n    },\n    clearMediaItems: function () {\n      this.mediaItems.splice(0)\n    },\n    clearSelectedMedias: function () {\n      this.selectedMedias.splice(0)\n    },\n    reloadGrid: function () {\n      this.loading = true\n\n      const form = this.$refs.form\n      const formdata = this.getFormData(form)\n\n      // if (this.selected[this.connector]) {\n      //   formdata.except = this.selected[this.connector].map((media) => {\n      //     return media.id\n      //   })\n      //   console.log(formdata.except)\n      // }\n\n      // see api/media-library for actual ajax\n      api.get(this.endpoint, formdata, (resp) => {\n        // add medias here\n        resp.data.items.forEach(item => {\n          if (!this.mediaItems.find(media => media.id === item.id)) {\n            this.mediaItems.push(item)\n          }\n        })\n        this.maxPage = resp.data.maxPage || 1\n        this.tags = resp.data.tags || []\n        this.$store.commit(MEDIA_LIBRARY.UPDATE_MEDIA_TYPE_TOTAL, { type: this.type, total: resp.data.total })\n        this.loading = false\n        this.listenScrollPosition()\n        this.gridLoaded = true\n      }, (error) => {\n        // this.$store.commit(NOTIFICATION.SET_NOTIF, {\n        //   message: error.data.message,\n        //   variant: 'error'\n        // })\n      })\n    },\n    updateType: function (newType) {\n      if (this.loading) return\n      if (this.strict) return\n      if (this.type === newType) return\n\n      this.$store.commit(MEDIA_LIBRARY.UPDATE_MEDIA_TYPE, newType)\n      this.submitFilter()\n    },\n\n    getFormData: function (form) {\n      let data = FormDataAsObj(form)\n\n      if (data) data.page = this.page\n      else data = { page: this.page }\n\n      data.type = this.type\n\n      if (Array.isArray(data.unused) && data.unused.length) {\n        data.unused = data.unused[0]\n      }\n\n      return data\n    }\n\n  },\n\n  created () {\n\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n\n  $width_sidebar: (default: 290px, small: 250px, xsmall: 200px);\n\n  .medialibrary {\n    display: block;\n    width: 100%;\n    min-height: 100%;\n    padding: 0;\n    position: relative;\n  }\n\n  .medialibrary__header {\n    background: $color__border--light;\n    border-bottom: 1px solid $color__border;\n    padding: 0 20px;\n\n    @include breakpoint(small-) {\n      .secondarynav {\n        padding-bottom: 10px;\n      }\n    }\n  }\n\n  .medialibrary__frame {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    display: flex;\n    flex-flow: column nowrap;\n  }\n\n  .medialibrary__inner {\n    position: relative;\n    width: 100%;\n    overflow: hidden;\n    flex-grow: 1;\n  }\n\n  .medialibrary__footer {\n    position: absolute;\n    right: 0;\n    z-index: 76;\n    bottom: 0;\n    width: map-get($width_sidebar, default); // fixed arbitrary width\n    color: $color__text--light;\n    padding: 10px;\n    overflow: hidden;\n    background: $color__border--light;\n    border-top: 1px solid $color__border;\n\n    > button {\n      display: block;\n      width: 100%;\n    }\n\n    @include breakpoint(small) {\n      width: map-get($width_sidebar, small);\n    }\n\n    @include breakpoint(xsmall) {\n      width: map-get($width_sidebar, xsmall);\n    }\n\n    @media screen and (max-width: 550px) {\n      width: 100%;\n    }\n  }\n\n  .medialibrary__sidebar {\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    width: map-get($width_sidebar, default); // fixed arbitrary width\n    padding: 0 0 80px 0; // 80px so we have some room to display the tags dropdown menu under the field\n    z-index: 75;\n    background: $color__border--light;\n    overflow: auto;\n\n    @include breakpoint(small) {\n      width: map-get($width_sidebar, small);\n    }\n\n    @include breakpoint(xsmall) {\n      width: map-get($width_sidebar, xsmall);\n    }\n\n    @media screen and (max-width: 550px) {\n      display: none;\n    }\n  }\n\n  .medialibrary__list {\n    margin: 0;\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    overflow: auto;\n    padding: 10px;\n  }\n\n  .medialibrary__list-items {\n    position: relative;\n    display: block;\n    width: 100%;\n    min-height: 100%;\n  }\n\n  /* with a sidebar visible */\n  .medialibrary__list {\n    right: map-get($width_sidebar, default);\n\n    @include breakpoint(small) {\n      right: map-get($width_sidebar, small);\n    }\n\n    @include breakpoint(xsmall) {\n      right: map-get($width_sidebar, xsmall);\n    }\n\n    @media screen and (max-width: 550px) {\n      right: 0;\n    }\n  }\n</style>\n\n<style lang=\"scss\">\n\n  .medialibrary__filter-item {\n    .vselect {\n      min-width: 200px;\n    }\n  }\n\n  .medialibrary__filter-item.checkbox {\n    margin-top: 8px;\n    margin-right: 45px !important;\n  }\n\n  .medialibrary__header {\n    @include breakpoint(small-) {\n      .filter__inner {\n        flex-direction: column;\n      }\n\n      .filter__search, .filter__navigation {\n        padding-top: 10px;\n        display: flex;\n      }\n\n      .filter__search input {\n        flex-grow: 1;\n      }\n    }\n  }\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}