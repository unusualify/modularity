{"ast":null,"code":"/* eslint-disable max-statements */\n// Composables\nimport { makeElevationProps } from \"../../composables/elevation.mjs\";\nimport { makeRoundedProps } from \"../../composables/rounded.mjs\";\nimport { useRtl } from \"../../composables/locale.mjs\"; // Utilities\nimport { clamp, createRange, propsFactory } from \"../../util/index.mjs\";\nimport { computed, provide, ref, toRef } from 'vue';\n\n// Types\n\nexport const VSliderSymbol = Symbol.for('vuetify:v-slider');\nexport function getOffset(e, el, direction) {\n  const vertical = direction === 'vertical';\n  const rect = el.getBoundingClientRect();\n  const touch = 'touches' in e ? e.touches[0] : e;\n  return vertical ? touch.clientY - (rect.top + rect.height / 2) : touch.clientX - (rect.left + rect.width / 2);\n}\nfunction getPosition(e, position) {\n  if ('touches' in e && e.touches.length) return e.touches[0][position];else if ('changedTouches' in e && e.changedTouches.length) return e.changedTouches[0][position];else return e[position];\n}\nexport const makeSliderProps = propsFactory({\n  disabled: Boolean,\n  error: Boolean,\n  readonly: Boolean,\n  max: {\n    type: [Number, String],\n    default: 100\n  },\n  min: {\n    type: [Number, String],\n    default: 0\n  },\n  step: {\n    type: [Number, String],\n    default: 0\n  },\n  thumbColor: String,\n  thumbLabel: {\n    type: [Boolean, String],\n    default: undefined,\n    validator: v => typeof v === 'boolean' || v === 'always'\n  },\n  thumbSize: {\n    type: [Number, String],\n    default: 20\n  },\n  showTicks: {\n    type: [Boolean, String],\n    default: false,\n    validator: v => typeof v === 'boolean' || v === 'always'\n  },\n  ticks: {\n    type: [Array, Object]\n  },\n  tickSize: {\n    type: [Number, String],\n    default: 2\n  },\n  color: String,\n  trackColor: String,\n  trackFillColor: String,\n  trackSize: {\n    type: [Number, String],\n    default: 4\n  },\n  direction: {\n    type: String,\n    default: 'horizontal',\n    validator: v => ['vertical', 'horizontal'].includes(v)\n  },\n  reverse: Boolean,\n  ...makeRoundedProps(),\n  ...makeElevationProps({\n    elevation: 2\n  })\n}, 'slider');\nexport const useSlider = _ref => {\n  let {\n    props,\n    handleSliderMouseUp,\n    handleMouseMove,\n    getActiveThumb\n  } = _ref;\n  const {\n    isRtl\n  } = useRtl();\n  const isReversed = toRef(props, 'reverse');\n  const horizontalDirection = computed(() => {\n    let hd = isRtl.value ? 'rtl' : 'ltr';\n    if (props.reverse) {\n      hd = hd === 'rtl' ? 'ltr' : 'rtl';\n    }\n    return hd;\n  });\n  const min = computed(() => parseFloat(props.min));\n  const max = computed(() => parseFloat(props.max));\n  const step = computed(() => props.step > 0 ? parseFloat(props.step) : 0);\n  const decimals = computed(() => {\n    const trimmedStep = step.value.toString().trim();\n    return trimmedStep.includes('.') ? trimmedStep.length - trimmedStep.indexOf('.') - 1 : 0;\n  });\n  const thumbSize = computed(() => parseInt(props.thumbSize, 10));\n  const tickSize = computed(() => parseInt(props.tickSize, 10));\n  const trackSize = computed(() => parseInt(props.trackSize, 10));\n  const numTicks = computed(() => (max.value - min.value) / step.value);\n  const disabled = toRef(props, 'disabled');\n  const vertical = computed(() => props.direction === 'vertical');\n  const thumbColor = computed(() => props.error || props.disabled ? undefined : props.thumbColor ?? props.color);\n  const trackColor = computed(() => props.error || props.disabled ? undefined : props.trackColor ?? props.color);\n  const trackFillColor = computed(() => props.error || props.disabled ? undefined : props.trackFillColor ?? props.color);\n  const mousePressed = ref(false);\n  const startOffset = ref(0);\n  const trackContainerRef = ref();\n  const activeThumbRef = ref();\n  function roundValue(value) {\n    if (step.value <= 0) return value;\n    const clamped = clamp(value, min.value, max.value);\n    const offset = min.value % step.value;\n    const newValue = Math.round((clamped - offset) / step.value) * step.value + offset;\n    return parseFloat(Math.min(newValue, max.value).toFixed(decimals.value));\n  }\n  function parseMouseMove(e) {\n    const vertical = props.direction === 'vertical';\n    const start = vertical ? 'top' : 'left';\n    const length = vertical ? 'height' : 'width';\n    const position = vertical ? 'clientY' : 'clientX';\n    const {\n      [start]: trackStart,\n      [length]: trackLength\n    } = trackContainerRef.value?.$el.getBoundingClientRect();\n    const clickOffset = getPosition(e, position);\n\n    // It is possible for left to be NaN, force to number\n    let clickPos = Math.min(Math.max((clickOffset - trackStart - startOffset.value) / trackLength, 0), 1) || 0;\n    if (vertical || horizontalDirection.value === 'rtl') clickPos = 1 - clickPos;\n    return roundValue(min.value + clickPos * (max.value - min.value));\n  }\n  let thumbMoved = false;\n  const handleStop = e => {\n    if (!thumbMoved) {\n      startOffset.value = 0;\n      handleSliderMouseUp(parseMouseMove(e));\n    }\n    mousePressed.value = false;\n    thumbMoved = false;\n    startOffset.value = 0;\n  };\n  const handleStart = e => {\n    activeThumbRef.value = getActiveThumb(e);\n    if (!activeThumbRef.value) return;\n    activeThumbRef.value.focus();\n    mousePressed.value = true;\n    if (activeThumbRef.value.contains(e.target)) {\n      thumbMoved = true;\n      startOffset.value = getOffset(e, activeThumbRef.value, props.direction);\n    } else {\n      startOffset.value = 0;\n      handleMouseMove(parseMouseMove(e));\n    }\n  };\n  const moveListenerOptions = {\n    passive: true,\n    capture: true\n  };\n  function onMouseMove(e) {\n    thumbMoved = true;\n    handleMouseMove(parseMouseMove(e));\n  }\n  function onSliderMouseUp(e) {\n    e.stopPropagation();\n    e.preventDefault();\n    handleStop(e);\n    window.removeEventListener('mousemove', onMouseMove, moveListenerOptions);\n    window.removeEventListener('mouseup', onSliderMouseUp);\n  }\n  function onSliderTouchend(e) {\n    handleStop(e);\n    window.removeEventListener('touchmove', onMouseMove, moveListenerOptions);\n    e.target?.removeEventListener('touchend', onSliderTouchend);\n  }\n  function onSliderTouchstart(e) {\n    handleStart(e);\n    window.addEventListener('touchmove', onMouseMove, moveListenerOptions);\n    e.target?.addEventListener('touchend', onSliderTouchend, {\n      passive: false\n    });\n  }\n  function onSliderMousedown(e) {\n    e.preventDefault();\n    handleStart(e);\n    window.addEventListener('mousemove', onMouseMove, moveListenerOptions);\n    window.addEventListener('mouseup', onSliderMouseUp, {\n      passive: false\n    });\n  }\n  const position = val => {\n    const percentage = (val - min.value) / (max.value - min.value) * 100;\n    return clamp(isNaN(percentage) ? 0 : percentage, 0, 100);\n  };\n  const parsedTicks = computed(() => {\n    if (!props.ticks) {\n      return numTicks.value !== Infinity ? createRange(numTicks.value + 1).map(t => {\n        const value = min.value + t * step.value;\n        return {\n          value,\n          position: position(value)\n        };\n      }) : [];\n    }\n    if (Array.isArray(props.ticks)) return props.ticks.map(t => ({\n      value: t,\n      position: position(t),\n      label: t.toString()\n    }));\n    return Object.keys(props.ticks).map(key => ({\n      value: parseFloat(key),\n      position: position(parseFloat(key)),\n      label: props.ticks[key]\n    }));\n  });\n  const hasLabels = computed(() => parsedTicks.value.some(_ref2 => {\n    let {\n      label\n    } = _ref2;\n    return !!label;\n  }));\n  const data = {\n    activeThumbRef,\n    color: toRef(props, 'color'),\n    decimals,\n    disabled,\n    direction: toRef(props, 'direction'),\n    elevation: toRef(props, 'elevation'),\n    hasLabels,\n    horizontalDirection,\n    isReversed,\n    min,\n    max,\n    mousePressed,\n    numTicks,\n    onSliderMousedown,\n    onSliderTouchstart,\n    parsedTicks,\n    parseMouseMove,\n    position,\n    readonly: toRef(props, 'readonly'),\n    rounded: toRef(props, 'rounded'),\n    roundValue,\n    showTicks: toRef(props, 'showTicks'),\n    startOffset,\n    step,\n    thumbSize,\n    thumbColor,\n    thumbLabel: toRef(props, 'thumbLabel'),\n    ticks: toRef(props, 'ticks'),\n    tickSize,\n    trackColor,\n    trackContainerRef,\n    trackFillColor,\n    trackSize,\n    vertical\n  };\n  provide(VSliderSymbol, data);\n  return data;\n};","map":{"version":3,"names":["makeElevationProps","makeRoundedProps","useRtl","clamp","createRange","propsFactory","computed","provide","ref","toRef","VSliderSymbol","Symbol","for","getOffset","e","el","direction","vertical","rect","getBoundingClientRect","touch","touches","clientY","top","height","clientX","left","width","getPosition","position","length","changedTouches","makeSliderProps","disabled","Boolean","error","readonly","max","type","Number","String","default","min","step","thumbColor","thumbLabel","undefined","validator","v","thumbSize","showTicks","ticks","Array","Object","tickSize","color","trackColor","trackFillColor","trackSize","includes","reverse","elevation","useSlider","_ref","props","handleSliderMouseUp","handleMouseMove","getActiveThumb","isRtl","isReversed","horizontalDirection","hd","value","parseFloat","decimals","trimmedStep","toString","trim","indexOf","parseInt","numTicks","mousePressed","startOffset","trackContainerRef","activeThumbRef","roundValue","clamped","offset","newValue","Math","round","toFixed","parseMouseMove","start","trackStart","trackLength","$el","clickOffset","clickPos","thumbMoved","handleStop","handleStart","focus","contains","target","moveListenerOptions","passive","capture","onMouseMove","onSliderMouseUp","stopPropagation","preventDefault","window","removeEventListener","onSliderTouchend","onSliderTouchstart","addEventListener","onSliderMousedown","val","percentage","isNaN","parsedTicks","Infinity","map","t","isArray","label","keys","key","hasLabels","some","_ref2","data","rounded"],"sources":["../../../src/components/VSlider/slider.ts"],"sourcesContent":["/* eslint-disable max-statements */\n// Composables\nimport { makeElevationProps } from '@/composables/elevation'\nimport { makeRoundedProps } from '@/composables/rounded'\nimport { useRtl } from '@/composables/locale'\n\n// Utilities\nimport { clamp, createRange, propsFactory } from '@/util'\nimport { computed, provide, ref, toRef } from 'vue'\n\n// Types\nimport type { ExtractPropTypes, InjectionKey, PropType, Ref } from 'vue'\nimport type { VSliderTrack } from './VSliderTrack'\n\ntype Tick = {\n  value: number\n  position: number\n  label?: string\n}\n\ntype SliderProvide = {\n  activeThumbRef: Ref<HTMLElement | undefined>\n  color: Ref<string | undefined>\n  decimals: Ref<number>\n  direction: Ref<'vertical' | 'horizontal'>\n  disabled: Ref<boolean | undefined>\n  elevation: Ref<number | string | undefined>\n  min: Ref<number>\n  max: Ref<number>\n  mousePressed: Ref<boolean>\n  numTicks: Ref<number>\n  onSliderMousedown: (e: MouseEvent) => void\n  onSliderTouchstart: (e: TouchEvent) => void\n  parseMouseMove: (e: MouseEvent | TouchEvent) => number\n  position: (val: number) => number\n  readonly: Ref<boolean | undefined>\n  rounded: Ref<boolean | number | string | undefined>\n  roundValue: (value: number) => number\n  thumbLabel: Ref<boolean | string | undefined>\n  showTicks: Ref<boolean | 'always'>\n  startOffset: Ref<number>\n  step: Ref<number>\n  thumbSize: Ref<number>\n  thumbColor: Ref<string | undefined>\n  trackColor: Ref<string | undefined>\n  trackFillColor: Ref<string | undefined>\n  trackSize: Ref<number>\n  ticks: Ref<number[] | Record<string, string> | undefined>\n  tickSize: Ref<number>\n  trackContainerRef: Ref<VSliderTrack | undefined>\n  vertical: Ref<boolean>\n  parsedTicks: Ref<Tick[]>\n  hasLabels: Ref<boolean>\n  isReversed: Ref<boolean>\n  horizontalDirection: Ref<'ltr' | 'rtl'>\n}\n\nexport const VSliderSymbol: InjectionKey<SliderProvide> = Symbol.for('vuetify:v-slider')\n\nexport function getOffset (e: MouseEvent | TouchEvent, el: HTMLElement, direction: string) {\n  const vertical = direction === 'vertical'\n  const rect = el.getBoundingClientRect()\n  const touch = 'touches' in e ? e.touches[0] : e\n  return vertical\n    ? touch.clientY - (rect.top + rect.height / 2)\n    : touch.clientX - (rect.left + rect.width / 2)\n}\n\nfunction getPosition (e: MouseEvent | TouchEvent, position: 'clientX' | 'clientY'): number {\n  if ('touches' in e && e.touches.length) return e.touches[0][position]\n  else if ('changedTouches' in e && e.changedTouches.length) return e.changedTouches[0][position]\n  else return (e as MouseEvent)[position]\n}\n\nexport const makeSliderProps = propsFactory({\n  disabled: Boolean,\n  error: Boolean,\n  readonly: Boolean,\n  max: {\n    type: [Number, String],\n    default: 100,\n  },\n  min: {\n    type: [Number, String],\n    default: 0,\n  },\n  step: {\n    type: [Number, String],\n    default: 0,\n  },\n  thumbColor: String,\n  thumbLabel: {\n    type: [Boolean, String] as PropType<boolean | 'always' | undefined>,\n    default: undefined,\n    validator: (v: any) => typeof v === 'boolean' || v === 'always',\n  },\n  thumbSize: {\n    type: [Number, String],\n    default: 20,\n  },\n  showTicks: {\n    type: [Boolean, String] as PropType<boolean | 'always'>,\n    default: false,\n    validator: (v: any) => typeof v === 'boolean' || v === 'always',\n  },\n  ticks: {\n    type: [Array, Object] as PropType<number[] | Record<number, string>>,\n  },\n  tickSize: {\n    type: [Number, String],\n    default: 2,\n  },\n  color: String,\n  trackColor: String,\n  trackFillColor: String,\n  trackSize: {\n    type: [Number, String],\n    default: 4,\n  },\n  direction: {\n    type: String as PropType<'horizontal' | 'vertical'>,\n    default: 'horizontal',\n    validator: (v: any) => ['vertical', 'horizontal'].includes(v),\n  },\n  reverse: Boolean,\n\n  ...makeRoundedProps(),\n  ...makeElevationProps({\n    elevation: 2,\n  }),\n}, 'slider')\n\ntype SliderProps = ExtractPropTypes<ReturnType<typeof makeSliderProps>>\n\nexport const useSlider = ({\n  props,\n  handleSliderMouseUp,\n  handleMouseMove,\n  getActiveThumb,\n}: {\n  props: SliderProps\n  handleSliderMouseUp: (v: number) => void\n  handleMouseMove: (v: number) => void\n  getActiveThumb: (e: MouseEvent | TouchEvent) => HTMLElement\n}) => {\n  const { isRtl } = useRtl()\n  const isReversed = toRef(props, 'reverse')\n  const horizontalDirection = computed(() => {\n    let hd: 'ltr' | 'rtl' = isRtl.value ? 'rtl' : 'ltr'\n\n    if (props.reverse) {\n      hd = hd === 'rtl' ? 'ltr' : 'rtl'\n    }\n\n    return hd\n  })\n  const min = computed(() => parseFloat(props.min))\n  const max = computed(() => parseFloat(props.max))\n  const step = computed(() => props.step > 0 ? parseFloat(props.step) : 0)\n  const decimals = computed(() => {\n    const trimmedStep = step.value.toString().trim()\n    return trimmedStep.includes('.')\n      ? (trimmedStep.length - trimmedStep.indexOf('.') - 1)\n      : 0\n  })\n\n  const thumbSize = computed(() => parseInt(props.thumbSize, 10))\n  const tickSize = computed(() => parseInt(props.tickSize, 10))\n  const trackSize = computed(() => parseInt(props.trackSize, 10))\n  const numTicks = computed(() => (max.value - min.value) / step.value)\n  const disabled = toRef(props, 'disabled')\n  const vertical = computed(() => props.direction === 'vertical')\n\n  const thumbColor = computed(() => props.error || props.disabled ? undefined : props.thumbColor ?? props.color)\n  const trackColor = computed(() => props.error || props.disabled ? undefined : props.trackColor ?? props.color)\n  const trackFillColor = computed(() => props.error || props.disabled ? undefined : props.trackFillColor ?? props.color)\n\n  const mousePressed = ref(false)\n\n  const startOffset = ref(0)\n  const trackContainerRef = ref<VSliderTrack | undefined>()\n  const activeThumbRef = ref<HTMLElement | undefined>()\n\n  function roundValue (value: number) {\n    if (step.value <= 0) return value\n\n    const clamped = clamp(value, min.value, max.value)\n    const offset = min.value % step.value\n    const newValue = Math.round((clamped - offset) / step.value) * step.value + offset\n\n    return parseFloat(Math.min(newValue, max.value).toFixed(decimals.value))\n  }\n\n  function parseMouseMove (e: MouseEvent | TouchEvent): number {\n    const vertical = props.direction === 'vertical'\n    const start = vertical ? 'top' : 'left'\n    const length = vertical ? 'height' : 'width'\n    const position = vertical ? 'clientY' : 'clientX'\n\n    const {\n      [start]: trackStart,\n      [length]: trackLength,\n    } = trackContainerRef.value?.$el.getBoundingClientRect()\n    const clickOffset = getPosition(e, position)\n\n    // It is possible for left to be NaN, force to number\n    let clickPos = Math.min(Math.max((clickOffset - trackStart - startOffset.value) / trackLength, 0), 1) || 0\n\n    if (vertical || horizontalDirection.value === 'rtl') clickPos = 1 - clickPos\n\n    return roundValue(min.value + clickPos * (max.value - min.value))\n  }\n\n  let thumbMoved = false\n\n  const handleStop = (e: MouseEvent | TouchEvent) => {\n    if (!thumbMoved) {\n      startOffset.value = 0\n      handleSliderMouseUp(parseMouseMove(e))\n    }\n\n    mousePressed.value = false\n    thumbMoved = false\n    startOffset.value = 0\n  }\n\n  const handleStart = (e: MouseEvent | TouchEvent) => {\n    activeThumbRef.value = getActiveThumb(e)\n\n    if (!activeThumbRef.value) return\n\n    activeThumbRef.value.focus()\n    mousePressed.value = true\n\n    if (activeThumbRef.value.contains(e.target as Node)) {\n      thumbMoved = true\n      startOffset.value = getOffset(e, activeThumbRef.value, props.direction)\n    } else {\n      startOffset.value = 0\n      handleMouseMove(parseMouseMove(e))\n    }\n  }\n\n  const moveListenerOptions = { passive: true, capture: true }\n\n  function onMouseMove (e: MouseEvent | TouchEvent) {\n    thumbMoved = true\n    handleMouseMove(parseMouseMove(e))\n  }\n\n  function onSliderMouseUp (e: MouseEvent) {\n    e.stopPropagation()\n    e.preventDefault()\n\n    handleStop(e)\n\n    window.removeEventListener('mousemove', onMouseMove, moveListenerOptions)\n    window.removeEventListener('mouseup', onSliderMouseUp)\n  }\n\n  function onSliderTouchend (e: TouchEvent) {\n    handleStop(e)\n\n    window.removeEventListener('touchmove', onMouseMove, moveListenerOptions)\n    e.target?.removeEventListener('touchend', onSliderTouchend as EventListener)\n  }\n\n  function onSliderTouchstart (e: TouchEvent) {\n    handleStart(e)\n\n    window.addEventListener('touchmove', onMouseMove, moveListenerOptions)\n    e.target?.addEventListener('touchend', onSliderTouchend as EventListener, { passive: false })\n  }\n\n  function onSliderMousedown (e: MouseEvent) {\n    e.preventDefault()\n\n    handleStart(e)\n\n    window.addEventListener('mousemove', onMouseMove, moveListenerOptions)\n    window.addEventListener('mouseup', onSliderMouseUp, { passive: false })\n  }\n\n  const position = (val: number) => {\n    const percentage = (val - min.value) / (max.value - min.value) * 100\n    return clamp(isNaN(percentage) ? 0 : percentage, 0, 100)\n  }\n\n  const parsedTicks = computed<Tick[]>(() => {\n    if (!props.ticks) {\n      return numTicks.value !== Infinity ? createRange(numTicks.value + 1).map(t => {\n        const value = min.value + (t * step.value)\n        return {\n          value,\n          position: position(value),\n        }\n      }) : []\n    }\n    if (Array.isArray(props.ticks)) return props.ticks.map(t => ({ value: t, position: position(t), label: t.toString() }))\n    return Object.keys(props.ticks).map(key => ({\n      value: parseFloat(key),\n      position: position(parseFloat(key)),\n      label: (props.ticks as Record<string, string>)[key],\n    }))\n  })\n\n  const hasLabels = computed(() => parsedTicks.value.some(({ label }) => !!label))\n\n  const data: SliderProvide = {\n    activeThumbRef,\n    color: toRef(props, 'color'),\n    decimals,\n    disabled,\n    direction: toRef(props, 'direction'),\n    elevation: toRef(props, 'elevation'),\n    hasLabels,\n    horizontalDirection,\n    isReversed,\n    min,\n    max,\n    mousePressed,\n    numTicks,\n    onSliderMousedown,\n    onSliderTouchstart,\n    parsedTicks,\n    parseMouseMove,\n    position,\n    readonly: toRef(props, 'readonly'),\n    rounded: toRef(props, 'rounded'),\n    roundValue,\n    showTicks: toRef(props, 'showTicks'),\n    startOffset,\n    step,\n    thumbSize,\n    thumbColor,\n    thumbLabel: toRef(props, 'thumbLabel'),\n    ticks: toRef(props, 'ticks'),\n    tickSize,\n    trackColor,\n    trackContainerRef,\n    trackFillColor,\n    trackSize,\n    vertical,\n  }\n\n  provide(VSliderSymbol, data)\n\n  return data\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}