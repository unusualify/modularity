{"ast":null,"code":"import _objectSpread from \"/var/www/crm_template/packages/oobook/crm-base/vue/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport { withDirectives as _withDirectives, vShow as _vShow, createVNode as _createVNode } from \"vue\";\n// Components\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\";\nimport { VExpandTransition } from \"../transitions/index.mjs\"; // Composables\nimport { useList } from \"./list.mjs\";\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { useNestedGroupActivator, useNestedItem } from \"../../composables/nested/nested.mjs\"; // Utilities\nimport { computed, toRef } from 'vue';\nimport { defineComponent, genericComponent, pick, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nvar VListGroupActivator = defineComponent({\n  name: 'VListGroupActivator',\n  setup: function setup(_, _ref) {\n    var slots = _ref.slots;\n    useNestedGroupActivator();\n    return function () {\n      var _slots$default;\n      return (_slots$default = slots[\"default\"]) === null || _slots$default === void 0 ? void 0 : _slots$default.call(slots);\n    };\n  }\n});\nexport var makeVListGroupProps = propsFactory(_objectSpread({\n  activeColor: String,\n  color: String,\n  collapseIcon: {\n    type: IconValue,\n    \"default\": '$collapse'\n  },\n  expandIcon: {\n    type: IconValue,\n    \"default\": '$expand'\n  },\n  prependIcon: IconValue,\n  appendIcon: IconValue,\n  fluid: Boolean,\n  subgroup: Boolean,\n  value: null\n}, makeTagProps()), 'v-list-group');\nexport var VListGroup = genericComponent()({\n  name: 'VListGroup',\n  props: _objectSpread({\n    title: String\n  }, makeVListGroupProps()),\n  setup: function setup(props, _ref2) {\n    var slots = _ref2.slots;\n    var _useNestedItem = useNestedItem(toRef(props, 'value'), true),\n      isOpen = _useNestedItem.isOpen,\n      open = _useNestedItem.open,\n      _id = _useNestedItem.id;\n    var id = computed(function () {\n      return \"v-list-group--id-\".concat(String(_id.value));\n    });\n    var list = useList();\n    function onClick(e) {\n      open(!isOpen.value, e);\n    }\n    var activatorProps = computed(function () {\n      return {\n        onClick: onClick,\n        \"class\": 'v-list-group__header',\n        id: id.value\n      };\n    });\n    var toggleIcon = computed(function () {\n      return isOpen.value ? props.collapseIcon : props.expandIcon;\n    });\n    useRender(function () {\n      return _createVNode(props.tag, {\n        \"class\": ['v-list-group', {\n          'v-list-group--prepend': list === null || list === void 0 ? void 0 : list.hasPrepend.value,\n          'v-list-group--fluid': props.fluid,\n          'v-list-group--subgroup': props.subgroup,\n          'v-list-group--open': isOpen.value\n        }]\n      }, {\n        \"default\": function _default() {\n          return [slots.activator && _createVNode(VDefaultsProvider, {\n            \"defaults\": {\n              VListItem: {\n                active: isOpen.value,\n                activeColor: props.activeColor,\n                color: props.color,\n                prependIcon: props.prependIcon || props.subgroup && toggleIcon.value,\n                appendIcon: props.appendIcon || !props.subgroup && toggleIcon.value,\n                title: props.title,\n                value: props.value\n              }\n            }\n          }, {\n            \"default\": function _default() {\n              return [_createVNode(VListGroupActivator, null, {\n                \"default\": function _default() {\n                  return [slots.activator({\n                    props: activatorProps.value,\n                    isOpen: isOpen.value\n                  })];\n                }\n              })];\n            }\n          }), _createVNode(VExpandTransition, null, {\n            \"default\": function _default() {\n              var _slots$default2;\n              return [_withDirectives(_createVNode(\"div\", {\n                \"class\": \"v-list-group__items\",\n                \"role\": \"group\",\n                \"aria-labelledby\": id.value\n              }, [(_slots$default2 = slots[\"default\"]) === null || _slots$default2 === void 0 ? void 0 : _slots$default2.call(slots)]), [[_vShow, isOpen.value]])];\n            }\n          })];\n        }\n      });\n    });\n    return {};\n  }\n});\nexport function filterListGroupProps(props) {\n  return pick(props, Object.keys(VListGroup.props));\n}","map":{"version":3,"names":["VDefaultsProvider","VExpandTransition","useList","IconValue","makeTagProps","useNestedGroupActivator","useNestedItem","computed","toRef","defineComponent","genericComponent","pick","propsFactory","useRender","VListGroupActivator","name","setup","_","_ref","slots","_slots$default","call","makeVListGroupProps","_objectSpread","activeColor","String","color","collapseIcon","type","expandIcon","prependIcon","appendIcon","fluid","Boolean","subgroup","value","VListGroup","props","title","_ref2","_useNestedItem","isOpen","open","_id","id","concat","list","onClick","e","activatorProps","toggleIcon","_createVNode","tag","hasPrepend","_default","activator","VListItem","active","_slots$default2","_withDirectives","_vShow","filterListGroupProps","Object","keys"],"sources":["../../../src/components/VList/VListGroup.tsx"],"sourcesContent":["// Components\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VExpandTransition } from '@/components/transitions'\n\n// Composables\nimport { useList } from './list'\nimport { IconValue } from '@/composables/icons'\nimport { makeTagProps } from '@/composables/tag'\nimport { useNestedGroupActivator, useNestedItem } from '@/composables/nested/nested'\n\n// Utilities\nimport { computed, toRef } from 'vue'\nimport { defineComponent, genericComponent, pick, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { ExtractPropTypes } from 'vue'\n\nexport type VListGroupSlots = {\n  default: []\n  activator: [{ isOpen: boolean, props: Record<string, unknown> }]\n}\n\nconst VListGroupActivator = defineComponent({\n  name: 'VListGroupActivator',\n\n  setup (_, { slots }) {\n    useNestedGroupActivator()\n\n    return () => slots.default?.()\n  },\n})\n\nexport const makeVListGroupProps = propsFactory({\n  activeColor: String,\n  color: String,\n  collapseIcon: {\n    type: IconValue,\n    default: '$collapse',\n  },\n  expandIcon: {\n    type: IconValue,\n    default: '$expand',\n  },\n  prependIcon: IconValue,\n  appendIcon: IconValue,\n  fluid: Boolean,\n  subgroup: Boolean,\n  value: null,\n\n  ...makeTagProps(),\n}, 'v-list-group')\n\nexport const VListGroup = genericComponent<VListGroupSlots>()({\n  name: 'VListGroup',\n\n  props: {\n    title: String,\n\n    ...makeVListGroupProps(),\n  },\n\n  setup (props, { slots }) {\n    const { isOpen, open, id: _id } = useNestedItem(toRef(props, 'value'), true)\n    const id = computed(() => `v-list-group--id-${String(_id.value)}`)\n    const list = useList()\n\n    function onClick (e: Event) {\n      open(!isOpen.value, e)\n    }\n\n    const activatorProps = computed(() => ({\n      onClick,\n      class: 'v-list-group__header',\n      id: id.value,\n    }))\n\n    const toggleIcon = computed(() => isOpen.value ? props.collapseIcon : props.expandIcon)\n\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-list-group',\n          {\n            'v-list-group--prepend': list?.hasPrepend.value,\n            'v-list-group--fluid': props.fluid,\n            'v-list-group--subgroup': props.subgroup,\n            'v-list-group--open': isOpen.value,\n          },\n        ]}\n      >\n        { slots.activator && (\n          <VDefaultsProvider\n            defaults={{\n              VListItem: {\n                active: isOpen.value,\n                activeColor: props.activeColor,\n                color: props.color,\n                prependIcon: props.prependIcon || (props.subgroup && toggleIcon.value),\n                appendIcon: props.appendIcon || (!props.subgroup && toggleIcon.value),\n                title: props.title,\n                value: props.value,\n              },\n            }}\n          >\n            <VListGroupActivator>\n              { slots.activator({ props: activatorProps.value, isOpen: isOpen.value }) }\n            </VListGroupActivator>\n          </VDefaultsProvider>\n        ) }\n\n        <VExpandTransition>\n          <div class=\"v-list-group__items\" role=\"group\" aria-labelledby={ id.value } v-show={ isOpen.value }>\n            { slots.default?.() }\n          </div>\n        </VExpandTransition>\n      </props.tag>\n    ))\n\n    return {}\n  },\n})\n\nexport type VListGroup = InstanceType<typeof VListGroup>\n\nexport function filterListGroupProps (props: ExtractPropTypes<ReturnType<typeof makeVListGroupProps>>) {\n  return pick(props, Object.keys(VListGroup.props) as any)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}