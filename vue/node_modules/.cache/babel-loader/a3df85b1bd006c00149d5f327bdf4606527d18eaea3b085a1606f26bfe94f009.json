{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport { mapState, mapGetters } from 'vuex';\nimport htmlClasses from '@/utils/htmlClasses';\nexport default {\n  props: {\n    value: {\n      type: Boolean,\n      \"default\": false\n    },\n    cancelText: {\n      type: String,\n      \"default\": ''\n    },\n    confirmText: {\n      type: String,\n      \"default\": ''\n    }\n  },\n  data: function data() {\n    return {\n      id: Math.ceil(Math.random() * 1000000) + \"-modal\",\n      show: this.value\n    };\n  },\n  computed: {\n    // show: {\n    //     get () {\n    //         return this.value\n    //     },\n    //     set (value) {\n    //         // __log('mixins/modal->show->setter', value)\n    //         this.$emit('input', value)\n    //         // __log(this.show)\n    //     }\n    // },\n    textCancel: function textCancel() {\n      return this.cancelText != '' ? this.cancelText : this.$t('cancel');\n    },\n    textConfirm: function textConfirm() {\n      return this.confirmText != '' ? this.confirmText : this.$t('confirm');\n    }\n  },\n  methods: {\n    setValue: function setValue(e) {\n      __log('setValue', e.target.name);\n      this[e.target.name] = e.target.value;\n    },\n    openModal: function openModal() {\n      this.show = true;\n    },\n    closeModal: function closeModal() {\n      this.show = false;\n    },\n    cancelModal: function cancelModal() {\n      if (typeof this.cancelCallback == \"undefined\") {\n        this.closeModal();\n      } else {\n        this.cancelCallback();\n      }\n      this.$emit('cancel');\n    },\n    confirmModal: function confirmModal() {\n      if (typeof this.confirmCallback == \"undefined\") {\n        this.closeModal();\n      } else {\n        this.confirmCallback();\n      }\n      this.$emit('confirm');\n    }\n  }\n};","map":{"version":3,"names":["mapState","mapGetters","htmlClasses","props","value","type","Boolean","cancelText","String","confirmText","data","id","Math","ceil","random","show","computed","textCancel","$t","textConfirm","methods","setValue","e","__log","target","name","openModal","closeModal","cancelModal","cancelCallback","$emit","confirmModal","confirmCallback"],"sources":["/var/www/crm_template/packages/oobook/crm-base/vue/src/js/mixins/modal.js"],"sourcesContent":["import { mapState, mapGetters } from 'vuex'\nimport htmlClasses from '@/utils/htmlClasses'\n\nexport default {\n    props: {\n        value: {\n            type: Boolean,\n            default: false\n        },\n        cancelText: {\n            type: String,\n            default: ''\n        },\n        confirmText: {\n            type: String,\n            default: ''\n        },\n    },\n    data() {\n        return {\n            id: Math.ceil(Math.random()*1000000) + \"-modal\",\n            show: this.value\n        }\n    },\n\n    computed: {\n        // show: {\n        //     get () {\n        //         return this.value\n        //     },\n        //     set (value) {\n        //         // __log('mixins/modal->show->setter', value)\n        //         this.$emit('input', value)\n        //         // __log(this.show)\n        //     }\n        // },\n        textCancel() {\n            return this.cancelText != '' ? this.cancelText : this.$t('cancel') \n        },\n        textConfirm() {\n            return this.confirmText != '' ? this.confirmText : this.$t('confirm') \n        },\n    },\n    methods: {\n        setValue(e) {\n            __log('setValue', e.target.name)\n            this[e.target.name] = e.target.value;\n        },\n        openModal(){\n            this.show = true;\n        },\n        closeModal(){\n            this.show = false;\n        },\n\n        cancelModal(){\n            if(typeof this.cancelCallback == \"undefined\"){\n                this.closeModal();\n            }else{\n                this.cancelCallback();\n            }\n            this.$emit('cancel')\n        },\n\n        confirmModal(){\n            if(typeof this.confirmCallback == \"undefined\"){\n                this.closeModal();\n            }else{\n                this.confirmCallback();\n            }\n            this.$emit('confirm')\n        },\n    }\n}\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,UAAU,QAAQ,MAAM;AAC3C,OAAOC,WAAW,MAAM,qBAAqB;AAE7C,eAAe;EACXC,KAAK,EAAE;IACHC,KAAK,EAAE;MACHC,IAAI,EAAEC,OAAO;MACb,WAAS;IACb,CAAC;IACDC,UAAU,EAAE;MACRF,IAAI,EAAEG,MAAM;MACZ,WAAS;IACb,CAAC;IACDC,WAAW,EAAE;MACTJ,IAAI,EAAEG,MAAM;MACZ,WAAS;IACb;EACJ,CAAC;EACDE,IAAI,WAAAA,KAAA,EAAG;IACH,OAAO;MACHC,EAAE,EAAEC,IAAI,CAACC,IAAI,CAACD,IAAI,CAACE,MAAM,EAAE,GAAC,OAAO,CAAC,GAAG,QAAQ;MAC/CC,IAAI,EAAE,IAAI,CAACX;IACf,CAAC;EACL,CAAC;EAEDY,QAAQ,EAAE;IACN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAC,UAAU,WAAAA,WAAA,EAAG;MACT,OAAO,IAAI,CAACV,UAAU,IAAI,EAAE,GAAG,IAAI,CAACA,UAAU,GAAG,IAAI,CAACW,EAAE,CAAC,QAAQ,CAAC;IACtE,CAAC;IACDC,WAAW,WAAAA,YAAA,EAAG;MACV,OAAO,IAAI,CAACV,WAAW,IAAI,EAAE,GAAG,IAAI,CAACA,WAAW,GAAG,IAAI,CAACS,EAAE,CAAC,SAAS,CAAC;IACzE;EACJ,CAAC;EACDE,OAAO,EAAE;IACLC,QAAQ,WAAAA,SAACC,CAAC,EAAE;MACRC,KAAK,CAAC,UAAU,EAAED,CAAC,CAACE,MAAM,CAACC,IAAI,CAAC;MAChC,IAAI,CAACH,CAAC,CAACE,MAAM,CAACC,IAAI,CAAC,GAAGH,CAAC,CAACE,MAAM,CAACpB,KAAK;IACxC,CAAC;IACDsB,SAAS,WAAAA,UAAA,EAAE;MACP,IAAI,CAACX,IAAI,GAAG,IAAI;IACpB,CAAC;IACDY,UAAU,WAAAA,WAAA,EAAE;MACR,IAAI,CAACZ,IAAI,GAAG,KAAK;IACrB,CAAC;IAEDa,WAAW,WAAAA,YAAA,EAAE;MACT,IAAG,OAAO,IAAI,CAACC,cAAc,IAAI,WAAW,EAAC;QACzC,IAAI,CAACF,UAAU,EAAE;MACrB,CAAC,MAAI;QACD,IAAI,CAACE,cAAc,EAAE;MACzB;MACA,IAAI,CAACC,KAAK,CAAC,QAAQ,CAAC;IACxB,CAAC;IAEDC,YAAY,WAAAA,aAAA,EAAE;MACV,IAAG,OAAO,IAAI,CAACC,eAAe,IAAI,WAAW,EAAC;QAC1C,IAAI,CAACL,UAAU,EAAE;MACrB,CAAC,MAAI;QACD,IAAI,CAACK,eAAe,EAAE;MAC1B;MACA,IAAI,CAACF,KAAK,CAAC,SAAS,CAAC;IACzB;EACJ;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}