{"ast":null,"code":"import { renderSlot as _renderSlot, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createCommentVNode as _createCommentVNode, toHandlers as _toHandlers, mergeProps as _mergeProps, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_spacer = _resolveComponent(\"v-spacer\");\n  const _component_v_icon = _resolveComponent(\"v-icon\");\n  const _component_v_system_bar = _resolveComponent(\"v-system-bar\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_dialog = _resolveComponent(\"v-dialog\");\n  return _openBlock(), _createBlock(_component_v_dialog, _mergeProps({\n    modelValue: $options.dialog,\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $options.dialog = $event)\n  }, _toHandlers({\n    toggleFullScreen: $options.toggleFullScreen\n  }), _ctx.bindProps(), {\n    fullscreen: $data.full,\n    width: $options.modalWidth\n  }), {\n    activator: _withCtx(({\n      on,\n      attrs\n    }) => [_renderSlot(_ctx.$slots, \"activator\", {\n      attrs: {\n        ...attrs\n      },\n      on: {\n        ...on\n      }\n    })]),\n    default: _withCtx(() => [_createVNode(_component_v_card, null, {\n      default: _withCtx(() => [$props.systembar ? _renderSlot(_ctx.$slots, \"systembar\", {\n        key: 0\n      }, () => [_createVNode(_component_v_system_bar, {\n        window: \"\",\n        dark: \"\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_spacer), _createVNode(_component_v_icon, {\n          onClick: _cache[0] || (_cache[0] = $event => $options.toggleFullScreen()),\n          \"x-small\": $data.full\n        }, {\n          default: _withCtx(() => [_createTextVNode(\" mdi-checkbox-blank-outline \")]),\n          _: 1\n        }, 8, [\"x-small\"]), _createVNode(_component_v_icon, {\n          onClick: _cache[1] || (_cache[1] = $event => $options.close())\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"mdi-close\")]),\n          _: 1\n        })]),\n        _: 1\n      })]) : _createCommentVNode(\"\", true), _renderSlot(_ctx.$slots, \"body\", {\n        attrs: {},\n        on: {\n          openDialog: this.open,\n          closeDialog: this.close,\n          confirmDialog: this.confirm\n        },\n        closeDialog: $options.close\n      })]),\n      _: 3\n    })]),\n    _: 3\n  }, 16, [\"modelValue\", \"fullscreen\", \"width\"]);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}