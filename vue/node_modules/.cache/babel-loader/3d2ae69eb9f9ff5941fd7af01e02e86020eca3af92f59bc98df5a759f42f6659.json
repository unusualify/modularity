{"ast":null,"code":"import { toDisplayString as _toDisplayString } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return \"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelSelect as _vModelSelect, createElementVNode as _createElementVNode, withDirectives as _withDirectives, vShow as _vShow, normalizeStyle as _normalizeStyle, toHandlers as _toHandlers, mergeProps as _mergeProps, createBlock as _createBlock, renderSlot as _renderSlot, withKeys as _withKeys, createSlots as _createSlots } from \\\"vue\\\" const _hoisted_1 = [\\\"value\\\"] const _hoisted_2 = { key: 1 } export function render(_ctx, _cache, $props, $setup, $data, $options) { const _component_v_toolbar_title = _resolveComponent(\\\"v-toolbar-title\\\") const _component_v_divider = _resolveComponent(\\\"v-divider\\\") const _component_v_text_field = _resolveComponent(\\\"v-text-field\\\") const _component_v_spacer = _resolveComponent(\\\"v-spacer\\\") const _component_v_icon = _resolveComponent(\\\"v-icon\\\") const _component_v_btn = _resolveComponent(\\\"v-btn\\\") const _component_v_list_item_title = _resolveComponent(\\\"v-list-item-title\\\") const _component_v_list_item = _resolveComponent(\\\"v-list-item\\\") const _component_v_list = _resolveComponent(\\\"v-list\\\") const _component_v_menu = _resolveComponent(\\\"v-menu\\\") const _component_ue_btn = _resolveComponent(\\\"ue-btn\\\") const _component_ue_modal_form = _resolveComponent(\\\"ue-modal-form\\\") const _component_ue_modal_dialog = _resolveComponent(\\\"ue-modal-dialog\\\") const _component_v_toolbar = _resolveComponent(\\\"v-toolbar\\\") const _component_v_edit_dialog = _resolveComponent(\\\"v-edit-dialog\\\") const _component_v_data_table = _resolveComponent(\\\"v-data-table\\\") return (_openBlock(), _createBlock(_component_v_data_table, { headers: _ctx.headers, items: _ctx.elements, class: \\\"elevation-1\\\", loading: _ctx.loading, options: _ctx.options, \\\"server-items-length\\\": _ctx.totalElements, search: _ctx.search, \\\"hide-default-header\\\": _ctx.hideDefaultHeader, \\\"hide-default-footer\\\": _ctx.hideDefaultFooter, \\\"footer-props\\\": { showFirstLastPage: true, firstIcon: 'mdi-arrow-collapse-left', lastIcon: 'mdi-arrow-collapse-right', nextIcon: 'mdi-chevron-right', prevIcon: 'mdi-chevron-left' }, \\\"disable-pagination\\\": false, \\\"disable-sort\\\": false }, _createSlots({ top: _withCtx(() => [ _createVNode(_component_v_toolbar, { flat: \\\"\\\" }, { default: _withCtx(() => [ _createCommentVNode(\\\" #title.left-top \\\"), _createVNode(_component_v_toolbar_title, null, { default: _withCtx(() => [ _createTextVNode(_toDisplayString(_ctx.$tc('list-of-item', [_ctx.name, _ctx.$tc('modules.' + _ctx.name.toLowerCase() )] )) + \\\" \\\", 1 /* TEXT */), _createCommentVNode(\\\" \" + _toDisplayString(_ctx.$t('errors.missingMessage')) + \" \\\") ]), _: 1 /* STABLE */ }), _createVNode(_component_v_divider, { class: \\\"mx-4\\\", inset: \\\"\\\", vertical: \\\"\\\" }), _createCommentVNode(\\\" #search input \\\"), _createVNode(_component_v_text_field, { modelValue: _ctx.search, \\\"onUpdate:modelValue\\\": _cache[0] || (_cache[0] = $event => ((_ctx.search) = $event)), \\\"append-icon\\\": \\\"mdi-magnify\\\", label: \\\"Search\\\", \\\"single-line\\\": \\\"\\\", \\\"hide-details\\\": \\\"\\\" }, null, 8 /* PROPS */, [\\\"modelValue\\\"]), _createVNode(_component_v_divider, { class: \\\"mx-4\\\", inset: \\\"\\\", vertical: \\\"\\\" }), _createCommentVNode(\\\" #language selector \\\"), _withDirectives(_createVNode(_component_v_toolbar_title, null, { default: _withCtx(() => [ _createCommentVNode(\\\" \" + _toDisplayString(_ctx.$tc('list')) + \"\\\\n \" + _toDisplayString(_ctx.$n(100.77, 'currency')) + \" \\\"), _createTextVNode(\\\" \\\" + _toDisplayString(_ctx.$t('language-select')) + \\\" \\\", 1 /* TEXT */), _withDirectives(_createElementVNode(\\\"select\\\", { \\\"onUpdate:modelValue\\\": _cache[1] || (_cache[1] = $event => ((_ctx.$i18n.locale) = $event)) }, [ (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.langs, (lang, i) => { return (_openBlock(), _createElementBlock(\\\"option\\\", { key: `Lang${i}`, value: lang }, _toDisplayString(lang), 9 /* TEXT, PROPS */, _hoisted_1)) }), 128 /* KEYED_FRAGMENT */)) ], 512 /* NEED_PATCH */), [ [_vModelSelect, _ctx.$i18n.locale] ]) ]), _: 1 /* STABLE */ }, 512 /* NEED_PATCH */), [ [_vShow, false] ]), _createCommentVNode(\\\" Custom Filters \\\"), _createVNode(_component_v_menu, { \\\"offset-y\\\": \\\"\\\", rounded: \\\"xs\\\", \\\"open-on-hover\\\": \\\"\\\" }, { activator: _withCtx(({ on, attrs, value }) => [ _createVNode(_component_v_btn, _mergeProps(attrs, _toHandlers(on), { class: \\\"rounded-xs\\\", color: \\\"primary\\\", dark: \\\"\\\", ripple: false }), { default: _withCtx(() => [ _createTextVNode(_toDisplayString(_ctx.mainFilters.at(0).name) + \\\" \\\", 1 /* TEXT */), _createVNode(_component_v_spacer), _createVNode(_component_v_icon, { right: \\\"\\\", style: _normalizeStyle({ transform: value ? 'rotate(-180deg)' : 'rotate(0)' }) }, { default: _withCtx(() => [ _createTextVNode(\\\"mdi-chevron-down\\\") ]), _: 2 /* DYNAMIC */ }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\\\"style\\\"]) ]), _: 2 /* DYNAMIC */ }, 1040 /* FULL_PROPS, DYNAMIC_SLOTS */) ]), default: _withCtx(() => [ _createVNode(_component_v_list, null, { default: _withCtx(() => [ (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.mainFilters, (item, index) => { return (_openBlock(), _createBlock(_component_v_list_item, { key: index }, { default: _withCtx(() => [ _createVNode(_component_v_list_item_title, null, { default: _withCtx(() => [ _createTextVNode(_toDisplayString(item.name), 1 /* TEXT */) ]), _: 2 /* DYNAMIC */ }, 1024 /* DYNAMIC_SLOTS */) ]), _: 2 /* DYNAMIC */ }, 1024 /* DYNAMIC_SLOTS */)) }), 128 /* KEYED_FRAGMENT */)) ]), _: 1 /* STABLE */ }) ]), _: 1 /* STABLE */ }), _createVNode(_component_v_divider, { class: \\\"mx-4\\\", inset: \\\"\\\", vertical: \\\"\\\" }), _createVNode(_component_v_spacer), _createCommentVNode(\\\" #form dialog \\\"), (_ctx.createOnModal || _ctx.editOnModal) ? _renderSlot(_ctx.$slots, \\\"FormDialog\\\", { key: 0 }, () => [ _createVNode(_component_ue_modal_form, { ref: \\\"formModal\\\", modelValue: _ctx.formModalActive, \\\"onUpdate:modelValue\\\": _cache[2] || (_cache[2] = $event => ((_ctx.formModalActive) = $event)), \\\"route-name\\\": _ctx.name }, { activator: _withCtx(({on,attrs}) => [ (_ctx.createOnModal) ? (_openBlock(), _createBlock(_component_ue_btn, _mergeProps({ key: 0 }, attrs, _toHandlers(on), { color: \\\"success\\\", dark: \\\"\\\" }), { default: _withCtx(() => [ _createTextVNode(_toDisplayString(_ctx.$t('new-item', {'item': _ctx.name} )), 1 /* TEXT */) ]), _: 2 /* DYNAMIC */ }, 1040 /* FULL_PROPS, DYNAMIC_SLOTS */)) : _createCommentVNode(\\\"v-if\\\", true) ]), _: 1 /* STABLE */ }, 8 /* PROPS */, [\\\"modelValue\\\", \\\"route-name\\\"]) ]) : _createCommentVNode(\\\"v-if\\\", true), (!_ctx.createOnModal) ? (_openBlock(), _createBlock(_component_ue_btn, { key: 1, href: _ctx.createUrl, target: \\\"_blank\\\", color: \\\"success\\\", dark: \\\"\\\" }, { default: _withCtx(() => [ _createTextVNode(_toDisplayString(_ctx.$t('new-item', {'item': _ctx.name} )), 1 /* TEXT */) ]), _: 1 /* STABLE */ }, 8 /* PROPS */, [\\\"href\\\"])) : _createCommentVNode(\\\"v-if\\\", true), _createCommentVNode(\\\" general #dialog \\\"), _createVNode(_component_ue_modal_dialog, { modelValue: _ctx.dialogActive, \\\"onUpdate:modelValue\\\": _cache[3] || (_cache[3] = $event => ((_ctx.dialogActive) = $event)), ref: \\\"dialog\\\", description: $options.dialogDescription, onCancel: _ctx.resetEditedItem, onConfirm: $options.deleteRow }, null, 8 /* PROPS */, [\\\"modelValue\\\", \\\"description\\\", \\\"onCancel\\\", \\\"onConfirm\\\"]) ]), _: 3 /* FORWARDED */ }) ]), \\\"item.actions\\\": _withCtx(({ item }) => [ _createCommentVNode(\\\" @click's editItem|deleteItem \\\"), _createCommentVNode(\\\" #actions \\\"), (_ctx.rowActionsType == 'dropdown' || _ctx.$vuetify.display.smOnly) ? (_openBlock(), _createBlock(_component_v_menu, { key: 0, \\\"close-on-content-click\\\": false, \\\"open-on-hover\\\": \\\"\\\", left: \\\"\\\", \\\"offset-x\\\": \\\"\\\" }, { activator: _withCtx(({ on, attrs }) => [ _createVNode(_component_v_btn, _mergeProps({ icon: \\\"\\\" }, attrs, _toHandlers(on)), { default: _withCtx(() => [ _createVNode(_component_v_icon, { color: \\\"green darken-2\\\" }, { default: _withCtx(() => [ _createTextVNode(\\\" $list \\\") ]), _: 1 /* STABLE */ }) ]), _: 2 /* DYNAMIC */ }, 1040 /* FULL_PROPS, DYNAMIC_SLOTS */) ]), default: _withCtx(() => [ _createVNode(_component_v_list, null, { default: _withCtx(() => [ (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.rowActions, (action, k) => { return (_openBlock(), _createBlock(_component_v_list_item, { key: k, onClick: $event => (_ctx.handleFunctionCall(action.name + 'Item', item)) }, { default: _withCtx(() => [ _createVNode(_component_v_icon, { small: \\\"\\\", color: action.color, left: \\\"\\\" }, { default: _withCtx(() => [ _createTextVNode(_toDisplayString(action.icon ? action.icon : '$' + action.name), 1 /* TEXT */) ]), _: 2 /* DYNAMIC */ }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\\\"color\\\"]), _createTextVNode(\\\" \\\" + _toDisplayString(_ctx.$tc(action.name)), 1 /* TEXT */) ]), _: 2 /* DYNAMIC */ }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\\\"onClick\\\"])) }), 128 /* KEYED_FRAGMENT */)) ]), _: 2 /* DYNAMIC */ }, 1024 /* DYNAMIC_SLOTS */) ]), _: 2 /* DYNAMIC */ }, 1024 /* DYNAMIC_SLOTS */)) : (_openBlock(), _createElementBlock(\\\"div\\\", _hoisted_2, [ (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.rowActions, (action, k) => { return (_openBlock(), _createBlock(_component_v_icon, { key: k, small: \\\"\\\", class: \\\"mr-2\\\", onClick: $event => (_ctx.handleFunctionCall(action.name + 'Item', item)), color: action.color }, { default: _withCtx(() => [ _createTextVNode(_toDisplayString(action.icon ? action.icon : '$' + action.name), 1 /* TEXT */) ]), _: 2 /* DYNAMIC */ }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\\\"onClick\\\", \\\"color\\\"])) }), 128 /* KEYED_FRAGMENT */)) ])) ]), \\\"no-data\\\": _withCtx(() => [ _createVNode(_component_v_btn, { color: \\\"primary\\\", onClick: _ctx.initialize }, { default: _withCtx(() => [ _createTextVNode(\\\" Reset \\\") ]), _: 1 /* STABLE */ }, 8 /* PROPS */, [\\\"onClick\\\"]) ]), _: 2 /* DYNAMIC */ }, [ _renderList(_ctx.formatterColumns, (col, i) => { return { name: `item.${col.value}`, fn: _withCtx(({ header, value }) => [ _createTextVNode(_toDisplayString(_ctx.handleFunctionCall(header.formatter, value )) + \\\" \\\", 1 /* TEXT */), _createCommentVNode(\\\" \" + _toDisplayString([_ctx.header.formatter](_ctx.value)) + \" \\\") ]) } }), _renderList(_ctx.editableColumns, (header, k) => { return { name: `item.${header.value}`, fn: _withCtx((props) => [ (_openBlock(), _createBlock(_component_v_edit_dialog, { key: k, \\\"return-value\\\": props.item[header.value], \\\"save-text\\\": _ctx.$t('save'), onOpen: $event => (_ctx.setEditedItem(props.item)), onCancel: _cache[4] || (_cache[4] = $event => (_ctx.resetEditedItem())), onClose: _cache[5] || (_cache[5] = $event => (_ctx.resetEditedItem())), onSave: $event => ($options.updateCell(header.value)), persistent: \\\"\\\", large: \\\"\\\" }, { input: _withCtx(() => [ _createVNode(_component_v_text_field, { value: props.item[header.value], onInput: $options.columnChanged, onKeyup: _withKeys($event => ($options.updateCell(header.value)), [\\\"enter\\\"]), label: \\\"Edit\\\", \\\"single-line\\\": \\\"\\\", counter: \\\"\\\" }, null, 8 /* PROPS */, [\\\"value\\\", \\\"onInput\\\", \\\"onKeyup\\\"]) ]), default: _withCtx(() => [ _createTextVNode(_toDisplayString(props.item[header.value]) + \\\" \\\", 1 /* TEXT */) ]), _: 2 /* DYNAMIC */ }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\\\"return-value\\\", \\\"save-text\\\", \\\"onOpen\\\", \\\"onSave\\\"])) ]) } }) ]), 1032 /* PROPS, DYNAMIC_SLOTS */, [\\\"headers\\\", \\\"items\\\", \\\"loading\\\", \\\"options\\\", \\\"server-items-length\\\", \\\"search\\\", \\\"hide-default-header\\\", \\\"hide-default-footer\\\"])) }\";\n}","map":{"version":3,"names":["_toDisplayString","_ctx","$t","$tc","$n","header","formatter","value"],"sources":["/var/www/crm_template/packages/oobook/crm-base/vue/src/js/components/others/Datatable.vue"],"sourcesContent":["<template>\n  <v-data-table\n    :headers=\"headers\"\n    :items=\"elements\"\n\n    class=\"elevation-1\"\n    :loading=\"loading\"\n    :options.sync=\"options\"\n    :server-items-length=\"totalElements\"\n    :search=\"search\"\n    :hide-default-header=\"hideDefaultHeader\"\n    :hide-default-footer=\"hideDefaultFooter\"\n    :footer-props=\"{\n      showFirstLastPage: true,\n      firstIcon: 'mdi-arrow-collapse-left',\n      lastIcon: 'mdi-arrow-collapse-right',\n      nextIcon: 'mdi-chevron-right',\n      prevIcon: 'mdi-chevron-left'\n    }\"\n\n    :disable-pagination=\"false\"\n    :disable-sort=\"false\"\n  >\n    <template v-slot:top>\n      <v-toolbar\n        flat\n      >\n        <!-- #title.left-top -->\n        <v-toolbar-title>\n          {{ $tc('list-of-item', [name, $tc('modules.' + name.toLowerCase() )] ) }}\n          <!-- {{ $t('errors.missingMessage') }} -->\n        </v-toolbar-title>\n\n        <v-divider class=\"mx-4\" inset vertical></v-divider>\n\n        <!-- #search input -->\n        <v-text-field\n          v-model=\"search\"\n          append-icon=\"mdi-magnify\"\n          label=\"Search\"\n          single-line\n          hide-details\n        >\n        </v-text-field>\n\n        <v-divider class=\"mx-4\" inset vertical></v-divider>\n\n        <!-- #language selector -->\n        <v-toolbar-title v-show=\"false\">\n          <!-- {{ $tc('list') }}\n          {{ $n(100.77, 'currency') }} -->\n          {{ $t('language-select') }}\n          <select v-model=\"$i18n.locale\">\n            <option v-for=\"(lang, i) in langs\" :key=\"`Lang${i}`\" :value=\"lang\">\n              {{ lang }}\n            </option>\n          </select>\n        </v-toolbar-title>\n\n        <!-- Custom Filters -->\n        <v-menu offset-y rounded=\"xs\" open-on-hover>\n          <template v-slot:activator=\"{ on, attrs, value }\">\n            <v-btn\n              v-bind=\"attrs\"\n              v-on=\"on\"\n              class=\"rounded-xs\"\n              color=\"primary\"\n              dark\n              :ripple=\"false\"\n            >\n              {{ mainFilters.at(0).name }}\n              <v-spacer></v-spacer>\n              <v-icon right :style=\"{ transform: value ? 'rotate(-180deg)' : 'rotate(0)' }\">mdi-chevron-down</v-icon>\n            </v-btn>\n          </template>\n          <v-list>\n            <v-list-item\n              v-for=\"(item, index) in mainFilters\"\n              :key=\"index\"\n            >\n              <v-list-item-title>{{ item.name}}</v-list-item-title>\n            </v-list-item>\n          </v-list>\n        </v-menu>\n\n        <v-divider class=\"mx-4\" inset vertical></v-divider>\n\n        <v-spacer></v-spacer>\n\n        <!-- #form dialog -->\n        <slot\n          v-if=\"createOnModal || editOnModal\"\n          name=\"FormDialog\"\n          >\n          <ue-modal-form\n              ref=\"formModal\"\n              v-model=\"formModalActive\"\n              :route-name=\"name\"\n              >\n              <template v-slot:activator=\"{on,attrs}\">\n                <ue-btn\n                    v-if=\"createOnModal\"\n                    v-bind=\"attrs\"\n                    v-on=\"on\"\n                    color=\"success\"\n                    dark\n                    >\n                    {{ $t('new-item', {'item': name} ) }}\n                </ue-btn>\n              </template>\n          </ue-modal-form>\n        </slot>\n\n        <ue-btn\n          v-if=\"!createOnModal\"\n          :href=\"createUrl\"\n          target=\"_blank\"\n          color=\"success\"\n          dark\n          >\n          {{ $t('new-item', {'item': name} ) }}\n        </ue-btn>\n\n        <!-- general #dialog -->\n        <ue-modal-dialog\n          v-model=\"dialogActive\"\n          ref=\"dialog\"\n          :description=\"dialogDescription\"\n          @cancel=\"resetEditedItem\"\n          @confirm=\"deleteRow\"\n        >\n        </ue-modal-dialog>\n\n      </v-toolbar>\n    </template>\n\n    <template v-slot:item.actions=\"{ item }\">\n\n      <!-- @click's editItem|deleteItem -->\n      <!-- #actions -->\n      <v-menu v-if=\"rowActionsType == 'dropdown' || $vuetify.display.smOnly\"\n        :close-on-content-click=\"false\"\n        open-on-hover\n        left\n        offset-x\n        >\n        <template v-slot:activator=\"{ on, attrs }\">\n          <v-btn icon v-bind=\"attrs\" v-on=\"on\">\n            <v-icon color=\"green darken-2\">\n              $list\n            </v-icon>\n          </v-btn>\n        </template>\n        <v-list>\n\n          <v-list-item\n            v-for=\"(action, k) in rowActions\"\n            :key=\"k\"\n            @click=\"handleFunctionCall(action.name + 'Item', item)\"\n            >\n              <v-icon small :color=\"action.color\" left>\n                {{ action.icon ? action.icon : '$' + action.name }}\n              </v-icon>\n              {{ $tc(action.name) }}\n          </v-list-item>\n\n        </v-list>\n      </v-menu>\n\n      <div v-else=\"\">\n        <v-icon\n          v-for=\"(action, k) in rowActions\"\n          :key=\"k\"\n          small\n          class=\"mr-2\"\n          @click=\"handleFunctionCall(action.name + 'Item', item)\"\n          :color=\"action.color\"\n          >\n          {{ action.icon ? action.icon : '$' + action.name }}\n        </v-icon>\n      </div>\n    </template>\n\n    <template v-slot:no-data>\n      <v-btn\n        color=\"primary\"\n        @click=\"initialize\"\n      >\n        Reset\n      </v-btn>\n    </template>\n\n    <!-- #formatterColumns -->\n    <template\n      v-for=\"(col, i) in formatterColumns\"\n      v-slot:[`item.${col.value}`]=\"{ header, value }\"\n      >\n        {{ handleFunctionCall(header.formatter, value ) }}\n        <!-- {{ [header.formatter](value) }} -->\n\n    </template>\n\n    <!-- #edit-dialog for editableColumns-->\n    <template\n      v-for=\"(header, k) in editableColumns\"\n      v-slot:[`item.${header.value}`]=\"props\"\n      >\n        <v-edit-dialog\n          :key=\"k\"\n          :return-value.sync=\"props.item[header.value]\"\n          :save-text=\"$t('save')\"\n          @open=\"setEditedItem(props.item)\"\n          @cancel=\"resetEditedItem()\"\n          @close=\"resetEditedItem()\"\n          @save=\"updateCell(header.value)\"\n\n          persistent\n          large\n\n        >\n          {{ props.item[header.value] }}\n          <template v-slot:input>\n            <v-text-field\n              :value=\"props.item[header.value]\"\n              @input=\"columnChanged\"\n              @keyup.enter=\"updateCell(header.value)\"\n              label=\"Edit\"\n              single-line\n              counter\n            >\n            </v-text-field>\n          </template>\n        </v-edit-dialog>\n    </template>\n\n    <!-- <template slot=\"headers\" slot-scope=\"props\">\n      <tr>\n        <th>\n          <v-checkbox\n            :input-value=\"props.all\"\n            :indeterminate=\"props.indeterminate\"\n            primary\n            hide-details\n            @click.native=\"toggleAll\"\n          ></v-checkbox>\n        </th>\n        <th\n          v-for=\"header in props.headers\"\n          :key=\"header.text\"\n          :class=\"['column sortable', pagination.descending ? 'desc' : 'asc', header.value === pagination.sortBy ? 'active' : '']\"\n          @click=\"changeSort(header.value)\"\n        >\n          <v-icon small>arrow_upward</v-icon>\n          {{ header.text }}\n        </th>\n      </tr>\n      <tr class=\"grey lighten-3\">\n        <th>\n          <v-icon>$filter_list</v-icon>\n        </th>\n        <th\n          v-for=\"header in props.headers\"\n          :key=\"header.text\"\n        >\n          <div v-if=\"filters.hasOwnProperty(header.value)\">\n            <v-select flat hide-details small multiple clearable\n              :items=\"columnValueList(header.value)\" v-model=\"filters[header.value]\"\n              >\n\n            </v-select>\n\n          </div>\n        </th>\n      </tr>\n    </template> -->\n\n  </v-data-table>\n</template>\n\n<script>\nimport { mapState } from 'vuex'\nimport { DATATABLE, FORM, ALERT } from '@/store/mutations'\nimport ACTIONS from '@/store/actions'\n\nimport { DatatableMixin } from '@/mixins'\n\nexport default {\n  mixins: [DatatableMixin],\n  data: function () {\n    return {\n      formModalActive: false,\n      dialogActive: false,\n\n      langs: ['tr', 'en'],\n\n      cellInput: ''\n\n    }\n  },\n  computed: {\n    dialogDescription () {\n      return this.$t('confirm-deletion', {\n        route: this.transName.toLowerCase(),\n        name: this.editedItem[this.titleKey]\n      })\n    },\n    transName () {\n      return this.$t('modules.' + this.name.toLowerCase())\n    }\n  },\n  created () {\n    __log(this.props)\n    // __log(this.createOnModal, this.editOnModal)\n    // __log(\n    //   window[process.env.VUE_APP_NAME].ENDPOINTS.create\n\n    // )\n  },\n\n  watch: {\n    formModalActive (val) {\n      val || this.resetEditedItem()\n    },\n    dialogActive (val) {\n      val || this.resetEditedItem()\n    }\n  },\n\n  methods: {\n    deleteRow: function () {\n      const self = this\n\n      this.$store.dispatch(ACTIONS.DELETE_ITEM, {\n        id: this.editedItem.id,\n        callback: () => {\n          this.$refs.dialog.closeModal()\n        },\n        errorCallback: () => {\n\n        }\n      })\n    },\n    columnChanged (value) {\n      this.cellInput = value\n    },\n    /**\n       * @param {string} key - related key of object\n       */\n    updateCell (key) {\n      this.$store.commit(ALERT.CLEAR_ALERT)\n\n      if (this.editedItem[key] !== this.cellInput) {\n        const data = {\n          id: this.editedItem.id,\n          [key]: this.cellInput\n          // reload: false\n        }\n\n        this.$store.dispatch(ACTIONS.SAVE_FORM, { item: data })\n      }\n    },\n\n    changeSort (column) {\n      if (this.pagination.sortBy === column) {\n        this.pagination.descending = !this.pagination.descending\n      } else {\n        this.pagination.sortBy = column\n        this.pagination.descending = false\n      }\n    },\n    columnValueList (val) {\n      return this.elements.map(d => d[val])\n    }\n\n  }\n}\n</script>\n"],"mappings":";;gxFA8BoC,GAAAA,gBAAA,CAAGC,IAAA,CAAAC,EAAE,6BAA4B,+rBAmBjC,GAAAF,gBAAA,CAAGC,IAAA,CAAAE,GAAG,YAAW,MAAY,GAAAH,gBAAA,CAAGC,IAAA,CAAAG,EAAE,wBAAuB,4jNAqJ7D,GAAAJ,gBAAA,EAAIC,IAAA,CAAAI,MAAM,CAACC,SAAS,EAAEL,IAAA,CAAAM,KAAK,KAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}