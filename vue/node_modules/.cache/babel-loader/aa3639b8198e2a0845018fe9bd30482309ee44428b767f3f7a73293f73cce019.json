{"ast":null,"code":"import _defineProperty from \"/var/www/crm_template/packages/oobook/crm-base/vue/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport { createVNode as _createVNode, Fragment as _Fragment } from \"vue\";\n// Composables\nimport { useColor } from \"./color.mjs\"; // Utilities\nimport { computed, unref } from 'vue';\nimport { getCurrentInstanceName, propsFactory } from \"../util/index.mjs\"; // Types\nexport var allowedVariants = ['elevated', 'flat', 'tonal', 'outlined', 'text', 'plain'];\nexport function genOverlays(isClickable, name) {\n  return _createVNode(_Fragment, null, [isClickable && _createVNode(\"span\", {\n    \"key\": \"overlay\",\n    \"class\": \"\".concat(name, \"__overlay\")\n  }, null), _createVNode(\"span\", {\n    \"key\": \"underlay\",\n    \"class\": \"\".concat(name, \"__underlay\")\n  }, null)]);\n}\nexport var makeVariantProps = propsFactory({\n  color: String,\n  variant: {\n    type: String,\n    \"default\": 'elevated',\n    validator: function validator(v) {\n      return allowedVariants.includes(v);\n    }\n  }\n}, 'variant');\nexport function useVariant(props) {\n  var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getCurrentInstanceName();\n  var variantClasses = computed(function () {\n    var _unref = unref(props),\n      variant = _unref.variant;\n    return \"\".concat(name, \"--variant-\").concat(variant);\n  });\n  var _useColor = useColor(computed(function () {\n      var _unref2 = unref(props),\n        variant = _unref2.variant,\n        color = _unref2.color;\n      return _defineProperty({}, ['elevated', 'flat'].includes(variant) ? 'background' : 'text', color);\n    })),\n    colorClasses = _useColor.colorClasses,\n    colorStyles = _useColor.colorStyles;\n  return {\n    colorClasses: colorClasses,\n    colorStyles: colorStyles,\n    variantClasses: variantClasses\n  };\n}","map":{"version":3,"names":["useColor","computed","unref","getCurrentInstanceName","propsFactory","allowedVariants","genOverlays","isClickable","name","_createVNode","_Fragment","concat","makeVariantProps","color","String","variant","type","validator","v","includes","useVariant","props","arguments","length","undefined","variantClasses","_unref","_useColor","_unref2","_defineProperty","colorClasses","colorStyles"],"sources":["../../src/composables/variant.tsx"],"sourcesContent":["// Composables\nimport { useColor } from '@/composables/color'\n\n// Utilities\nimport { computed, unref } from 'vue'\nimport { getCurrentInstanceName, propsFactory } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { MaybeRef } from '@/util'\n\nexport const allowedVariants = [\n  'elevated',\n  'flat',\n  'tonal',\n  'outlined',\n  'text',\n  'plain',\n] as const\n\nexport type Variant = typeof allowedVariants[number]\n\nexport interface VariantProps {\n  color?: string\n  variant: Variant\n}\n\nexport function genOverlays (isClickable: boolean, name: string) {\n  return (\n    <>\n      { isClickable && <span key=\"overlay\" class={`${name}__overlay`} /> }\n\n      <span key=\"underlay\" class={`${name}__underlay`} />\n    </>\n  )\n}\n\nexport const makeVariantProps = propsFactory({\n  color: String,\n  variant: {\n    type: String as PropType<Variant>,\n    default: 'elevated',\n    validator: (v: any) => allowedVariants.includes(v),\n  },\n}, 'variant')\n\nexport function useVariant (\n  props: MaybeRef<VariantProps>,\n  name = getCurrentInstanceName(),\n) {\n  const variantClasses = computed(() => {\n    const { variant } = unref(props)\n    return `${name}--variant-${variant}`\n  })\n\n  const { colorClasses, colorStyles } = useColor(computed(() => {\n    const { variant, color } = unref(props)\n    return {\n      [['elevated', 'flat'].includes(variant) ? 'background' : 'text']: color,\n    }\n  }))\n\n  return { colorClasses, colorStyles, variantClasses }\n}\n"],"mappings":";;;;AAAA;AAAA,SACSA,QAAQ,uBAEjB;AACA,SAASC,QAAQ,EAAEC,KAAK,QAAQ,KAAK;AAAA,SAC5BC,sBAAsB,EAAEC,YAAY,6BAE7C;AAIA,OAAO,IAAMC,eAAe,GAAG,CAC7B,UAAU,EACV,MAAM,EACN,OAAO,EACP,UAAU,EACV,MAAM,EACN,OAAO,CACC;AASV,OAAO,SAASC,WAAWA,CAAEC,WAAoB,EAAEC,IAAY,EAAE;EAC/D,OAAAC,YAAA,CAAAC,SAAA,SAEMH,WAAW,IAAAE,YAAA;IAAA,OAAc,SAAS;IAAA,YAAAE,MAAA,CAAWH,IAAK;EAAU,QAAI,EAAAC,YAAA;IAAA,OAExD,UAAU;IAAA,YAAAE,MAAA,CAAWH,IAAK;EAAW;AAGrD;AAEA,OAAO,IAAMI,gBAAgB,GAAGR,YAAY,CAAC;EAC3CS,KAAK,EAAEC,MAAM;EACbC,OAAO,EAAE;IACPC,IAAI,EAAEF,MAA2B;IACjC,WAAS,UAAU;IACnBG,SAAS,EAAG,SAAAA,UAAAC,CAAM;MAAA,OAAKb,eAAe,CAACc,QAAQ,CAACD,CAAC;IAAA;EACnD;AACF,CAAC,EAAE,SAAS,CAAC;AAEb,OAAO,SAASE,UAAUA,CACxBC,KAA6B,EAE7B;EAAA,IADAb,IAAI,GAAAc,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGnB,sBAAsB,EAAE;EAE/B,IAAMsB,cAAc,GAAGxB,QAAQ,CAAC,YAAM;IACpC,IAAAyB,MAAA,GAAoBxB,KAAK,CAACmB,KAAK,CAAC;MAAxBN,OAAA,GAAAW,MAAA,CAAAX,OAAA;IACR,UAAAJ,MAAA,CAAUH,IAAK,gBAAAG,MAAA,CAAYI,OAAQ;EACrC,CAAC,CAAC;EAEF,IAAAY,SAAA,GAAsC3B,QAAQ,CAACC,QAAQ,CAAC,YAAM;MAC5D,IAAA2B,OAAA,GAA2B1B,KAAK,CAACmB,KAAK,CAAC;QAA/BN,OAAO,GAAAa,OAAA,CAAPb,OAAO;QAAEF,KAAA,GAAAe,OAAA,CAAAf,KAAA;MACjB,OAAAgB,eAAA,KACG,CAAC,UAAU,EAAE,MAAM,CAAC,CAACV,QAAQ,CAACJ,OAAO,CAAC,GAAG,YAAY,GAAG,MAAM,EAAGF,KAAA;IAEtE,CAAC,CAAC,CAAC;IALKiB,YAAY,GAAAH,SAAA,CAAZG,YAAY;IAAEC,WAAA,GAAAJ,SAAA,CAAAI,WAAA;EAOtB,OAAO;IAAED,YAAY,EAAZA,YAAY;IAAEC,WAAW,EAAXA,WAAW;IAAEN,cAAA,EAAAA;EAAe,CAAC;AACtD"},"metadata":{},"sourceType":"module","externalDependencies":[]}