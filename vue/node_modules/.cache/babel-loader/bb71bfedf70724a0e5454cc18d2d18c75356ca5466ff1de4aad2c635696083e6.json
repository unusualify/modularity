{"ast":null,"code":"function mounted(el, binding) {\n  var _binding$modifiers, _binding$modifiers2;\n  var handler = binding.value;\n  var options = {\n    passive: !((_binding$modifiers = binding.modifiers) !== null && _binding$modifiers !== void 0 && _binding$modifiers.active)\n  };\n  window.addEventListener('resize', handler, options);\n  el._onResize = Object(el._onResize);\n  el._onResize[binding.instance.$.uid] = {\n    handler: handler,\n    options: options\n  };\n  if (!((_binding$modifiers2 = binding.modifiers) !== null && _binding$modifiers2 !== void 0 && _binding$modifiers2.quiet)) {\n    handler();\n  }\n}\nfunction unmounted(el, binding) {\n  var _el$_onResize;\n  if (!((_el$_onResize = el._onResize) !== null && _el$_onResize !== void 0 && _el$_onResize[binding.instance.$.uid])) return;\n  var _el$_onResize$binding = el._onResize[binding.instance.$.uid],\n    handler = _el$_onResize$binding.handler,\n    options = _el$_onResize$binding.options;\n  window.removeEventListener('resize', handler, options);\n  delete el._onResize[binding.instance.$.uid];\n}\nexport var Resize = {\n  mounted: mounted,\n  unmounted: unmounted\n};\nexport default Resize;","map":{"version":3,"names":["mounted","el","binding","_binding$modifiers","_binding$modifiers2","handler","value","options","passive","modifiers","active","window","addEventListener","_onResize","Object","instance","$","uid","quiet","unmounted","_el$_onResize","_el$_onResize$binding","removeEventListener","Resize"],"sources":["../../../src/directives/resize/index.ts"],"sourcesContent":["import type { DirectiveBinding } from 'vue'\n\ninterface ResizeDirectiveBinding extends Omit<DirectiveBinding, 'modifiers'> {\n  value: () => void\n  modifiers?: {\n    active?: boolean\n    quiet?: boolean\n  }\n}\n\nfunction mounted (el: HTMLElement, binding: ResizeDirectiveBinding) {\n  const handler = binding.value\n  const options: AddEventListenerOptions = {\n    passive: !binding.modifiers?.active,\n  }\n\n  window.addEventListener('resize', handler, options)\n\n  el._onResize = Object(el._onResize)\n  el._onResize![binding.instance!.$.uid] = {\n    handler,\n    options,\n  }\n\n  if (!binding.modifiers?.quiet) {\n    handler()\n  }\n}\n\nfunction unmounted (el: HTMLElement, binding: ResizeDirectiveBinding) {\n  if (!el._onResize?.[binding.instance!.$.uid]) return\n\n  const { handler, options } = el._onResize[binding.instance!.$.uid]!\n\n  window.removeEventListener('resize', handler, options)\n\n  delete el._onResize[binding.instance!.$.uid]\n}\n\nexport const Resize = {\n  mounted,\n  unmounted,\n}\n\nexport default Resize\n"],"mappings":"AAUA,SAASA,OAAOA,CAAEC,EAAe,EAAEC,OAA+B,EAAE;EAAA,IAAAC,kBAAA,EAAAC,mBAAA;EAClE,IAAMC,OAAO,GAAGH,OAAO,CAACI,KAAK;EAC7B,IAAMC,OAAgC,GAAG;IACvCC,OAAO,EAAE,GAAAL,kBAAA,GAACD,OAAO,CAACO,SAAS,cAAAN,kBAAA,eAAjBA,kBAAA,CAAmBO,MAAA;EAC/B,CAAC;EAEDC,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAEP,OAAO,EAAEE,OAAO,CAAC;EAEnDN,EAAE,CAACY,SAAS,GAAGC,MAAM,CAACb,EAAE,CAACY,SAAS,CAAC;EACnCZ,EAAE,CAACY,SAAS,CAAEX,OAAO,CAACa,QAAQ,CAAEC,CAAC,CAACC,GAAG,CAAC,GAAG;IACvCZ,OAAO,EAAPA,OAAO;IACPE,OAAA,EAAAA;EACF,CAAC;EAED,IAAI,GAAAH,mBAAA,GAACF,OAAO,CAACO,SAAS,cAAAL,mBAAA,eAAjBA,mBAAA,CAAmBc,KAAK,GAAE;IAC7Bb,OAAO,EAAE;EACX;AACF;AAEA,SAASc,SAASA,CAAElB,EAAe,EAAEC,OAA+B,EAAE;EAAA,IAAAkB,aAAA;EACpE,IAAI,GAAAA,aAAA,GAACnB,EAAE,CAACY,SAAS,cAAAO,aAAA,eAAZA,aAAA,CAAelB,OAAO,CAACa,QAAQ,CAAEC,CAAC,CAACC,GAAG,CAAC,GAAE;EAE9C,IAAAI,qBAAA,GAA6BpB,EAAE,CAACY,SAAS,CAACX,OAAO,CAACa,QAAQ,CAAEC,CAAC,CAACC,GAAG,CAAE;IAA3DZ,OAAO,GAAAgB,qBAAA,CAAPhB,OAAO;IAAEE,OAAA,GAAAc,qBAAA,CAAAd,OAAA;EAEjBI,MAAM,CAACW,mBAAmB,CAAC,QAAQ,EAAEjB,OAAO,EAAEE,OAAO,CAAC;EAEtD,OAAON,EAAE,CAACY,SAAS,CAACX,OAAO,CAACa,QAAQ,CAAEC,CAAC,CAACC,GAAG,CAAC;AAC9C;AAEA,OAAO,IAAMM,MAAM,GAAG;EACpBvB,OAAO,EAAPA,OAAO;EACPmB,SAAA,EAAAA;AACF,CAAC;AAED,eAAeI,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}