{"ast":null,"code":"import { createTextVNode as _createTextVNode, mergeProps as _mergeProps, createVNode as _createVNode, Fragment as _Fragment } from \"vue\";\n// Styles\nimport \"./VCombobox.css\";\n\n// Components\nimport { makeSelectProps } from \"../VSelect/VSelect.mjs\";\nimport { VCheckboxBtn } from \"../VCheckbox/index.mjs\";\nimport { VChip } from \"../VChip/index.mjs\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\";\nimport { VList, VListItem } from \"../VList/index.mjs\";\nimport { VMenu } from \"../VMenu/index.mjs\";\nimport { VTextField } from \"../VTextField/index.mjs\"; // Composables\nimport { forwardRefs } from \"../../composables/forwardRefs.mjs\";\nimport { makeFilterProps, useFilter } from \"../../composables/filter.mjs\";\nimport { makeTransitionProps } from \"../../composables/transition.mjs\";\nimport { transformItem, useItems } from \"../../composables/items.mjs\";\nimport { useForm } from \"../../composables/form.mjs\";\nimport { useLocale } from \"../../composables/locale.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\";\nimport { useTextColor } from \"../../composables/color.mjs\"; // Utility\nimport { computed, mergeProps, nextTick, ref, watch } from 'vue';\nimport { genericComponent, omit, useRender, wrapInArray } from \"../../util/index.mjs\";\nimport { filterVTextFieldProps, makeVTextFieldProps } from \"../VTextField/VTextField.mjs\"; // Types\nfunction highlightResult(text, matches, length) {\n  if (matches == null) return text;\n  if (Array.isArray(matches)) throw new Error('Multiple matches is not implemented');\n  return typeof matches === 'number' && ~matches ? _createVNode(_Fragment, null, [_createVNode(\"span\", {\n    \"class\": \"v-combobox__unmask\"\n  }, [text.substr(0, matches)]), _createVNode(\"span\", {\n    \"class\": \"v-combobox__mask\"\n  }, [text.substr(matches, length)]), _createVNode(\"span\", {\n    \"class\": \"v-combobox__unmask\"\n  }, [text.substr(matches + length)])]) : text;\n}\nexport const VCombobox = genericComponent()({\n  name: 'VCombobox',\n  props: {\n    // TODO: implement post keyboard support\n    // autoSelectFirst: Boolean,\n    delimiters: Array,\n    ...makeFilterProps({\n      filterKeys: ['title']\n    }),\n    ...makeSelectProps({\n      hideNoData: true,\n      returnObject: true\n    }),\n    ...omit(makeVTextFieldProps({\n      modelValue: null\n    }), ['validationValue', 'dirty', 'appendInnerIcon']),\n    ...makeTransitionProps({\n      transition: false\n    })\n  },\n  emits: {\n    'update:modelValue': val => true,\n    'update:search': val => true,\n    'update:menu': val => true\n  },\n  setup(props, _ref) {\n    let {\n      emit,\n      slots\n    } = _ref;\n    const {\n      t\n    } = useLocale();\n    const vTextFieldRef = ref();\n    const isFocused = ref(false);\n    const isPristine = ref(true);\n    const vMenuRef = ref();\n    const _menu = useProxiedModel(props, 'menu');\n    const menu = computed({\n      get: () => _menu.value,\n      set: v => {\n        if (_menu.value && !v && vMenuRef.value?.Î¨openChildren) return;\n        _menu.value = v;\n      }\n    });\n    const selectionIndex = ref(-1);\n    const color = computed(() => vTextFieldRef.value?.color);\n    const {\n      items,\n      transformIn,\n      transformOut\n    } = useItems(props);\n    const {\n      textColorClasses,\n      textColorStyles\n    } = useTextColor(color);\n    const model = useProxiedModel(props, 'modelValue', [], v => transformIn(wrapInArray(v || [])), v => {\n      const transformed = transformOut(v);\n      return props.multiple ? transformed : transformed[0] ?? null;\n    });\n    const form = useForm();\n    const _search = ref(!props.multiple ? model.value[0]?.title ?? '' : '');\n    const search = computed({\n      get: () => {\n        return _search.value;\n      },\n      set: val => {\n        _search.value = val;\n        if (!props.multiple) {\n          model.value = [transformItem(props, val)];\n        }\n        if (val && props.multiple && props.delimiters?.length) {\n          const values = val.split(new RegExp(`(?:${props.delimiters.join('|')})+`));\n          if (values.length > 1) {\n            values.forEach(v => {\n              v = v.trim();\n              if (v) select(transformItem(props, v));\n            });\n            _search.value = '';\n          }\n        }\n        if (!val) selectionIndex.value = -1;\n        if (isFocused.value) menu.value = true;\n        isPristine.value = !val;\n      }\n    });\n    watch(_search, value => {\n      emit('update:search', value);\n    });\n    watch(model, value => {\n      if (!props.multiple) {\n        _search.value = value[0]?.title ?? '';\n      }\n    });\n    const {\n      filteredItems,\n      getMatches\n    } = useFilter(props, items, computed(() => isPristine.value ? undefined : search.value));\n    const selections = computed(() => {\n      return model.value.map(v => {\n        return items.value.find(item => props.valueComparator(item.value, v.value)) || v;\n      });\n    });\n    const displayItems = computed(() => {\n      if (props.hideSelected) {\n        return filteredItems.value.filter(filteredItem => !selections.value.some(s => s.value === filteredItem.value));\n      }\n      return filteredItems.value;\n    });\n    const selected = computed(() => selections.value.map(selection => selection.props.value));\n    const selection = computed(() => selections.value[selectionIndex.value]);\n    const listRef = ref();\n    function onClear(e) {\n      if (props.openOnClear) {\n        menu.value = true;\n      }\n    }\n    function onMousedownControl() {\n      if (props.hideNoData && !items.value.length || props.readonly || form?.isReadonly.value) return;\n      menu.value = true;\n    }\n    function onKeydown(e) {\n      if (props.readonly || form?.isReadonly.value) return;\n      const selectionStart = vTextFieldRef.value.selectionStart;\n      const length = selected.value.length;\n      if (selectionIndex.value > -1 || ['Enter', 'ArrowDown', 'ArrowUp'].includes(e.key)) {\n        e.preventDefault();\n      }\n      if (['Enter', 'ArrowDown'].includes(e.key)) {\n        menu.value = true;\n      }\n      if (['Escape'].includes(e.key)) {\n        menu.value = false;\n      }\n      if (['Enter', 'Escape', 'Tab'].includes(e.key)) {\n        isPristine.value = true;\n      }\n      if (e.key === 'ArrowDown') {\n        listRef.value?.focus('next');\n      } else if (e.key === 'ArrowUp') {\n        listRef.value?.focus('prev');\n      }\n      if (!props.multiple) return;\n      if (['Backspace', 'Delete'].includes(e.key)) {\n        if (selectionIndex.value < 0) {\n          if (e.key === 'Backspace' && !search.value) {\n            selectionIndex.value = length - 1;\n          }\n          return;\n        }\n        select(selection.value);\n        nextTick(() => !selection.value && (selectionIndex.value = length - 2));\n      }\n      if (e.key === 'ArrowLeft') {\n        if (selectionIndex.value < 0 && selectionStart > 0) return;\n        const prev = selectionIndex.value > -1 ? selectionIndex.value - 1 : length - 1;\n        if (selections.value[prev]) {\n          selectionIndex.value = prev;\n        } else {\n          selectionIndex.value = -1;\n          vTextFieldRef.value.setSelectionRange(search.value.length, search.value.length);\n        }\n      }\n      if (e.key === 'ArrowRight') {\n        if (selectionIndex.value < 0) return;\n        const next = selectionIndex.value + 1;\n        if (selections.value[next]) {\n          selectionIndex.value = next;\n        } else {\n          selectionIndex.value = -1;\n          vTextFieldRef.value.setSelectionRange(0, 0);\n        }\n      }\n      if (e.key === 'Enter' && search.value) {\n        select(transformItem(props, search.value));\n        search.value = '';\n      }\n    }\n    function onAfterLeave() {\n      if (isFocused.value) isPristine.value = true;\n    }\n    function select(item) {\n      if (props.multiple) {\n        const index = selected.value.findIndex(selection => props.valueComparator(selection, item.value));\n        if (index === -1) {\n          model.value = [...model.value, item];\n        } else {\n          const value = [...model.value];\n          value.splice(index, 1);\n          model.value = value;\n        }\n        search.value = '';\n      } else {\n        model.value = [item];\n        _search.value = item.title;\n\n        // watch for search watcher to trigger\n        nextTick(() => {\n          menu.value = false;\n          isPristine.value = true;\n        });\n      }\n    }\n    function onFocusin(e) {\n      isFocused.value = true;\n    }\n    function onFocusout(e) {\n      if (e.relatedTarget == null) {\n        vTextFieldRef.value?.focus();\n      }\n    }\n    watch(filteredItems, val => {\n      if (!val.length && props.hideNoData) menu.value = false;\n    });\n    watch(isFocused, val => {\n      if (val) {\n        selectionIndex.value = -1;\n      } else {\n        menu.value = false;\n        if (!props.multiple || !search.value) return;\n        model.value = [...model.value, transformItem(props, search.value)];\n        search.value = '';\n      }\n    });\n    useRender(() => {\n      const hasChips = !!(props.chips || slots.chip);\n      const hasList = !!(!props.hideNoData || displayItems.value.length || slots.prepend || slots.append || slots['no-data']);\n      const [textFieldProps] = filterVTextFieldProps(props);\n      return _createVNode(VTextField, _mergeProps({\n        \"ref\": vTextFieldRef\n      }, textFieldProps, {\n        \"modelValue\": search.value,\n        \"onUpdate:modelValue\": [$event => search.value = $event, v => {\n          if (v == null) model.value = [];\n        }],\n        \"validationValue\": model.externalValue,\n        \"dirty\": model.value.length > 0,\n        \"class\": ['v-combobox', {\n          'v-combobox--active-menu': menu.value,\n          'v-combobox--chips': !!props.chips,\n          'v-combobox--selecting-index': selectionIndex.value > -1,\n          [`v-combobox--${props.multiple ? 'multiple' : 'single'}`]: true\n        }],\n        \"appendInnerIcon\": props.items.length ? props.menuIcon : undefined,\n        \"readonly\": props.readonly,\n        \"onClick:clear\": onClear,\n        \"onMousedown:control\": onMousedownControl,\n        \"onFocus\": () => isFocused.value = true,\n        \"onBlur\": () => isFocused.value = false,\n        \"onKeydown\": onKeydown\n      }), {\n        ...slots,\n        default: () => _createVNode(_Fragment, null, [_createVNode(VMenu, _mergeProps({\n          \"ref\": vMenuRef,\n          \"modelValue\": menu.value,\n          \"onUpdate:modelValue\": $event => menu.value = $event,\n          \"activator\": \"parent\",\n          \"contentClass\": \"v-combobox__content\",\n          \"eager\": props.eager,\n          \"maxHeight\": 310,\n          \"openOnClick\": false,\n          \"closeOnContentClick\": false,\n          \"transition\": props.transition,\n          \"onAfterLeave\": onAfterLeave\n        }, props.menuProps), {\n          default: () => [hasList && _createVNode(VList, {\n            \"ref\": listRef,\n            \"selected\": selected.value,\n            \"selectStrategy\": props.multiple ? 'independent' : 'single-independent',\n            \"onMousedown\": e => e.preventDefault(),\n            \"onFocusin\": onFocusin,\n            \"onFocusout\": onFocusout\n          }, {\n            default: () => [!displayItems.value.length && !props.hideNoData && (slots['no-data']?.() ?? _createVNode(VListItem, {\n              \"title\": t(props.noDataText)\n            }, null)), slots['prepend-item']?.(), displayItems.value.map((item, index) => slots.item?.({\n              item,\n              index,\n              props: mergeProps(item.props, {\n                onClick: () => select(item)\n              })\n            }) ?? _createVNode(VListItem, _mergeProps({\n              \"key\": index\n            }, item.props, {\n              \"onClick\": () => select(item)\n            }), {\n              prepend: _ref2 => {\n                let {\n                  isSelected\n                } = _ref2;\n                return props.multiple && !props.hideSelected ? _createVNode(VCheckboxBtn, {\n                  \"modelValue\": isSelected,\n                  \"ripple\": false\n                }, null) : undefined;\n              },\n              title: () => {\n                return isPristine.value ? item.title : highlightResult(item.title, getMatches(item)?.title, search.value?.length ?? 0);\n              }\n            })), slots['append-item']?.()]\n          })]\n        }), selections.value.map((item, index) => {\n          function onChipClose(e) {\n            e.stopPropagation();\n            e.preventDefault();\n            select(item);\n          }\n          const slotProps = {\n            'onClick:close': onChipClose,\n            modelValue: true,\n            'onUpdate:modelValue': undefined\n          };\n          return _createVNode(\"div\", {\n            \"key\": item.value,\n            \"class\": ['v-combobox__selection', index === selectionIndex.value && ['v-combobox__selection--selected', textColorClasses.value]],\n            \"style\": index === selectionIndex.value ? textColorStyles.value : {}\n          }, [hasChips ? _createVNode(VDefaultsProvider, {\n            \"defaults\": {\n              VChip: {\n                closable: props.closableChips,\n                size: 'small',\n                text: item.title\n              }\n            }\n          }, {\n            default: () => [slots.chip ? slots.chip({\n              item,\n              index,\n              props: slotProps\n            }) : _createVNode(VChip, slotProps, null)]\n          }) : slots.selection ? slots.selection({\n            item,\n            index\n          }) : _createVNode(\"span\", {\n            \"class\": \"v-combobox__selection-text\"\n          }, [item.title, props.multiple && index < selections.value.length - 1 && _createVNode(\"span\", {\n            \"class\": \"v-combobox__selection-comma\"\n          }, [_createTextVNode(\",\")])])]);\n        })])\n      });\n    });\n    return forwardRefs({\n      isFocused,\n      isPristine,\n      menu,\n      search,\n      selectionIndex,\n      filteredItems,\n      select\n    }, vTextFieldRef);\n  }\n});","map":{"version":3,"names":["makeSelectProps","VCheckboxBtn","VChip","VDefaultsProvider","VList","VListItem","VMenu","VTextField","forwardRefs","makeFilterProps","useFilter","makeTransitionProps","transformItem","useItems","useForm","useLocale","useProxiedModel","useTextColor","computed","mergeProps","nextTick","ref","watch","genericComponent","omit","useRender","wrapInArray","filterVTextFieldProps","makeVTextFieldProps","highlightResult","text","matches","length","Array","isArray","Error","_createVNode","_Fragment","substr","VCombobox","name","props","delimiters","filterKeys","hideNoData","returnObject","modelValue","transition","emits","val","setup","_ref","emit","slots","t","vTextFieldRef","isFocused","isPristine","vMenuRef","_menu","menu","get","value","set","v","Î¨openChildren","selectionIndex","color","items","transformIn","transformOut","textColorClasses","textColorStyles","model","transformed","multiple","form","_search","title","search","values","split","RegExp","join","forEach","trim","select","filteredItems","getMatches","undefined","selections","map","find","item","valueComparator","displayItems","hideSelected","filter","filteredItem","some","s","selected","selection","listRef","onClear","e","openOnClear","onMousedownControl","readonly","isReadonly","onKeydown","selectionStart","includes","key","preventDefault","focus","prev","setSelectionRange","next","onAfterLeave","index","findIndex","splice","onFocusin","onFocusout","relatedTarget","hasChips","chips","chip","hasList","prepend","append","textFieldProps","_mergeProps","$event","externalValue","menuIcon","onFocus","onBlur","default","eager","menuProps","noDataText","onClick","_ref2","isSelected","onChipClose","stopPropagation","slotProps","closable","closableChips","size","_createTextVNode"],"sources":["../../../src/components/VCombobox/VCombobox.tsx"],"sourcesContent":["// Styles\nimport './VCombobox.sass'\n\n// Components\nimport { makeSelectProps } from '@/components/VSelect/VSelect'\nimport { VCheckboxBtn } from '@/components/VCheckbox'\nimport { VChip } from '@/components/VChip'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VList, VListItem } from '@/components/VList'\nimport { VMenu } from '@/components/VMenu'\nimport { VTextField } from '@/components/VTextField'\n\n// Composables\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { makeFilterProps, useFilter } from '@/composables/filter'\nimport { makeTransitionProps } from '@/composables/transition'\nimport { transformItem, useItems } from '@/composables/items'\nimport { useForm } from '@/composables/form'\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { useTextColor } from '@/composables/color'\n\n// Utility\nimport { computed, mergeProps, nextTick, ref, watch } from 'vue'\nimport { genericComponent, omit, useRender, wrapInArray } from '@/util'\nimport { filterVTextFieldProps, makeVTextFieldProps } from '../VTextField/VTextField'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { MakeSlots, SlotsToProps } from '@/util'\nimport type { FilterMatch } from '@/composables/filter'\nimport type { InternalItem } from '@/composables/items'\nimport type { VFieldSlots } from '@/components/VField/VField'\nimport type { VInputSlots } from '@/components/VInput/VInput'\n\nfunction highlightResult (text: string, matches: FilterMatch | undefined, length: number) {\n  if (matches == null) return text\n\n  if (Array.isArray(matches)) throw new Error('Multiple matches is not implemented')\n\n  return typeof matches === 'number' && ~matches\n    ? (\n      <>\n        <span class=\"v-combobox__unmask\">{ text.substr(0, matches) }</span>\n        <span class=\"v-combobox__mask\">{ text.substr(matches, length) }</span>\n        <span class=\"v-combobox__unmask\">{ text.substr(matches + length) }</span>\n      </>\n    )\n    : text\n}\n\ntype Primitive = string | number | boolean | symbol\n\ntype Val <T, ReturnObject extends boolean> = string | (T extends Primitive\n  ? T\n  : (ReturnObject extends true ? T : any))\n\ntype Value <T, ReturnObject extends boolean, Multiple extends boolean> =\n  Multiple extends true\n    ? readonly Val<T, ReturnObject>[]\n    : Val<T, ReturnObject>\n\nexport const VCombobox = genericComponent<new <\n  T,\n  ReturnObject extends boolean = true,\n  Multiple extends boolean = false,\n  V extends Value<T, ReturnObject, Multiple> = Value<T, ReturnObject, Multiple>\n>() => {\n  $props: {\n    items?: readonly T[]\n    returnObject?: ReturnObject\n    multiple?: Multiple\n    modelValue?: V\n    'onUpdate:modelValue'?: (val: V) => void\n  } & SlotsToProps<\n    Omit<VInputSlots & VFieldSlots, 'default'> & MakeSlots<{\n      item: [{ item: InternalItem<T>, index: number, props: Record<string, unknown> }]\n      chip: [{ item: InternalItem<T>, index: number, props: Record<string, unknown> }]\n      selection: [{ item: InternalItem<T>, index: number }]\n      'prepend-item': []\n      'append-item': []\n      'no-data': []\n    }>\n  >\n}>()({\n  name: 'VCombobox',\n\n  props: {\n    // TODO: implement post keyboard support\n    // autoSelectFirst: Boolean,\n    delimiters: Array as PropType<string[]>,\n\n    ...makeFilterProps({ filterKeys: ['title'] }),\n    ...makeSelectProps({ hideNoData: true, returnObject: true }),\n    ...omit(makeVTextFieldProps({\n      modelValue: null,\n    }), ['validationValue', 'dirty', 'appendInnerIcon']),\n    ...makeTransitionProps({ transition: false }),\n  },\n\n  emits: {\n    'update:modelValue': (val: any) => true,\n    'update:search': (val: string) => true,\n    'update:menu': (val: boolean) => true,\n  },\n\n  setup (props, { emit, slots }) {\n    const { t } = useLocale()\n    const vTextFieldRef = ref()\n    const isFocused = ref(false)\n    const isPristine = ref(true)\n    const vMenuRef = ref<VMenu>()\n    const _menu = useProxiedModel(props, 'menu')\n    const menu = computed({\n      get: () => _menu.value,\n      set: v => {\n        if (_menu.value && !v && vMenuRef.value?.Î¨openChildren) return\n        _menu.value = v\n      },\n    })\n    const selectionIndex = ref(-1)\n    const color = computed(() => vTextFieldRef.value?.color)\n    const { items, transformIn, transformOut } = useItems(props)\n    const { textColorClasses, textColorStyles } = useTextColor(color)\n    const model = useProxiedModel(\n      props,\n      'modelValue',\n      [],\n      v => transformIn(wrapInArray(v || [])),\n      v => {\n        const transformed = transformOut(v)\n        return props.multiple ? transformed : (transformed[0] ?? null)\n      }\n    )\n    const form = useForm()\n    const _search = ref(!props.multiple ? model.value[0]?.title ?? '' : '')\n    const search = computed<string>({\n      get: () => {\n        return _search.value\n      },\n      set: val => {\n        _search.value = val\n        if (!props.multiple) {\n          model.value = [transformItem(props, val)]\n        }\n\n        if (val && props.multiple && props.delimiters?.length) {\n          const values = val.split(new RegExp(`(?:${props.delimiters.join('|')})+`))\n          if (values.length > 1) {\n            values.forEach(v => {\n              v = v.trim()\n              if (v) select(transformItem(props, v))\n            })\n            _search.value = ''\n          }\n        }\n\n        if (!val) selectionIndex.value = -1\n        if (isFocused.value) menu.value = true\n\n        isPristine.value = !val\n      },\n    })\n    watch(_search, value => {\n      emit('update:search', value)\n    })\n    watch(model, value => {\n      if (!props.multiple) {\n        _search.value = value[0]?.title ?? ''\n      }\n    })\n\n    const { filteredItems, getMatches } = useFilter(props, items, computed(() => isPristine.value ? undefined : search.value))\n\n    const selections = computed(() => {\n      return model.value.map(v => {\n        return items.value.find(item => props.valueComparator(item.value, v.value)) || v\n      })\n    })\n\n    const displayItems = computed(() => {\n      if (props.hideSelected) {\n        return filteredItems.value.filter(filteredItem => !selections.value.some(s => s.value === filteredItem.value))\n      }\n      return filteredItems.value\n    })\n\n    const selected = computed(() => selections.value.map(selection => selection.props.value))\n    const selection = computed(() => selections.value[selectionIndex.value])\n    const listRef = ref<VList>()\n\n    function onClear (e: MouseEvent) {\n      if (props.openOnClear) {\n        menu.value = true\n      }\n    }\n    function onMousedownControl () {\n      if (\n        (props.hideNoData && !items.value.length) ||\n        props.readonly || form?.isReadonly.value\n      ) return\n\n      menu.value = true\n    }\n    function onKeydown (e: KeyboardEvent) {\n      if (props.readonly || form?.isReadonly.value) return\n\n      const selectionStart = vTextFieldRef.value.selectionStart\n      const length = selected.value.length\n\n      if (\n        selectionIndex.value > -1 ||\n        ['Enter', 'ArrowDown', 'ArrowUp'].includes(e.key)\n      ) {\n        e.preventDefault()\n      }\n\n      if (['Enter', 'ArrowDown'].includes(e.key)) {\n        menu.value = true\n      }\n\n      if (['Escape'].includes(e.key)) {\n        menu.value = false\n      }\n\n      if (['Enter', 'Escape', 'Tab'].includes(e.key)) {\n        isPristine.value = true\n      }\n\n      if (e.key === 'ArrowDown') {\n        listRef.value?.focus('next')\n      } else if (e.key === 'ArrowUp') {\n        listRef.value?.focus('prev')\n      }\n\n      if (!props.multiple) return\n\n      if (['Backspace', 'Delete'].includes(e.key)) {\n        if (selectionIndex.value < 0) {\n          if (e.key === 'Backspace' && !search.value) {\n            selectionIndex.value = length - 1\n          }\n\n          return\n        }\n\n        select(selection.value)\n\n        nextTick(() => !selection.value && (selectionIndex.value = length - 2))\n      }\n\n      if (e.key === 'ArrowLeft') {\n        if (selectionIndex.value < 0 && selectionStart > 0) return\n\n        const prev = selectionIndex.value > -1\n          ? selectionIndex.value - 1\n          : length - 1\n\n        if (selections.value[prev]) {\n          selectionIndex.value = prev\n        } else {\n          selectionIndex.value = -1\n          vTextFieldRef.value.setSelectionRange(search.value.length, search.value.length)\n        }\n      }\n\n      if (e.key === 'ArrowRight') {\n        if (selectionIndex.value < 0) return\n\n        const next = selectionIndex.value + 1\n\n        if (selections.value[next]) {\n          selectionIndex.value = next\n        } else {\n          selectionIndex.value = -1\n          vTextFieldRef.value.setSelectionRange(0, 0)\n        }\n      }\n\n      if (e.key === 'Enter' && search.value) {\n        select(transformItem(props, search.value))\n        search.value = ''\n      }\n    }\n    function onAfterLeave () {\n      if (isFocused.value) isPristine.value = true\n    }\n    function select (item: InternalItem) {\n      if (props.multiple) {\n        const index = selected.value.findIndex(selection => props.valueComparator(selection, item.value))\n\n        if (index === -1) {\n          model.value = [...model.value, item]\n        } else {\n          const value = [...model.value]\n          value.splice(index, 1)\n          model.value = value\n        }\n\n        search.value = ''\n      } else {\n        model.value = [item]\n        _search.value = item.title\n\n        // watch for search watcher to trigger\n        nextTick(() => {\n          menu.value = false\n          isPristine.value = true\n        })\n      }\n    }\n\n    function onFocusin (e: FocusEvent) {\n      isFocused.value = true\n    }\n\n    function onFocusout (e: FocusEvent) {\n      if (e.relatedTarget == null) {\n        vTextFieldRef.value?.focus()\n      }\n    }\n\n    watch(filteredItems, val => {\n      if (!val.length && props.hideNoData) menu.value = false\n    })\n\n    watch(isFocused, val => {\n      if (val) {\n        selectionIndex.value = -1\n      } else {\n        menu.value = false\n\n        if (!props.multiple || !search.value) return\n\n        model.value = [...model.value, transformItem(props, search.value)]\n        search.value = ''\n      }\n    })\n\n    useRender(() => {\n      const hasChips = !!(props.chips || slots.chip)\n      const hasList = !!((!props.hideNoData || displayItems.value.length) || slots.prepend || slots.append || slots['no-data'])\n      const [textFieldProps] = filterVTextFieldProps(props)\n\n      return (\n        <VTextField\n          ref={ vTextFieldRef }\n          { ...textFieldProps }\n          v-model={ search.value }\n          onUpdate:modelValue={ v => { if (v == null) model.value = [] } }\n          validationValue={ model.externalValue }\n          dirty={ model.value.length > 0 }\n          class={[\n            'v-combobox',\n            {\n              'v-combobox--active-menu': menu.value,\n              'v-combobox--chips': !!props.chips,\n              'v-combobox--selecting-index': selectionIndex.value > -1,\n              [`v-combobox--${props.multiple ? 'multiple' : 'single'}`]: true,\n            },\n          ]}\n          appendInnerIcon={ props.items.length ? props.menuIcon : undefined }\n          readonly={ props.readonly }\n          onClick:clear={ onClear }\n          onMousedown:control={ onMousedownControl }\n          onFocus={ () => isFocused.value = true }\n          onBlur={ () => isFocused.value = false }\n          onKeydown={ onKeydown }\n        >\n          {{\n            ...slots,\n            default: () => (\n              <>\n                <VMenu\n                  ref={ vMenuRef }\n                  v-model={ menu.value }\n                  activator=\"parent\"\n                  contentClass=\"v-combobox__content\"\n                  eager={ props.eager }\n                  maxHeight={ 310 }\n                  openOnClick={ false }\n                  closeOnContentClick={ false }\n                  transition={ props.transition }\n                  onAfterLeave={ onAfterLeave }\n                  { ...props.menuProps }\n                >\n                  { hasList && (\n                    <VList\n                      ref={ listRef }\n                      selected={ selected.value }\n                      selectStrategy={ props.multiple ? 'independent' : 'single-independent' }\n                      onMousedown={ (e: MouseEvent) => e.preventDefault() }\n                      onFocusin={ onFocusin }\n                      onFocusout={ onFocusout }\n                    >\n                      { !displayItems.value.length && !props.hideNoData && (slots['no-data']?.() ?? (\n                        <VListItem title={ t(props.noDataText) } />\n                      )) }\n\n                      { slots['prepend-item']?.() }\n\n                      { displayItems.value.map((item, index) => slots.item?.({\n                        item,\n                        index,\n                        props: mergeProps(item.props, { onClick: () => select(item) }),\n                      }) ?? (\n                        <VListItem\n                          key={ index }\n                          { ...item.props }\n                          onClick={ () => select(item) }\n                        >\n                          {{\n                            prepend: ({ isSelected }) => props.multiple && !props.hideSelected ? (\n                              <VCheckboxBtn modelValue={ isSelected } ripple={ false } />\n                            ) : undefined,\n                            title: () => {\n                              return isPristine.value\n                                ? item.title\n                                : highlightResult(item.title, getMatches(item)?.title, search.value?.length ?? 0)\n                            },\n                          }}\n                        </VListItem>\n                      )) }\n\n                      { slots['append-item']?.() }\n                    </VList>\n                  ) }\n                </VMenu>\n\n                { selections.value.map((item, index) => {\n                  function onChipClose (e: Event) {\n                    e.stopPropagation()\n                    e.preventDefault()\n\n                    select(item)\n                  }\n\n                  const slotProps = {\n                    'onClick:close': onChipClose,\n                    modelValue: true,\n                    'onUpdate:modelValue': undefined,\n                  }\n\n                  return (\n                    <div\n                      key={ item.value }\n                      class={[\n                        'v-combobox__selection',\n                        index === selectionIndex.value && [\n                          'v-combobox__selection--selected',\n                          textColorClasses.value,\n                        ],\n                      ]}\n                      style={ index === selectionIndex.value ? textColorStyles.value : {} }\n                    >\n                      { hasChips ? (\n                        <VDefaultsProvider\n                          defaults={{\n                            VChip: {\n                              closable: props.closableChips,\n                              size: 'small',\n                              text: item.title,\n                            },\n                          }}\n                        >\n                          { slots.chip\n                            ? slots.chip({ item, index, props: slotProps })\n                            : (<VChip { ...slotProps } />)\n                          }\n                        </VDefaultsProvider>\n                      ) : (\n                        slots.selection\n                          ? slots.selection({ item, index })\n                          : (\n                            <span class=\"v-combobox__selection-text\">\n                              { item.title }\n                              { props.multiple && (index < selections.value.length - 1) && (\n                                <span class=\"v-combobox__selection-comma\">,</span>\n                              ) }\n                            </span>\n                          )\n                      ) }\n                    </div>\n                  )\n                }) }\n              </>\n            ),\n          }}\n        </VTextField>\n      )\n    })\n\n    return forwardRefs({\n      isFocused,\n      isPristine,\n      menu,\n      search,\n      selectionIndex,\n      filteredItems,\n      select,\n    }, vTextFieldRef)\n  },\n})\n\nexport type VCombobox = InstanceType<typeof VCombobox>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}