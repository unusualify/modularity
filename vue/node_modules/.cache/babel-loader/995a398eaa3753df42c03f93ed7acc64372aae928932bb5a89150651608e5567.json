{"ast":null,"code":"import _slicedToArray from \"/var/www/crm_template/packages/oobook/crm-base/vue/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectSpread from \"/var/www/crm_template/packages/oobook/crm-base/vue/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.math.sign.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.fill.js\";\nimport \"core-js/modules/es.string.fixed.js\";\nimport { mergeProps as _mergeProps, createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VTab.css\";\n\n// Components\nimport { VBtn } from \"../VBtn/index.mjs\"; // Composables\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { makeGroupItemProps } from \"../../composables/group.mjs\";\nimport { makeRouterProps } from \"../../composables/router.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps } from \"../../composables/theme.mjs\";\nimport { useTextColor } from \"../../composables/color.mjs\"; // Utilities\nimport { computed, ref } from 'vue';\nimport { animate, genericComponent, pick, standardEasing, useRender } from \"../../util/index.mjs\"; // Types\nimport { VTabsSymbol } from \"./shared.mjs\";\nexport var VTab = genericComponent()({\n  name: 'VTab',\n  props: _objectSpread(_objectSpread(_objectSpread(_objectSpread({\n    fixed: Boolean,\n    icon: [Boolean, String, Function, Object],\n    prependIcon: IconValue,\n    appendIcon: IconValue,\n    stacked: Boolean,\n    title: String,\n    ripple: {\n      type: Boolean,\n      \"default\": true\n    },\n    color: String,\n    sliderColor: String,\n    hideSlider: Boolean,\n    direction: {\n      type: String,\n      \"default\": 'horizontal'\n    }\n  }, makeTagProps()), makeRouterProps()), makeGroupItemProps({\n    selectedClass: 'v-tab--selected'\n  })), makeThemeProps()),\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots,\n      attrs = _ref.attrs;\n    var _useTextColor = useTextColor(props, 'sliderColor'),\n      sliderColorClasses = _useTextColor.textColorClasses,\n      sliderColorStyles = _useTextColor.textColorStyles;\n    var isHorizontal = computed(function () {\n      return props.direction === 'horizontal';\n    });\n    var isSelected = ref(false);\n    var rootEl = ref();\n    var sliderEl = ref();\n    function updateSlider(_ref2) {\n      var value = _ref2.value;\n      isSelected.value = value;\n      if (value) {\n        var _rootEl$value, _rootEl$value$$el$par;\n        var prevEl = (_rootEl$value = rootEl.value) === null || _rootEl$value === void 0 ? void 0 : (_rootEl$value$$el$par = _rootEl$value.$el.parentElement) === null || _rootEl$value$$el$par === void 0 ? void 0 : _rootEl$value$$el$par.querySelector('.v-tab--selected .v-tab__slider');\n        var nextEl = sliderEl.value;\n        if (!prevEl || !nextEl) return;\n        var color = getComputedStyle(prevEl).color;\n        var prevBox = prevEl.getBoundingClientRect();\n        var nextBox = nextEl.getBoundingClientRect();\n        var xy = isHorizontal.value ? 'x' : 'y';\n        var XY = isHorizontal.value ? 'X' : 'Y';\n        var rightBottom = isHorizontal.value ? 'right' : 'bottom';\n        var widthHeight = isHorizontal.value ? 'width' : 'height';\n        var prevPos = prevBox[xy];\n        var nextPos = nextBox[xy];\n        var delta = prevPos > nextPos ? prevBox[rightBottom] - nextBox[rightBottom] : prevBox[xy] - nextBox[xy];\n        var origin = Math.sign(delta) > 0 ? isHorizontal.value ? 'right' : 'bottom' : Math.sign(delta) < 0 ? isHorizontal.value ? 'left' : 'top' : 'center';\n        var size = Math.abs(delta) + (Math.sign(delta) < 0 ? prevBox[widthHeight] : nextBox[widthHeight]);\n        var scale = size / Math.max(prevBox[widthHeight], nextBox[widthHeight]);\n        var initialScale = prevBox[widthHeight] / nextBox[widthHeight];\n        var sigma = 1.5;\n        animate(nextEl, {\n          backgroundColor: [color, ''],\n          transform: [\"translate\".concat(XY, \"(\").concat(delta, \"px) scale\").concat(XY, \"(\").concat(initialScale, \")\"), \"translate\".concat(XY, \"(\").concat(delta / sigma, \"px) scale\").concat(XY, \"(\").concat((scale - 1) / sigma + 1, \")\"), ''],\n          transformOrigin: Array(3).fill(origin)\n        }, {\n          duration: 225,\n          easing: standardEasing\n        });\n      }\n    }\n    useRender(function () {\n      var _pick = pick(props, ['href', 'to', 'replace', 'icon', 'stacked', 'prependIcon', 'appendIcon', 'ripple', 'theme', 'disabled', 'selectedClass', 'value', 'color']),\n        _pick2 = _slicedToArray(_pick, 1),\n        btnProps = _pick2[0];\n      return _createVNode(VBtn, _mergeProps({\n        \"_as\": \"VTab\",\n        \"symbol\": VTabsSymbol,\n        \"ref\": rootEl,\n        \"class\": ['v-tab'],\n        \"tabindex\": isSelected.value ? 0 : -1,\n        \"role\": \"tab\",\n        \"aria-selected\": String(isSelected.value),\n        \"active\": false,\n        \"block\": props.fixed,\n        \"maxWidth\": props.fixed ? 300 : undefined,\n        \"variant\": \"text\",\n        \"rounded\": 0\n      }, btnProps, attrs, {\n        \"onGroup:selected\": updateSlider\n      }), {\n        \"default\": function _default() {\n          return [slots[\"default\"] ? slots[\"default\"]() : props.title, !props.hideSlider && _createVNode(\"div\", {\n            \"ref\": sliderEl,\n            \"class\": ['v-tab__slider', sliderColorClasses.value],\n            \"style\": sliderColorStyles.value\n          }, null)];\n        }\n      });\n    });\n    return {};\n  }\n});","map":{"version":3,"names":["VBtn","IconValue","makeGroupItemProps","makeRouterProps","makeTagProps","makeThemeProps","useTextColor","computed","ref","animate","genericComponent","pick","standardEasing","useRender","VTabsSymbol","VTab","name","props","_objectSpread","fixed","Boolean","icon","String","Function","Object","prependIcon","appendIcon","stacked","title","ripple","type","color","sliderColor","hideSlider","direction","selectedClass","setup","_ref","slots","attrs","_useTextColor","sliderColorClasses","textColorClasses","sliderColorStyles","textColorStyles","isHorizontal","isSelected","rootEl","sliderEl","updateSlider","_ref2","value","_rootEl$value","_rootEl$value$$el$par","prevEl","$el","parentElement","querySelector","nextEl","getComputedStyle","prevBox","getBoundingClientRect","nextBox","xy","XY","rightBottom","widthHeight","prevPos","nextPos","delta","origin","Math","sign","size","abs","scale","max","initialScale","sigma","backgroundColor","transform","concat","transformOrigin","Array","fill","duration","easing","_pick","_pick2","_slicedToArray","btnProps","_createVNode","_mergeProps","undefined","_default"],"sources":["../../../src/components/VTabs/VTab.tsx"],"sourcesContent":["// Styles\nimport './VTab.sass'\n\n// Components\nimport { VBtn } from '@/components/VBtn'\n\n// Composables\nimport { IconValue } from '@/composables/icons'\nimport { makeGroupItemProps } from '@/composables/group'\nimport { makeRouterProps } from '@/composables/router'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps } from '@/composables/theme'\nimport { useTextColor } from '@/composables/color'\n\n// Utilities\nimport { computed, ref } from 'vue'\nimport { animate, genericComponent, pick, standardEasing, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport { VTabsSymbol } from './shared'\n\nexport const VTab = genericComponent()({\n  name: 'VTab',\n\n  props: {\n    fixed: Boolean,\n    icon: [Boolean, String, Function, Object] as PropType<boolean | IconValue>,\n    prependIcon: IconValue,\n    appendIcon: IconValue,\n\n    stacked: Boolean,\n    title: String,\n\n    ripple: {\n      type: Boolean,\n      default: true,\n    },\n    color: String,\n    sliderColor: String,\n    hideSlider: Boolean,\n\n    direction: {\n      type: String as PropType<'horizontal' | 'vertical'>,\n      default: 'horizontal',\n    },\n\n    ...makeTagProps(),\n    ...makeRouterProps(),\n    ...makeGroupItemProps({\n      selectedClass: 'v-tab--selected',\n    }),\n    ...makeThemeProps(),\n  },\n\n  setup (props, { slots, attrs }) {\n    const { textColorClasses: sliderColorClasses, textColorStyles: sliderColorStyles } = useTextColor(props, 'sliderColor')\n    const isHorizontal = computed(() => props.direction === 'horizontal')\n    const isSelected = ref(false)\n\n    const rootEl = ref<VBtn>()\n    const sliderEl = ref<HTMLElement>()\n\n    function updateSlider ({ value }: { value: boolean }) {\n      isSelected.value = value\n\n      if (value) {\n        const prevEl: HTMLElement | undefined = rootEl.value?.$el.parentElement?.querySelector('.v-tab--selected .v-tab__slider')\n        const nextEl = sliderEl.value\n\n        if (!prevEl || !nextEl) return\n\n        const color = getComputedStyle(prevEl).color\n\n        const prevBox = prevEl.getBoundingClientRect()\n        const nextBox = nextEl.getBoundingClientRect()\n\n        const xy = isHorizontal.value ? 'x' : 'y'\n        const XY = isHorizontal.value ? 'X' : 'Y'\n        const rightBottom = isHorizontal.value ? 'right' : 'bottom'\n        const widthHeight = isHorizontal.value ? 'width' : 'height'\n\n        const prevPos = prevBox[xy]\n        const nextPos = nextBox[xy]\n        const delta = prevPos > nextPos\n          ? prevBox[rightBottom] - nextBox[rightBottom]\n          : prevBox[xy] - nextBox[xy]\n        const origin =\n          Math.sign(delta) > 0 ? (isHorizontal.value ? 'right' : 'bottom')\n          : Math.sign(delta) < 0 ? (isHorizontal.value ? 'left' : 'top')\n          : 'center'\n        const size = Math.abs(delta) + (Math.sign(delta) < 0 ? prevBox[widthHeight] : nextBox[widthHeight])\n        const scale = size / Math.max(prevBox[widthHeight], nextBox[widthHeight])\n        const initialScale = prevBox[widthHeight] / nextBox[widthHeight]\n\n        const sigma = 1.5\n        animate(nextEl, {\n          backgroundColor: [color, ''],\n          transform: [\n            `translate${XY}(${delta}px) scale${XY}(${initialScale})`,\n            `translate${XY}(${delta / sigma}px) scale${XY}(${(scale - 1) / sigma + 1})`,\n            '',\n          ],\n          transformOrigin: Array(3).fill(origin),\n        }, {\n          duration: 225,\n          easing: standardEasing,\n        })\n      }\n    }\n\n    useRender(() => {\n      const [btnProps] = pick(props, [\n        'href',\n        'to',\n        'replace',\n        'icon',\n        'stacked',\n        'prependIcon',\n        'appendIcon',\n        'ripple',\n        'theme',\n        'disabled',\n        'selectedClass',\n        'value',\n        'color',\n      ])\n\n      return (\n        <VBtn\n          _as=\"VTab\"\n          symbol={ VTabsSymbol }\n          ref={ rootEl }\n          class={[\n            'v-tab',\n          ]}\n          tabindex={ isSelected.value ? 0 : -1 }\n          role=\"tab\"\n          aria-selected={ String(isSelected.value) }\n          active={ false }\n          block={ props.fixed }\n          maxWidth={ props.fixed ? 300 : undefined }\n          variant=\"text\"\n          rounded={ 0 }\n          { ...btnProps }\n          { ...attrs }\n          onGroup:selected={ updateSlider }\n        >\n          { slots.default ? slots.default() : props.title }\n          { !props.hideSlider && (\n            <div\n              ref={ sliderEl }\n              class={[\n                'v-tab__slider',\n                sliderColorClasses.value,\n              ]}\n              style={ sliderColorStyles.value }\n            />\n          ) }\n        </VBtn>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VTab = InstanceType<typeof VTab>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}