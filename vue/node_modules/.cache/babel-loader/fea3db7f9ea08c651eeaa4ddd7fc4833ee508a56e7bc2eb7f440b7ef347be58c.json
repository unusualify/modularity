{"ast":null,"code":"import { mergeProps as _mergeProps, createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VMenu.css\";\n\n// Components\nimport { VDialogTransition } from \"../transitions/index.mjs\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\";\nimport { VOverlay } from \"../VOverlay/index.mjs\"; // Composables\nimport { forwardRefs } from \"../../composables/forwardRefs.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\";\nimport { useScopeId } from \"../../composables/scopeId.mjs\"; // Utilities\nimport { computed, inject, mergeProps, provide, ref, watch } from 'vue';\nimport { genericComponent, getUid, omit, useRender } from \"../../util/index.mjs\";\nimport { filterVOverlayProps, makeVOverlayProps } from \"../VOverlay/VOverlay.mjs\";\nimport { VMenuSymbol } from \"./shared.mjs\"; // Types\nexport const VMenu = genericComponent()({\n  name: 'VMenu',\n  props: {\n    // TODO\n    // disableKeys: Boolean,\n    id: String,\n    ...omit(makeVOverlayProps({\n      closeDelay: 250,\n      closeOnContentClick: true,\n      locationStrategy: 'connected',\n      openDelay: 300,\n      scrim: false,\n      scrollStrategy: 'reposition',\n      transition: {\n        component: VDialogTransition\n      }\n    }), ['absolute'])\n  },\n  emits: {\n    'update:modelValue': value => true\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const isActive = useProxiedModel(props, 'modelValue');\n    const {\n      scopeId\n    } = useScopeId();\n    const uid = getUid();\n    const id = computed(() => props.id || `v-menu-${uid}`);\n    const overlay = ref();\n    const parent = inject(VMenuSymbol, null);\n    const openChildren = ref(0);\n    provide(VMenuSymbol, {\n      register() {\n        ++openChildren.value;\n      },\n      unregister() {\n        --openChildren.value;\n      },\n      closeParents() {\n        setTimeout(() => {\n          if (!openChildren.value) {\n            isActive.value = false;\n            parent?.closeParents();\n          }\n        }, 40);\n      }\n    });\n    watch(isActive, val => {\n      val ? parent?.register() : parent?.unregister();\n    });\n    function onClickOutside() {\n      parent?.closeParents();\n    }\n    const activatorProps = computed(() => mergeProps({\n      'aria-haspopup': 'menu',\n      'aria-expanded': String(isActive.value),\n      'aria-owns': id.value\n    }, props.activatorProps));\n    useRender(() => {\n      const [overlayProps] = filterVOverlayProps(props);\n      return _createVNode(VOverlay, _mergeProps({\n        \"ref\": overlay,\n        \"class\": ['v-menu']\n      }, overlayProps, {\n        \"modelValue\": isActive.value,\n        \"onUpdate:modelValue\": $event => isActive.value = $event,\n        \"absolute\": true,\n        \"activatorProps\": activatorProps.value,\n        \"onClick:outside\": onClickOutside\n      }, scopeId), {\n        activator: slots.activator,\n        default: function () {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n          return _createVNode(VDefaultsProvider, {\n            \"root\": true\n          }, {\n            default: () => [slots.default?.(...args)]\n          });\n        }\n      });\n    });\n    return forwardRefs({\n      id,\n      ΨopenChildren: openChildren\n    }, overlay);\n  }\n});","map":{"version":3,"names":["VDialogTransition","VDefaultsProvider","VOverlay","forwardRefs","useProxiedModel","useScopeId","computed","inject","mergeProps","provide","ref","watch","genericComponent","getUid","omit","useRender","filterVOverlayProps","makeVOverlayProps","VMenuSymbol","VMenu","name","props","id","String","closeDelay","closeOnContentClick","locationStrategy","openDelay","scrim","scrollStrategy","transition","component","emits","value","setup","_ref","slots","isActive","scopeId","uid","overlay","parent","openChildren","register","unregister","closeParents","setTimeout","val","onClickOutside","activatorProps","overlayProps","_createVNode","_mergeProps","$event","activator","default","_len","arguments","length","args","Array","_key","ΨopenChildren"],"sources":["../../../src/components/VMenu/VMenu.tsx"],"sourcesContent":["// Styles\nimport './VMenu.sass'\n\n// Components\nimport { VDialogTransition } from '@/components/transitions'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VOverlay } from '@/components/VOverlay'\n\n// Composables\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { useScopeId } from '@/composables/scopeId'\n\n// Utilities\nimport { computed, inject, mergeProps, provide, ref, watch } from 'vue'\nimport { genericComponent, getUid, omit, useRender } from '@/util'\nimport { filterVOverlayProps, makeVOverlayProps } from '@/components/VOverlay/VOverlay'\nimport { VMenuSymbol } from './shared'\n\n// Types\nimport type { OverlaySlots } from '@/components/VOverlay/VOverlay'\n\nexport const VMenu = genericComponent<OverlaySlots>()({\n  name: 'VMenu',\n\n  props: {\n    // TODO\n    // disableKeys: Boolean,\n    id: String,\n\n    ...omit(makeVOverlayProps({\n      closeDelay: 250,\n      closeOnContentClick: true,\n      locationStrategy: 'connected' as const,\n      openDelay: 300,\n      scrim: false,\n      scrollStrategy: 'reposition' as const,\n      transition: { component: VDialogTransition },\n    }), ['absolute']),\n  },\n\n  emits: {\n    'update:modelValue': (value: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const isActive = useProxiedModel(props, 'modelValue')\n    const { scopeId } = useScopeId()\n\n    const uid = getUid()\n    const id = computed(() => props.id || `v-menu-${uid}`)\n\n    const overlay = ref<VOverlay>()\n\n    const parent = inject(VMenuSymbol, null)\n    const openChildren = ref(0)\n    provide(VMenuSymbol, {\n      register () {\n        ++openChildren.value\n      },\n      unregister () {\n        --openChildren.value\n      },\n      closeParents () {\n        setTimeout(() => {\n          if (!openChildren.value) {\n            isActive.value = false\n            parent?.closeParents()\n          }\n        }, 40)\n      },\n    })\n\n    watch(isActive, val => {\n      val ? parent?.register() : parent?.unregister()\n    })\n\n    function onClickOutside () {\n      parent?.closeParents()\n    }\n\n    const activatorProps = computed(() =>\n      mergeProps({\n        'aria-haspopup': 'menu',\n        'aria-expanded': String(isActive.value),\n        'aria-owns': id.value,\n      }, props.activatorProps)\n    )\n\n    useRender(() => {\n      const [overlayProps] = filterVOverlayProps(props)\n\n      return (\n        <VOverlay\n          ref={ overlay }\n          class={[\n            'v-menu',\n          ]}\n          { ...overlayProps }\n          v-model={ isActive.value }\n          absolute\n          activatorProps={ activatorProps.value }\n          onClick:outside={ onClickOutside }\n          { ...scopeId }\n        >\n          {{\n            activator: slots.activator,\n            default: (...args) => (\n              <VDefaultsProvider root>\n                { slots.default?.(...args) }\n              </VDefaultsProvider>\n            ),\n          }}\n        </VOverlay>\n      )\n    })\n\n    return forwardRefs({ id, ΨopenChildren: openChildren }, overlay)\n  },\n})\n\nexport type VMenu = InstanceType<typeof VMenu>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}