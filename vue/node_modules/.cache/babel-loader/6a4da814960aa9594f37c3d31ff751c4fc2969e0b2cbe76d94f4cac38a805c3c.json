{"ast":null,"code":"import _objectSpread from \"/var/www/crm_template/packages/oobook/crm-base/vue/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport { createVNode as _createVNode, resolveDirective as _resolveDirective } from \"vue\";\n// Styles\nimport \"./VExpansionPanel.css\";\n\n// Composables\nimport { makeGroupProps, useGroup } from \"../../composables/group.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { provideDefaults } from \"../../composables/defaults.mjs\"; // Utilities\nimport { computed, toRef } from 'vue';\nimport { genericComponent, useRender } from \"../../util/index.mjs\"; // Types\nexport var VExpansionPanelSymbol = Symbol[\"for\"]('vuetify:v-expansion-panel');\nvar allowedVariants = ['default', 'accordion', 'inset', 'popout'];\nexport var VExpansionPanels = genericComponent()({\n  name: 'VExpansionPanels',\n  props: _objectSpread(_objectSpread(_objectSpread({\n    color: String,\n    variant: {\n      type: String,\n      \"default\": 'default',\n      validator: function validator(v) {\n        return allowedVariants.includes(v);\n      }\n    },\n    readonly: Boolean\n  }, makeGroupProps()), makeTagProps()), makeThemeProps()),\n  emits: {\n    'update:modelValue': function updateModelValue(val) {\n      return true;\n    }\n  },\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n    useGroup(props, VExpansionPanelSymbol);\n    var _provideTheme = provideTheme(props),\n      themeClasses = _provideTheme.themeClasses;\n    var variantClass = computed(function () {\n      return props.variant && \"v-expansion-panels--variant-\".concat(props.variant);\n    });\n    provideDefaults({\n      VExpansionPanel: {\n        color: toRef(props, 'color')\n      },\n      VExpansionPanelTitle: {\n        readonly: toRef(props, 'readonly')\n      }\n    });\n    useRender(function () {\n      return _createVNode(props.tag, {\n        \"class\": ['v-expansion-panels', themeClasses.value, variantClass.value]\n      }, slots);\n    });\n    return {};\n  }\n});","map":{"version":3,"names":["makeGroupProps","useGroup","makeTagProps","makeThemeProps","provideTheme","provideDefaults","computed","toRef","genericComponent","useRender","VExpansionPanelSymbol","Symbol","allowedVariants","VExpansionPanels","name","props","_objectSpread","color","String","variant","type","validator","v","includes","readonly","Boolean","emits","updateModelValue","val","setup","_ref","slots","_provideTheme","themeClasses","variantClass","concat","VExpansionPanel","VExpansionPanelTitle","_createVNode","tag","value"],"sources":["../../../src/components/VExpansionPanel/VExpansionPanels.tsx"],"sourcesContent":["// Styles\nimport './VExpansionPanel.sass'\n\n// Composables\nimport { makeGroupProps, useGroup } from '@/composables/group'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { provideDefaults } from '@/composables/defaults'\n\n// Utilities\nimport { computed, toRef } from 'vue'\nimport { genericComponent, useRender } from '@/util'\n\n// Types\nimport type { InjectionKey, PropType } from 'vue'\nimport type { GroupItemProvide } from '@/composables/group'\n\nexport const VExpansionPanelSymbol: InjectionKey<GroupItemProvide> = Symbol.for('vuetify:v-expansion-panel')\n\nconst allowedVariants = ['default', 'accordion', 'inset', 'popout'] as const\n\ntype Variant = typeof allowedVariants[number]\n\nexport const VExpansionPanels = genericComponent()({\n  name: 'VExpansionPanels',\n\n  props: {\n    color: String,\n    variant: {\n      type: String as PropType<Variant>,\n      default: 'default',\n      validator: (v: any) => allowedVariants.includes(v),\n    },\n    readonly: Boolean,\n\n    ...makeGroupProps(),\n    ...makeTagProps(),\n    ...makeThemeProps(),\n  },\n\n  emits: {\n    'update:modelValue': (val: unknown) => true,\n  },\n\n  setup (props, { slots }) {\n    useGroup(props, VExpansionPanelSymbol)\n\n    const { themeClasses } = provideTheme(props)\n\n    const variantClass = computed(() => props.variant && `v-expansion-panels--variant-${props.variant}`)\n\n    provideDefaults({\n      VExpansionPanel: {\n        color: toRef(props, 'color'),\n      },\n      VExpansionPanelTitle: {\n        readonly: toRef(props, 'readonly'),\n      },\n    })\n\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-expansion-panels',\n          themeClasses.value,\n          variantClass.value,\n        ]}\n        v-slots={ slots }\n      />\n    ))\n\n    return {}\n  },\n})\n\nexport type VExpansionPanels = InstanceType<typeof VExpansionPanels>\n"],"mappings":";;;;;;AAAA;AACA;;AAEA;AAAA,SACSA,cAAc,EAAEC,QAAQ;AAAA,SACxBC,YAAY;AAAA,SACZC,cAAc,EAAEC,YAAY;AAAA,SAC5BC,eAAe,0CAExB;AACA,SAASC,QAAQ,EAAEC,KAAK,QAAQ,KAAK;AAAA,SAC5BC,gBAAgB,EAAEC,SAAS,gCAEpC;AAIA,OAAO,IAAMC,qBAAqD,GAAGC,MAAM,OAAI,CAAC,2BAA2B,CAAC;AAE5G,IAAMC,eAAe,GAAG,CAAC,SAAS,EAAE,WAAW,EAAE,OAAO,EAAE,QAAQ,CAAU;AAI5E,OAAO,IAAMC,gBAAgB,GAAGL,gBAAgB,EAAE,CAAC;EACjDM,IAAI,EAAE,kBAAkB;EAExBC,KAAK,EAAAC,aAAA,CAAAA,aAAA,CAAAA,aAAA;IACHC,KAAK,EAAEC,MAAM;IACbC,OAAO,EAAE;MACPC,IAAI,EAAEF,MAA2B;MACjC,WAAS,SAAS;MAClBG,SAAS,EAAG,SAAAA,UAAAC,CAAM;QAAA,OAAKV,eAAe,CAACW,QAAQ,CAACD,CAAC;MAAA;IACnD,CAAC;IACDE,QAAQ,EAAEC;EAAO,GAEdzB,cAAc,EAAE,GAChBE,YAAY,EAAE,GACdC,cAAc,GAClB;EAEDuB,KAAK,EAAE;IACL,mBAAmB,EAAG,SAAAC,iBAAAC,GAAY;MAAA,OAAK;IAAA;EACzC,CAAC;EAEDC,KAAK,WAAAA,MAAEd,KAAK,EAAAe,IAAA,EAAa;IAAA,IAATC,KAAA,GAAOD,IAAA,CAAPC,KAAA;IACd9B,QAAQ,CAACc,KAAK,EAAEL,qBAAqB,CAAC;IAEtC,IAAAsB,aAAA,GAAyB5B,YAAY,CAACW,KAAK,CAAC;MAApCkB,YAAA,GAAAD,aAAA,CAAAC,YAAA;IAER,IAAMC,YAAY,GAAG5B,QAAQ,CAAC;MAAA,OAAMS,KAAK,CAACI,OAAO,mCAAAgB,MAAA,CAAmCpB,KAAK,CAACI,OAAQ,CAAC;IAAA,EAAC;IAEpGd,eAAe,CAAC;MACd+B,eAAe,EAAE;QACfnB,KAAK,EAAEV,KAAK,CAACQ,KAAK,EAAE,OAAO;MAC7B,CAAC;MACDsB,oBAAoB,EAAE;QACpBb,QAAQ,EAAEjB,KAAK,CAACQ,KAAK,EAAE,UAAU;MACnC;IACF,CAAC,CAAC;IAEFN,SAAS,CAAC;MAAA,OAAA6B,YAAA,CAAAvB,KAAA,CAAAwB,GAAA;QAAA,SAEC,CACL,oBAAoB,EACpBN,YAAY,CAACO,KAAK,EAClBN,YAAY,CAACM,KAAK;MACnB,GACST,KAAK,CAElB;IAAA,EAAC;IAEF,OAAO,CAAC,CAAC;EACX;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}