{"ast":null,"code":"import UEForm from '__components/Form.vue';\nimport { ModalMixin } from '@/mixins';\nexport default {\n  mixins: [ModalMixin],\n  components: {\n    'ue-form': UEForm\n  },\n  props: {\n    routeName: {\n      type: String,\n      \"default\": 'Item'\n    }\n  },\n  data: function data() {\n    return {\n      full: false\n    };\n  },\n  computed: {\n    formTitle: function formTitle() {\n      return this.$t(this.editedIndex === -1 ? 'new-item' : 'edit-item', {\n        'item': this.routeName\n      });\n    },\n    activatorText: function activatorText() {\n      return this.$t('new-item', {\n        'item': this.routeName\n      });\n    }\n  },\n  methods: {\n    screenListener: function screenListener(e) {\n      // __log(e.target);\n      this.full = e.target.fullScreen;\n    },\n    formReference: function formReference() {\n      return this.id + \"-form\";\n    },\n    confirmCallback: function confirmCallback() {\n      var self = this;\n      this.$refs[this.formReference()].saveForm(function (res) {\n        self.closeModal();\n      });\n    },\n    save: function save() {\n      console.log('save clicked', this.formObject);\n    }\n  }\n};","map":{"version":3,"names":["UEForm","ModalMixin","mixins","components","props","routeName","type","String","data","full","computed","formTitle","$t","editedIndex","activatorText","methods","screenListener","e","target","fullScreen","formReference","id","confirmCallback","self","$refs","saveForm","res","closeModal","save","console","log","formObject"],"sources":["/var/www/crm_template/packages/oobook/crm-base/vue/src/js/components/modals/ModalForm.vue"],"sourcesContent":["<template>\n    <ue-modal\n        v-model=\"show\"\n\n        scrollable\n        content-class=\"bg-primary\"\n\n        width-type=\"lg\"\n        systembar\n        @screenListener=\"screenListener\"\n        >\n        <template v-slot:activator=\"{on, attrs}\">\n            <slot\n                name=\"activator\"\n                :attrs=\"{...attrs}\"\n                :on=\"{...on}\"\n                >\n            </slot>\n        </template>\n\n        <template\n            v-slot:body=\"{on, attrs}\"\n            v-bind=\"attrs\"\n            v-on=\"on\"\n            >\n\n            <v-card >\n\n                <v-card-title class=\"text-h5 grey lighten-2\">\n\n                    <span slot=\"title\" class=\"text-h5\" >\n                        {{ formTitle }}\n                    </span>\n                </v-card-title>\n\n                <v-card-text>\n                    <!-- <ue-form :ref=\"formReference()\"/> -->\n                    <ue-form-base :ref=\"formReference()\"/>\n\n                </v-card-text>\n\n                <v-divider></v-divider>\n\n                <v-card-actions>\n                    <v-spacer></v-spacer>\n                    <!-- <v-btn\n                        color=\"error darken-1\"\n                        text\n                        @click=\"cancelModal(on.closeDialog)\"\n                        >\n                        {{ $t('cancel') }}\n                    </v-btn> -->\n                    <v-btn\n                        color=\"error darken-1\"\n                        text\n                        @click=\"cancelModal(on.closeDialog)\"\n                        >\n                        {{ textCancel }}\n                    </v-btn>\n                    <v-btn\n                        color=\"teal darken-1\"\n                        text\n                        @click=\"confirmModal(on.closeDialog)\"\n                        >\n                        {{ $t('save') }}\n                    </v-btn>\n                </v-card-actions>\n            </v-card>\n        </template>\n    </ue-modal>\n</template>\n\n<script>\nimport UEForm from '__components/Form.vue';\nimport { ModalMixin } from '@/mixins'\n\nexport default {\n    mixins: [ModalMixin],\n    components: {\n        'ue-form': UEForm\n    },\n    props: {\n        routeName: {\n            type: String,\n            default: 'Item'\n        }\n    },\n    data() {\n        return {\n            full: false\n        }\n    },\n\n    computed: {\n        formTitle () {\n            return this.$t( ( this.editedIndex === -1 ? 'new-item' : 'edit-item'), {'item': this.routeName})\n        },\n        activatorText() {\n            return this.$t('new-item', {'item': this.routeName} )\n        },\n    },\n\n    methods: {\n        screenListener(e){\n            // __log(e.target);\n            this.full = e.target.fullScreen\n        },\n        formReference(){\n            return this.id + `-form`\n        },\n\n        confirmCallback(){\n            let self = this;\n            this.$refs[this.formReference()].saveForm((res) => {\n                self.closeModal();\n            })\n        },\n\n        save () {\n            console.log(\n                'save clicked',\n                this.formObject\n            );\n        },\n    }\n}\n</script>\n\n<style>\n\n</style>\n"],"mappings":"AAyEA,OAAOA,MAAK,MAAO,uBAAuB;AAC1C,SAASC,UAAS,QAAS,UAAS;AAEpC,eAAe;EACXC,MAAM,EAAE,CAACD,UAAU,CAAC;EACpBE,UAAU,EAAE;IACR,SAAS,EAAEH;EACf,CAAC;EACDI,KAAK,EAAE;IACHC,SAAS,EAAE;MACPC,IAAI,EAAEC,MAAM;MACZ,WAAS;IACb;EACJ,CAAC;EACDC,IAAI,WAAAA,KAAA,EAAG;IACH,OAAO;MACHC,IAAI,EAAE;IACV;EACJ,CAAC;EAEDC,QAAQ,EAAE;IACNC,SAAQ,WAAAA,UAAA,EAAK;MACT,OAAO,IAAI,CAACC,EAAE,CAAI,IAAI,CAACC,WAAU,KAAM,CAAC,IAAI,UAAS,GAAI,WAAW,EAAG;QAAC,MAAM,EAAE,IAAI,CAACR;MAAS,CAAC;IACnG,CAAC;IACDS,aAAa,WAAAA,cAAA,EAAG;MACZ,OAAO,IAAI,CAACF,EAAE,CAAC,UAAU,EAAE;QAAC,MAAM,EAAE,IAAI,CAACP;MAAS,EAAE;IACxD;EACJ,CAAC;EAEDU,OAAO,EAAE;IACLC,cAAc,WAAAA,eAACC,CAAC,EAAC;MACb;MACA,IAAI,CAACR,IAAG,GAAIQ,CAAC,CAACC,MAAM,CAACC,UAAS;IAClC,CAAC;IACDC,aAAa,WAAAA,cAAA,EAAE;MACX,OAAO,IAAI,CAACC,EAAC,UAAU;IAC3B,CAAC;IAEDC,eAAe,WAAAA,gBAAA,EAAE;MACb,IAAIC,IAAG,GAAI,IAAI;MACf,IAAI,CAACC,KAAK,CAAC,IAAI,CAACJ,aAAa,EAAE,CAAC,CAACK,QAAQ,CAAC,UAACC,GAAG,EAAK;QAC/CH,IAAI,CAACI,UAAU,EAAE;MACrB,CAAC;IACL,CAAC;IAEDC,IAAG,WAAAA,KAAA,EAAK;MACJC,OAAO,CAACC,GAAG,CACP,cAAc,EACd,IAAI,CAACC,UAAS,CACjB;IACL;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}