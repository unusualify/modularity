{"ast":null,"code":"// Utilities\nimport { computed, ref, watch } from 'vue';\n\n// Types\nimport { propsFactory } from \"../util/index.mjs\";\nexport var makeLazyProps = propsFactory({\n  eager: Boolean\n}, 'lazy');\nexport function useLazy(props, active) {\n  var isBooted = ref(false);\n  var hasContent = computed(function () {\n    return isBooted.value || props.eager || active.value;\n  });\n  watch(active, function () {\n    return isBooted.value = true;\n  });\n  function onAfterLeave() {\n    if (!props.eager) isBooted.value = false;\n  }\n  return {\n    isBooted: isBooted,\n    hasContent: hasContent,\n    onAfterLeave: onAfterLeave\n  };\n}","map":{"version":3,"names":["computed","ref","watch","propsFactory","makeLazyProps","eager","Boolean","useLazy","props","active","isBooted","hasContent","value","onAfterLeave"],"sources":["../../src/composables/lazy.ts"],"sourcesContent":["// Utilities\nimport { computed, ref, watch } from 'vue'\n\n// Types\nimport type { Ref } from 'vue'\nimport { propsFactory } from '@/util'\n\nexport const makeLazyProps = propsFactory({\n  eager: Boolean,\n}, 'lazy')\n\nexport function useLazy (props: { eager: boolean }, active: Ref<boolean>) {\n  const isBooted = ref(false)\n  const hasContent = computed(() => isBooted.value || props.eager || active.value)\n\n  watch(active, () => isBooted.value = true)\n\n  function onAfterLeave () {\n    if (!props.eager) isBooted.value = false\n  }\n\n  return { isBooted, hasContent, onAfterLeave }\n}\n"],"mappings":"AAAA;AACA,SAASA,QAAQ,EAAEC,GAAG,EAAEC,KAAK,QAAQ,KAAK;;AAE1C;AAAA,SAESC,YAAY;AAErB,OAAO,IAAMC,aAAa,GAAGD,YAAY,CAAC;EACxCE,KAAK,EAAEC;AACT,CAAC,EAAE,MAAM,CAAC;AAEV,OAAO,SAASC,OAAOA,CAAEC,KAAyB,EAAEC,MAAoB,EAAE;EACxE,IAAMC,QAAQ,GAAGT,GAAG,CAAC,KAAK,CAAC;EAC3B,IAAMU,UAAU,GAAGX,QAAQ,CAAC;IAAA,OAAMU,QAAQ,CAACE,KAAK,IAAIJ,KAAK,CAACH,KAAK,IAAII,MAAM,CAACG,KAAK;EAAA,EAAC;EAEhFV,KAAK,CAACO,MAAM,EAAE;IAAA,OAAMC,QAAQ,CAACE,KAAK,GAAG,IAAI;EAAA,EAAC;EAE1C,SAASC,YAAYA,CAAA,EAAI;IACvB,IAAI,CAACL,KAAK,CAACH,KAAK,EAAEK,QAAQ,CAACE,KAAK,GAAG,KAAK;EAC1C;EAEA,OAAO;IAAEF,QAAQ,EAARA,QAAQ;IAAEC,UAAU,EAAVA,UAAU;IAAEE,YAAA,EAAAA;EAAa,CAAC;AAC/C"},"metadata":{},"sourceType":"module","externalDependencies":[]}