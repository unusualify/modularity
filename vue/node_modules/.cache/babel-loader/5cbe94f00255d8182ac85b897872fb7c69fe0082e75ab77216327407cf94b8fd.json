{"ast":null,"code":"import { mapState } from 'vuex';\nimport { MEDIA_LIBRARY } from '@/store/mutations';\nimport api from '../../store/api/media-library';\nimport ACTIONS from '@/store/actions';\nimport UEModal from './Modal.vue';\nimport scrollToY from '@/utils/scrollToY.js';\nimport FormDataAsObj from '@/utils/formDataAsObj.js';\nimport { ModalMixin } from '@/mixins';\nexport default {\n  mixins: [ModalMixin],\n  components: {\n    'ue-modal': UEModal\n  },\n  props: {\n    modalTitlePrefix: {\n      type: String,\n      default: function () {\n        return this.$trans('media-library.title', 'Media Library');\n      }\n    },\n    btnLabelSingle: {\n      type: String,\n      default: function () {\n        return this.$trans('media-library.insert', 'Insert');\n      }\n    },\n    btnLabelUpdate: {\n      type: String,\n      default: function () {\n        return this.$trans('media-library.update', 'Update');\n      }\n    },\n    btnLabelMulti: {\n      type: String,\n      default: function () {\n        return this.$trans('media-library.insert', 'Insert');\n      }\n    },\n    initialPage: {\n      type: Number,\n      default: 1\n    },\n    authorized: {\n      type: Boolean,\n      default: true\n    },\n    showInsert: {\n      type: Boolean,\n      default: true\n    },\n    extraMetadatas: {\n      type: Array,\n      default() {\n        return [];\n      }\n    },\n    translatableMetadatas: {\n      type: Array,\n      default() {\n        return [];\n      }\n    }\n  },\n  data: function () {\n    return {\n      loading: false,\n      maxPage: 20,\n      mediaItems: [],\n      selectedMedias: [],\n      gridHeight: 0,\n      page: this.initialPage,\n      tags: [],\n      lastScrollTop: 0,\n      gridLoaded: false,\n      full: true,\n      show: true\n    };\n  },\n  computed: {\n    renderedMediaItems: function () {\n      return this.mediaItems.map(item => {\n        item.disabled = this.filesizeMax > 0 && item.filesizeInMb > this.filesizeMax || this.widthMin > 0 && item.width < this.widthMin || this.heightMin > 0 && item.height < this.heightMin;\n        return item;\n      });\n    },\n    currentTypeObject: function () {\n      return this.types.find(type => {\n        return type.value === this.type;\n      });\n    },\n    endpoint: function () {\n      return this.currentTypeObject.endpoint;\n    },\n    modalTitle: function () {\n      if (this.connector) {\n        if (this.indexToReplace > -1) return this.modalTitlePrefix + ' – ' + this.btnLabelUpdate;\n        return this.selectedMedias.length > 1 ? this.modalTitlePrefix + ' – ' + this.btnLabelMulti : this.modalTitlePrefix + ' – ' + this.btnLabelSingle;\n      }\n      return this.modalTitlePrefix;\n    },\n    btnLabel: function () {\n      let type = this.$trans('media-library.types.single.' + this.type, this.type);\n      if (this.indexToReplace > -1) {\n        return this.btnLabelUpdate + ' ' + type;\n      } else {\n        if (this.selectedMedias.length > 1) {\n          type = this.$trans('media-library.types.multiple.' + this.type, this.type);\n        }\n        return this.btnLabelSingle + ' ' + type;\n      }\n    },\n    usedMedias: function () {\n      return this.selected[this.connector] || [];\n    },\n    selectedType: function () {\n      const self = this;\n      const navItem = self.types.filter(function (t) {\n        return t.value === self.type;\n      });\n      return navItem[0];\n    },\n    canInsert: function () {\n      return !this.selectedMedias.some(sMedia => !!this.usedMedias.find(uMedia => uMedia.id === sMedia.id));\n    },\n    ...mapState({\n      connector: state => state.mediaLibrary.connector,\n      max: state => state.mediaLibrary.max,\n      filesizeMax: state => state.mediaLibrary.filesizeMax,\n      widthMin: state => state.mediaLibrary.widthMin,\n      heightMin: state => state.mediaLibrary.heightMin,\n      type: state => state.mediaLibrary.type,\n      // image, video, file\n      types: state => state.mediaLibrary.types,\n      strict: state => state.mediaLibrary.strict,\n      selected: state => state.mediaLibrary.selected,\n      indexToReplace: state => state.mediaLibrary.indexToReplace\n\n      // showModal: state => state.mediaLibrary.showModal,\n\n      // show: state => state.mediaLibrary.showModal,\n    })\n\n    // show: {\n    //     get () {\n    //         return this.$store.state.mediaLibrary.showModal;\n    //     },\n    //     set (value) {\n    //         // this.$store.dispatch(ACTIONS.TOGGLE_MEDIA_MODAL, value)\n    //     }\n    // },\n  },\n\n  watch: {\n    type: function () {\n      this.clearMediaItems();\n      this.gridLoaded = false;\n    }\n  },\n  methods: {\n    // for ue-uploader\n    addMedia: function (media) {\n      const index = this.mediaItems.findIndex(function (item) {\n        return item.id === media.id;\n      });\n\n      // Check of the media item exists i.e replacement\n      if (index > -1) {\n        for (const mediaRole in this.selected) {\n          this.selected[mediaRole].forEach((mediaCrop, index) => {\n            if (media.id === mediaCrop.id) {\n              const crops = [];\n              for (const crop in mediaCrop.crops) {\n                crops[crop] = {\n                  height: media.height === mediaCrop.height ? mediaCrop.crops[crop].height : media.height,\n                  name: crop,\n                  width: media.width === mediaCrop.width ? mediaCrop.crops[crop].width : media.width,\n                  x: media.width === mediaCrop.width ? mediaCrop.crops[crop].x : 0,\n                  y: media.height === mediaCrop.height ? mediaCrop.crops[crop].y : 0\n                };\n              }\n              this.$store.commit(MEDIA_LIBRARY.UPDATE_MEDIAS, {\n                index,\n                media: {\n                  ...media,\n                  width: media.width === mediaCrop.width ? mediaCrop.width : media.width,\n                  height: media.height === mediaCrop.height ? mediaCrop.height : media.height,\n                  crops\n                },\n                mediaRole\n              });\n            }\n          });\n        }\n        this.$set(this.mediaItems, index, media);\n        this.selectedMedias.unshift(media);\n      } else {\n        // add media in first position of the available media\n        this.mediaItems.unshift(media);\n        this.$store.commit(MEDIA_LIBRARY.INCREMENT_MEDIA_TYPE_TOTAL, this.type);\n        // select it\n        this.updateSelectedMedias(media.id);\n      }\n    },\n    updateSelectedMedias: function (item, shift = false) {\n      const id = item.id;\n      const alreadySelectedMedia = this.selectedMedias.filter(function (media) {\n        return media.id === id;\n      });\n\n      // not already selected\n      if (alreadySelectedMedia.length === 0) {\n        if (this.max === 1) this.clearSelectedMedias();\n        if (this.selectedMedias.length >= this.max && this.max > 0) return;\n        if (shift && this.selectedMedias.length > 0) {\n          const lastSelectedMedia = this.selectedMedias[this.selectedMedias.length - 1];\n          const lastSelectedMediaIndex = this.mediaItems.findIndex(media => media.id === lastSelectedMedia.id);\n          const selectedMediaIndex = this.mediaItems.findIndex(media => media.id === id);\n          if (selectedMediaIndex === -1 && lastSelectedMediaIndex === -1) return;\n          let start = null;\n          let end = null;\n          if (lastSelectedMediaIndex < selectedMediaIndex) {\n            start = lastSelectedMediaIndex + 1;\n            end = selectedMediaIndex + 1;\n          } else {\n            start = selectedMediaIndex;\n            end = lastSelectedMediaIndex;\n          }\n          const selectedMedias = this.mediaItems.slice(start, end);\n          selectedMedias.forEach(media => {\n            if (this.selectedMedias.length >= this.max && this.max > 0) return;\n            const index = this.selectedMedias.findIndex(m => m.id === media.id);\n            if (index === -1) {\n              this.selectedMedias.push(media);\n            }\n          });\n        } else {\n          const mediaToSelect = this.mediaItems.filter(function (media) {\n            return media.id === id;\n          });\n\n          // Add one media to the selected media\n          if (mediaToSelect.length) this.selectedMedias.push(mediaToSelect[0]);\n        }\n      } else {\n        // Remove one item from the selected media\n        this.selectedMedias = this.selectedMedias.filter(function (media) {\n          return media.id !== id;\n        });\n      }\n    },\n    clearSelectedMedias: function () {\n      this.selectedMedias.splice(0);\n    },\n    // for ue-filter\n    clearFilters: function () {\n      const self = this;\n      // reset tags\n      if (this.$refs.filter) this.$refs.filter.value = null;\n      // reset unused field\n      if (this.$refs.unused) {\n        const input = this.$refs.unused.$el.querySelector('input');\n        input && input.checked && input.click();\n      }\n      this.$nextTick(function () {\n        self.submitFilter();\n      });\n    },\n    submitFilter: function (formData) {\n      const self = this;\n      const el = this.$refs.list;\n      // when changing filters, reset the page to 1\n      this.page = 1;\n      this.clearMediaItems();\n      this.clearSelectedMedias();\n      if (el.scrollTop === 0) {\n        self.reloadGrid();\n        return;\n      }\n      scrollToY({\n        el: el,\n        offset: 0,\n        easing: 'easeOut',\n        onComplete: function () {\n          self.reloadGrid();\n        }\n      });\n    },\n    clearMediaItems: function () {\n      this.mediaItems.splice(0);\n    },\n    clearSelectedMedias: function () {\n      this.selectedMedias.splice(0);\n    },\n    reloadGrid: function () {\n      this.loading = true;\n      const form = this.$refs.form;\n      const formdata = this.getFormData(form);\n\n      // if (this.selected[this.connector]) {\n      //   formdata.except = this.selected[this.connector].map((media) => {\n      //     return media.id\n      //   })\n      //   console.log(formdata.except)\n      // }\n\n      // see api/media-library for actual ajax\n      api.get(this.endpoint, formdata, resp => {\n        // add medias here\n        resp.data.items.forEach(item => {\n          if (!this.mediaItems.find(media => media.id === item.id)) {\n            this.mediaItems.push(item);\n          }\n        });\n        this.maxPage = resp.data.maxPage || 1;\n        this.tags = resp.data.tags || [];\n        this.$store.commit(MEDIA_LIBRARY.UPDATE_MEDIA_TYPE_TOTAL, {\n          type: this.type,\n          total: resp.data.total\n        });\n        this.loading = false;\n        this.listenScrollPosition();\n        this.gridLoaded = true;\n      }, error => {\n        // this.$store.commit(NOTIFICATION.SET_NOTIF, {\n        //   message: error.data.message,\n        //   variant: 'error'\n        // })\n      });\n    },\n    updateType: function (newType) {\n      if (this.loading) return;\n      if (this.strict) return;\n      if (this.type === newType) return;\n      this.$store.commit(MEDIA_LIBRARY.UPDATE_MEDIA_TYPE, newType);\n      this.submitFilter();\n    },\n    getFormData: function (form) {\n      let data = FormDataAsObj(form);\n      if (data) data.page = this.page;else data = {\n        page: this.page\n      };\n      data.type = this.type;\n      if (Array.isArray(data.unused) && data.unused.length) {\n        data.unused = data.unused[0];\n      }\n      return data;\n    }\n  },\n  created() {\n    // __log(this)\n  }\n};","map":{"version":3,"names":["mapState","MEDIA_LIBRARY","api","ACTIONS","UEModal","scrollToY","FormDataAsObj","ModalMixin","mixins","components","props","modalTitlePrefix","type","String","default","$trans","btnLabelSingle","btnLabelUpdate","btnLabelMulti","initialPage","Number","authorized","Boolean","showInsert","extraMetadatas","Array","translatableMetadatas","data","loading","maxPage","mediaItems","selectedMedias","gridHeight","page","tags","lastScrollTop","gridLoaded","full","show","computed","renderedMediaItems","map","item","disabled","filesizeMax","filesizeInMb","widthMin","width","heightMin","height","currentTypeObject","types","find","value","endpoint","modalTitle","connector","indexToReplace","length","btnLabel","usedMedias","selected","selectedType","self","navItem","filter","t","canInsert","some","sMedia","uMedia","id","state","mediaLibrary","max","strict","watch","clearMediaItems","methods","addMedia","media","index","findIndex","mediaRole","forEach","mediaCrop","crops","crop","name","x","y","$store","commit","UPDATE_MEDIAS","$set","unshift","INCREMENT_MEDIA_TYPE_TOTAL","updateSelectedMedias","shift","alreadySelectedMedia","clearSelectedMedias","lastSelectedMedia","lastSelectedMediaIndex","selectedMediaIndex","start","end","slice","m","push","mediaToSelect","splice","clearFilters","$refs","unused","input","$el","querySelector","checked","click","$nextTick","submitFilter","formData","el","list","scrollTop","reloadGrid","offset","easing","onComplete","form","formdata","getFormData","get","resp","items","UPDATE_MEDIA_TYPE_TOTAL","total","listenScrollPosition","error","updateType","newType","UPDATE_MEDIA_TYPE","isArray","created"],"sources":["/Users/oguzhanbukcuoglu/Desktop/Projects/crm_template/packages/oobook/crm-base/vue/src/js/components/modals/ModalMedia.vue"],"sourcesContent":["<template>\n  <ue-modal \n    v-model=\"show\"\n    id=\"modalMedia\"\n    ref=\"modalMedia\"\n\n    fullscreen\n    content-class=\"bg-primary\"\n\n\n    >\n    <template v-slot:activator=\"{on, attrs}\">\n      <slot \n          name=\"activator\"\n          :attrs=\"{...attrs}\"\n          :on=\"{...on}\"\n          >\n      </slot>\n    </template>\n    <template \n        v-slot:body=\"{on, attrs}\"\n        v-bind=\"attrs\"\n        v-on=\"on\"\n        >\n        \n        <div class=\"medialibrary\">\n          <div class=\"medialibrary__frame\">\n            \n            <v-toolbar\n              dark\n              color=\"primary\"\n            >\n              <v-toolbar-title>{{ modalTitle }}</v-toolbar-title>\n              <v-spacer></v-spacer>\n              <v-toolbar-items>\n                <v-btn\n                  icon\n                  dark\n                  @click=\"closeModal\"\n                >\n                  <v-icon>mdi-close</v-icon>\n                </v-btn>\n              </v-toolbar-items>\n            </v-toolbar>\n            <div class=\"medialibrary__header\" ref=\"form\">\n              <ue-filter @submit=\"submitFilter\" :clearOption=\"true\" @clear=\"clearFilters\">\n                <ul class=\"secondarynav secondarynav--desktop py\" slot=\"navigation\" v-if=\"types.length\">\n                  \n                  <v-chip\n                    \n                    v-for=\"navType in types\" \n                    :key=\"navType.value\"\n                    class=\"ma-2\"\n                    @click.prevent=\"updateType(navType.value)\"\n                    >\n                      {{  navType.text }}\n                      <span\n                        v-if=\"navType.total > 0\" class=\"secondarynav__number\"\n                        >\n                        ({{ navType.total }})\n                      </span>\n                  </v-chip>\n                  <!-- <li \n                    class=\"secondarynav__item\" \n                    v-for=\"navType in types\" \n                    :key=\"navType.value\"\n                    :class=\"{ 's--on': type === navType.value, 's--disabled' : type !== navType.value && strict }\"\n                    >\n                    <a href=\"#\" @click.prevent=\"updateType(navType.value)\">\n                      <span class=\"secondarynav__link\">{{ navType.text }}</span>\n                      <span\n                        v-if=\"navType.total > 0\" class=\"secondarynav__number\"\n                        >\n                        ({{ navType.total }})\n                      </span>\n                    </a>\n                  </li> -->\n                </ul>\n\n                <!-- <div class=\"secondarynav secondarynav--mobile secondarynav--dropdown\" slot=\"navigation\">\n                  <a17-dropdown ref=\"secondaryNavDropdown\" position=\"bottom-left\" width=\"full\" :offset=\"0\">\n                    <a17-button class=\"secondarynav__button\" variant=\"dropdown-transparent\" size=\"small\"\n                                @click=\"$refs.secondaryNavDropdown.toggle()\" v-if=\"selectedType\">\n                      <span class=\"secondarynav__link\">{{ selectedType.text }}</span><span class=\"secondarynav__number\">{{ selectedType.total }}</span>\n                    </a17-button>\n                    <div slot=\"dropdown__content\">\n                      <ul>\n                        <li v-for=\"navType in types\" :key=\"navType.value\" class=\"secondarynav__item\">\n                          <a href=\"#\" v-on:click.prevent=\"updateType(navType.value)\"><span class=\"secondarynav__link\">{{ navType.text }}</span><span\n                            class=\"secondarynav__number\">{{ navType.total }}</span></a>\n                        </li>\n                      </ul>\n                    </div>\n                  </a17-dropdown>\n                </div> -->\n\n                <div slot=\"hidden-filters\">\n                  <!-- <a17-vselect class=\"medialibrary__filter-item\" ref=\"filter\" name=\"tag\" :options=\"tags\"\n                              :placeholder=\"$trans('media-library.filter-select-label', 'Filter by tag')\" :searchable=\"true\" maxHeight=\"175px\"/>\n                  <a17-checkbox class=\"medialibrary__filter-item\" ref=\"unused\" name=\"unused\" :initial-value=\"0\" :value=\"1\" :label=\"$trans('media-library.unused-filter-label', 'Show unused only')\"/> -->\n                </div>\n              </ue-filter>\n            </div>\n            \n            <div class=\"medialibrary__inner\">\n              <div class=\"medialibrary__grid\">\n                <aside class=\"medialibrary__sidebar\">\n                  Side\n                </aside>\n                <footer class=\"medialibrary__footer\" v-if=\"selectedMedias.length && showInsert && connector\">\n                  <!-- <a17-button v-if=\"canInsert\" variant=\"action\" @click=\"saveAndClose\">{{ btnLabel }}</a17-button>\n                  <a17-button v-else variant=\"action\" :disabled=\"true\">{{ btnLabel }}</a17-button> -->\n                  <ue-btn\n                      v-if=\"canInsert\" @click=\"saveAndClose\"\n                      >\n                      {{ btnLabel }}\n                  </ue-btn>\n                  <ue-btn\n                      v-else\n                      :disabled=\"true\"\n                      >\n                      {{ btnLabel }}\n                  </ue-btn>\n                </footer>\n\n                <div class=\"medialibrary__list\" ref=\"list\">\n                  <ue-uploader \n                    ref=\"uploader\" \n                    v-if=\"authorized\" \n                    @loaded=\"addMedia\" \n                    @clear=\"clearSelectedMedias\"\n                    :type=\"currentTypeObject\"\n                    />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n    </template>\n  </ue-modal>\n</template>\n\n<script>\n  import { mapState } from 'vuex'\n  import { MEDIA_LIBRARY } from '@/store/mutations'\n  \n  import api from '../../store/api/media-library'\n  \n  import ACTIONS from '@/store/actions'\n\n  import UEModal from './Modal.vue'\n\n  import scrollToY from '@/utils/scrollToY.js'\n\n  import FormDataAsObj from '@/utils/formDataAsObj.js'\n\n  import { ModalMixin } from '@/mixins'\n\n  export default {  \n    mixins: [ModalMixin],\n    components: {\n      'ue-modal': UEModal\n    },\n    props: {\n      modalTitlePrefix: {\n        type: String,\n        default: function () {\n          return this.$trans('media-library.title', 'Media Library')\n        }\n      },\n      btnLabelSingle: {\n        type: String,\n        default: function () {\n          return this.$trans('media-library.insert', 'Insert')\n        }\n      },\n      btnLabelUpdate: {\n        type: String,\n        default: function () {\n          return this.$trans('media-library.update', 'Update')\n        }\n      },\n      btnLabelMulti: {\n        type: String,\n        default: function () {\n          return this.$trans('media-library.insert', 'Insert')\n        }\n      },\n      initialPage: {\n        type: Number,\n        default: 1\n      },\n      authorized: {\n        type: Boolean,\n        default: true\n      },\n      showInsert: {\n        type: Boolean,\n        default: true\n      },\n      extraMetadatas: {\n        type: Array,\n        default () {\n          return []\n        }\n      },\n      translatableMetadatas: {\n        type: Array,\n        default () {\n          return []\n        }\n      }\n    },\n    data: function () {\n      return {\n        loading: false,\n        maxPage: 20,\n        mediaItems: [],\n        selectedMedias: [],\n        gridHeight: 0,\n        page: this.initialPage,\n        tags: [],\n        lastScrollTop: 0,\n        gridLoaded: false,\n        \n        full: true,\n        show: true,\n      }\n    },\n    computed: {\n      renderedMediaItems: function () {\n        return this.mediaItems.map((item) => {\n          item.disabled = (this.filesizeMax > 0 && item.filesizeInMb > this.filesizeMax) ||\n            (this.widthMin > 0 && item.width < this.widthMin) ||\n            (this.heightMin > 0 && item.height < this.heightMin)\n          return item\n        })\n      },\n      currentTypeObject: function () {\n        return this.types.find((type) => {\n          return type.value === this.type\n        })\n      },\n      endpoint: function () {\n        return this.currentTypeObject.endpoint\n      },\n      modalTitle: function () {\n        if (this.connector) {\n          if (this.indexToReplace > -1) return this.modalTitlePrefix + ' – ' + this.btnLabelUpdate\n          return this.selectedMedias.length > 1 ? this.modalTitlePrefix + ' – ' + this.btnLabelMulti : this.modalTitlePrefix + ' – ' + this.btnLabelSingle\n        }\n        return this.modalTitlePrefix\n      },\n      btnLabel: function () {\n        let type = this.$trans('media-library.types.single.' + this.type, this.type)\n\n        if (this.indexToReplace > -1) {\n          return this.btnLabelUpdate + ' ' + type\n        } else {\n          if (this.selectedMedias.length > 1) {\n            type = this.$trans('media-library.types.multiple.' + this.type, this.type)\n          }\n\n          return this.btnLabelSingle + ' ' + type\n        }\n      },\n      usedMedias: function () {\n        return this.selected[this.connector] || []\n      },\n      selectedType: function () {\n        const self = this\n        const navItem = self.types.filter(function (t) {\n          return t.value === self.type\n        })\n        return navItem[0]\n      },\n      canInsert: function () {\n        return !this.selectedMedias.some(sMedia => !!this.usedMedias.find(uMedia => uMedia.id === sMedia.id))\n      },\n      ...mapState({\n        connector: state => state.mediaLibrary.connector,\n        max: state => state.mediaLibrary.max,\n        filesizeMax: state => state.mediaLibrary.filesizeMax,\n        widthMin: state => state.mediaLibrary.widthMin,\n        heightMin: state => state.mediaLibrary.heightMin,\n        type: state => state.mediaLibrary.type, // image, video, file\n        types: state => state.mediaLibrary.types,\n        strict: state => state.mediaLibrary.strict,\n        selected: state => state.mediaLibrary.selected,\n        indexToReplace: state => state.mediaLibrary.indexToReplace,\n\n        // showModal: state => state.mediaLibrary.showModal,\n\n        // show: state => state.mediaLibrary.showModal,\n      }),\n\n      // show: {\n      //     get () {\n      //         return this.$store.state.mediaLibrary.showModal;\n      //     },\n      //     set (value) {\n      //         // this.$store.dispatch(ACTIONS.TOGGLE_MEDIA_MODAL, value)\n      //     }\n      // },\n    },\n    watch: {\n      type: function () {\n        this.clearMediaItems()\n        this.gridLoaded = false\n      }\n    },\n    methods: {\n\n      // for ue-uploader\n      addMedia: function (media) {\n        const index = this.mediaItems.findIndex(function (item) {\n          return item.id === media.id\n        })\n\n        // Check of the media item exists i.e replacement\n        if (index > -1) {\n          for (const mediaRole in this.selected) {\n            this.selected[mediaRole].forEach((mediaCrop, index) => {\n              if (media.id === mediaCrop.id) {\n                const crops = []\n\n                for (const crop in mediaCrop.crops) {\n                  crops[crop] = {\n                    height: media.height === mediaCrop.height ? mediaCrop.crops[crop].height : media.height,\n                    name: crop,\n                    width: media.width === mediaCrop.width ? mediaCrop.crops[crop].width : media.width,\n                    x: media.width === mediaCrop.width ? mediaCrop.crops[crop].x : 0,\n                    y: media.height === mediaCrop.height ? mediaCrop.crops[crop].y : 0\n                  }\n                }\n\n                this.$store.commit(MEDIA_LIBRARY.UPDATE_MEDIAS, {\n                  index,\n                  media: {\n                    ...media,\n                    width: media.width === mediaCrop.width ? mediaCrop.width : media.width,\n                    height: media.height === mediaCrop.height ? mediaCrop.height : media.height,\n                    crops\n                  },\n                  mediaRole\n                })\n              }\n            })\n          }\n\n          this.$set(this.mediaItems, index, media)\n          this.selectedMedias.unshift(media)\n        } else {\n          // add media in first position of the available media\n          this.mediaItems.unshift(media)\n          this.$store.commit(MEDIA_LIBRARY.INCREMENT_MEDIA_TYPE_TOTAL, this.type)\n          // select it\n          this.updateSelectedMedias(media.id)\n        }\n      },\n      updateSelectedMedias: function (item, shift = false) {\n        const id = item.id\n        const alreadySelectedMedia = this.selectedMedias.filter(function (media) {\n          return media.id === id\n        })\n\n        // not already selected\n        if (alreadySelectedMedia.length === 0) {\n          if (this.max === 1) this.clearSelectedMedias()\n          if (this.selectedMedias.length >= this.max && this.max > 0) return\n\n          if (shift && this.selectedMedias.length > 0) {\n            const lastSelectedMedia = this.selectedMedias[this.selectedMedias.length - 1]\n            const lastSelectedMediaIndex = this.mediaItems.findIndex((media) => media.id === lastSelectedMedia.id)\n            const selectedMediaIndex = this.mediaItems.findIndex((media) => media.id === id)\n            if (selectedMediaIndex === -1 && lastSelectedMediaIndex === -1) return\n\n            let start = null\n            let end = null\n            if (lastSelectedMediaIndex < selectedMediaIndex) {\n              start = lastSelectedMediaIndex + 1\n              end = selectedMediaIndex + 1\n            } else {\n              start = selectedMediaIndex\n              end = lastSelectedMediaIndex\n            }\n\n            const selectedMedias = this.mediaItems.slice(start, end)\n\n            selectedMedias.forEach((media) => {\n              if (this.selectedMedias.length >= this.max && this.max > 0) return\n              const index = this.selectedMedias.findIndex((m) => m.id === media.id)\n              if (index === -1) {\n                this.selectedMedias.push(media)\n              }\n            })\n          } else {\n            const mediaToSelect = this.mediaItems.filter(function (media) {\n              return media.id === id\n            })\n\n            // Add one media to the selected media\n            if (mediaToSelect.length) this.selectedMedias.push(mediaToSelect[0])\n          }\n        } else {\n          // Remove one item from the selected media\n          this.selectedMedias = this.selectedMedias.filter(function (media) {\n            return media.id !== id\n          })\n        }\n      },\n      clearSelectedMedias: function () {\n        this.selectedMedias.splice(0)\n      },\n\n      // for ue-filter\n      clearFilters: function () {\n        const self = this\n        // reset tags\n        if (this.$refs.filter) this.$refs.filter.value = null\n        // reset unused field\n        if (this.$refs.unused) {\n          const input = this.$refs.unused.$el.querySelector('input')\n          input && input.checked && input.click()\n        }\n\n        this.$nextTick(function () {\n          self.submitFilter()\n        })\n      },\n      submitFilter: function (formData) {\n        const self = this\n        const el = this.$refs.list\n        // when changing filters, reset the page to 1\n        this.page = 1\n\n        this.clearMediaItems()\n        this.clearSelectedMedias()\n\n        if (el.scrollTop === 0) {\n          self.reloadGrid()\n          return\n        }\n\n        scrollToY({\n          el: el,\n          offset: 0,\n          easing: 'easeOut',\n          onComplete: function () {\n            self.reloadGrid()\n          }\n        })\n      },\n      clearMediaItems: function () {\n        this.mediaItems.splice(0)\n      },\n      clearSelectedMedias: function () {\n        this.selectedMedias.splice(0)\n      },\n      reloadGrid: function () {\n        this.loading = true\n\n        const form = this.$refs.form\n        const formdata = this.getFormData(form)\n\n        // if (this.selected[this.connector]) {\n        //   formdata.except = this.selected[this.connector].map((media) => {\n        //     return media.id\n        //   })\n        //   console.log(formdata.except)\n        // }\n\n        // see api/media-library for actual ajax\n        api.get(this.endpoint, formdata, (resp) => {\n          // add medias here\n          resp.data.items.forEach(item => {\n            if (!this.mediaItems.find(media => media.id === item.id)) {\n              this.mediaItems.push(item)\n            }\n          })\n          this.maxPage = resp.data.maxPage || 1\n          this.tags = resp.data.tags || []\n          this.$store.commit(MEDIA_LIBRARY.UPDATE_MEDIA_TYPE_TOTAL, { type: this.type, total: resp.data.total })\n          this.loading = false\n          this.listenScrollPosition()\n          this.gridLoaded = true\n        }, (error) => {\n          // this.$store.commit(NOTIFICATION.SET_NOTIF, {\n          //   message: error.data.message,\n          //   variant: 'error'\n          // })\n        })\n      },\n      updateType: function (newType) {\n        if (this.loading) return\n        if (this.strict) return\n        if (this.type === newType) return\n        \n        this.$store.commit(MEDIA_LIBRARY.UPDATE_MEDIA_TYPE, newType)\n        this.submitFilter()\n      },\n\n      getFormData: function (form) {\n        let data = FormDataAsObj(form)\n\n        if (data) data.page = this.page\n        else data = { page: this.page }\n\n        data.type = this.type\n\n        if (Array.isArray(data.unused) && data.unused.length) {\n          data.unused = data.unused[0]\n        }\n\n        return data\n      },\n\n    },\n\n    created() {\n      // __log(this)\n    }\n  }\n</script>\n\n<style lang=\"scss\" scoped>\n\n  $width_sidebar: (default: 290px, small: 250px, xsmall: 200px);\n\n  .medialibrary {\n    display: block;\n    width: 100%;\n    min-height: 100%;\n    padding: 0;\n    position: relative;\n  }\n\n  .medialibrary__header {\n    background: $color__border--light;\n    border-bottom: 1px solid $color__border;\n    padding: 0 20px;\n\n    @include breakpoint(small-) {\n      .secondarynav {\n        padding-bottom: 10px;\n      }\n    }\n  }\n\n  .medialibrary__frame {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    display: flex;\n    flex-flow: column nowrap;\n  }\n\n  .medialibrary__inner {\n    position: relative;\n    width: 100%;\n    overflow: hidden;\n    flex-grow: 1;\n  }\n\n  .medialibrary__footer {\n    position: absolute;\n    right: 0;\n    z-index: 76;\n    bottom: 0;\n    width: map-get($width_sidebar, default); // fixed arbitrary width\n    color: $color__text--light;\n    padding: 10px;\n    overflow: hidden;\n    background: $color__border--light;\n    border-top: 1px solid $color__border;\n\n    > button {\n      display: block;\n      width: 100%;\n    }\n\n    @include breakpoint(small) {\n      width: map-get($width_sidebar, small);\n    }\n\n    @include breakpoint(xsmall) {\n      width: map-get($width_sidebar, xsmall);\n    }\n\n    @media screen and (max-width: 550px) {\n      width: 100%;\n    }\n  }\n\n  .medialibrary__sidebar {\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    width: map-get($width_sidebar, default); // fixed arbitrary width\n    padding: 0 0 80px 0; // 80px so we have some room to display the tags dropdown menu under the field\n    z-index: 75;\n    background: $color__border--light;\n    overflow: auto;\n\n    @include breakpoint(small) {\n      width: map-get($width_sidebar, small);\n    }\n\n    @include breakpoint(xsmall) {\n      width: map-get($width_sidebar, xsmall);\n    }\n\n    @media screen and (max-width: 550px) {\n      display: none;\n    }\n  }\n\n  .medialibrary__list {\n    margin: 0;\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    overflow: auto;\n    padding: 10px;\n  }\n\n  .medialibrary__list-items {\n    position: relative;\n    display: block;\n    width: 100%;\n    min-height: 100%;\n  }\n\n  /* with a sidebar visible */\n  .medialibrary__list {\n    right: map-get($width_sidebar, default);\n\n    @include breakpoint(small) {\n      right: map-get($width_sidebar, small);\n    }\n\n    @include breakpoint(xsmall) {\n      right: map-get($width_sidebar, xsmall);\n    }\n\n    @media screen and (max-width: 550px) {\n      right: 0;\n    }\n  }\n</style>\n\n<style lang=\"scss\">\n\n  .medialibrary__filter-item {\n    .vselect {\n      min-width: 200px;\n    }\n  }\n\n  .medialibrary__filter-item.checkbox {\n    margin-top: 8px;\n    margin-right: 45px !important;\n  }\n\n  .medialibrary__header {\n    @include breakpoint(small-) {\n      .filter__inner {\n        flex-direction: column;\n      }\n\n      .filter__search, .filter__navigation {\n        padding-top: 10px;\n        display: flex;\n      }\n\n      .filter__search input {\n        flex-grow: 1;\n      }\n    }\n  }\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}