{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"Upload\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_icon = _resolveComponent(\"v-icon\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_spacer = _resolveComponent(\"v-spacer\");\n  const _component_v_divider = _resolveComponent(\"v-divider\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createTextVNode(\"import { renderSlot as _renderSlot, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveDynamicComponent as _resolveDynamicComponent, createBlock as _createBlock, withModifiers as _withModifiers } from \\\"vue\\\" const _hoisted_1 = { class: \\\"d-flex flex-column align-items-center\\\", style: {\\\"position\\\":\\\"sticky\\\",\\\"top\\\":\\\"100px\\\"} } export function render(_ctx, _cache, $props, $setup, $data, $options) { const _component_ue_btn = _resolveComponent(\\\"ue-btn\\\") const _component_v_col = _resolveComponent(\\\"v-col\\\") const _component_v_row = _resolveComponent(\\\"v-row\\\") const _component_v_container = _resolveComponent(\\\"v-container\\\") const _component_v_text_field = _resolveComponent(\\\"v-text-field\\\") const _component_v_form = _resolveComponent(\\\"v-form\\\") return (_openBlock(), _createBlock(_component_v_form, { modelValue: $data.valid, \\\"onUpdate:modelValue\\\": _cache[0] || (_cache[0] = $event => (($data.valid) = $event)), onSubmit: _withModifiers($options.submit, [\\\"prevent\\\"]), id: $data.id }, { default: _withCtx(() => [ _createVNode(_component_v_container, null, { default: _withCtx(() => [ _createVNode(_component_v_row, null, { default: _withCtx(() => [ _createVNode(_component_v_col, { cols: 12, sm: 12, md: 12, lg: 4, xl: 6, \\\"order-lg\\\": 1, \\\"order-xl\\\": 1, class: \\\"d-flex flex-column\\\", style: {\\\"position\\\":\\\"sticky\\\"} }, { default: _withCtx(() => [ _createElementVNode(\\\"div\\\", _hoisted_1, [ ($props.stickyButton && $props.hasSubmit) ? _renderSlot(_ctx.$slots, \\\"submitButton\\\", { key: 0, attrs: { }, on: { } }, () => [ _createVNode(_component_ue_btn, { form: $data.id, type: \\\"submit\\\", width: \\\"60%\\\", class: \\\"mb-6\\\" }, { default: _withCtx(() => [ _createTextVNode(_toDisplayString(_ctx.$tc('submit')), 1 /* TEXT */) ]), _: 1 /* STABLE */ }, 8 /* PROPS */, [\\\"form\\\"]) ]) : _createCommentVNode(\\\"v-if\\\", true), _createCommentVNode(\\\" \"), _createVNode(_component_v_card, {\n    class: \"\\\\\\\"mt-6\\\\\\\"\",\n    height: \"\\\\\\\"\\\\\\\"\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"\\\\n \"), _createElementVNode(\"div\", null, [_createTextVNode(\"\\\\n \"), _createVNode(_component_v_icon, null, {\n      default: _withCtx(() => [_createTextVNode(\"mdi-camera\")]),\n      _: 1 /* STABLE */\n    }), _createTextVNode(\"\\\\n \"), _hoisted_1, _createTextVNode(\"\\\\n \")]), _createTextVNode(\"\\\\n \")]),\n    _: 1 /* STABLE */\n  }), _createTextVNode(\" \\\") ]), _createCommentVNode(\\\" \"), _createVNode(_component_v_spacer), _createTextVNode(\" \\\") ]), _: 3 /* FORWARDED */ }), _createVNode(_component_v_col, { cols: 12, sm: 12, md: 12, lg: 8, xl: 6, \\\"order-lg\\\": 0, \\\"order-xl\\\": 0 }, { default: _withCtx(() => [ _renderSlot(_ctx.$slots, \\\"body\\\", { attrs: { // inputs: this.formInputs, // item: this.editedItem } }, () => [ _createVNode(_component_v_row, null, { default: _withCtx(() => [ (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.formInputs, (input, i) => { return (_openBlock(), _createBlock(_component_v_col, { key: i, index: i, cols: input.cols, sm: input.sm, md: input.md, lg: input.lg, xl: input.xl }, { default: _withCtx(() => [ (_openBlock(), _createBlock(_resolveDynamicComponent(`ue-input-${input.type}`), { modelValue: $options.model[input.name], \\\"onUpdate:modelValue\\\": $event => (($options.model[input.name]) = $event), attributes: input }, null, 8 /* PROPS */, [\\\"modelValue\\\", \\\"onUpdate:modelValue\\\", \\\"attributes\\\"])) ]), _: 2 /* DYNAMIC */ }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\\\"index\\\", \\\"cols\\\", \\\"sm\\\", \\\"md\\\", \\\"lg\\\", \\\"xl\\\"])) }), 128 /* KEYED_FRAGMENT */)) ]), _: 1 /* STABLE */ }) ]) ]), _: 3 /* FORWARDED */ }) ]), _: 3 /* FORWARDED */ }) ]), _: 3 /* FORWARDED */ }), _createCommentVNode(\\\" \"), _createVNode(_component_v_divider), _createTextVNode(\" \\\"), (!$props.stickyButton && $props.hasSubmit) ? (_openBlock(), _createBlock(_component_v_container, { key: 0 }, { default: _withCtx(() => [ _createCommentVNode(\\\" \"), _createVNode(_component_v_spacer), _createTextVNode(\" \\\"), _renderSlot(_ctx.$slots, \\\"submitButton\\\", { attrs: { }, on: { } }, () => [ _createVNode(_component_ue_btn, { form: $data.id, type: \\\"submit\\\", right: \\\"\\\" }, { default: _withCtx(() => [ _createTextVNode(_toDisplayString(_ctx.$tc('submit')), 1 /* TEXT */) ]), _: 1 /* STABLE */ }, 8 /* PROPS */, [\\\"form\\\"]) ]) ]), _: 3 /* FORWARDED */ })) : _createCommentVNode(\\\"v-if\\\", true), _createVNode(_component_v_container, null, { default: _withCtx(() => [ (_ctx.loading) ? (_openBlock(), _createBlock(_component_v_text_field, { key: 0, color: \\\"success\\\", loading: \\\"\\\", disabled: \\\"\\\" })) : _createCommentVNode(\\\"v-if\\\", true) ]), _: 1 /* STABLE */ }) ]), _: 3 /* FORWARDED */ }, 8 /* PROPS */, [\\\"modelValue\\\", \\\"onSubmit\\\", \\\"id\\\"])) }\")], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_createVNode","_component_v_card","class","height","_component_v_icon","_hoisted_1","_component_v_spacer","_component_v_divider"],"sources":["/var/www/crm_template/packages/oobook/crm-base/vue/src/js/components/Form.vue"],"sourcesContent":["<template>\n\n    <v-form v-model=\"valid\" @submit.prevent=\"submit\" :id=\"id\" >\n\n        <v-container>\n\n            <v-row>\n                <v-col\n                    :cols=\"12\"\n                    :sm=\"12\"\n                    :md=\"12\"\n                    :lg=\"4\"\n                    :xl=\"6\"\n\n                    :order-lg=\"1\"\n                    :order-xl=\"1\"\n                    class=\"d-flex flex-column\"\n                    style=\"position:sticky;\"\n                    \n                    >\n                        <div class=\"d-flex flex-column align-items-center\" style=\"position:sticky;top:100px;\">\n                            <slot \n                                v-if=\"stickyButton && hasSubmit\"\n                                name=\"submitButton\"\n                                :attrs=\"{\n                                    \n                                }\"\n                                :on=\"{\n                                    \n                                }\"\n                                >\n                                <ue-btn\n                                    :form=\"id\"\n                                    type=\"submit\"\n                                    width=\"60%\"\n                                    class=\"mb-6\"\n                                    >\n                                    {{ $tc('submit') }}\n                                </ue-btn>\n                            </slot>\n    \n                            <!-- <v-card class=\"mt-6\" height=\"\">\n                                    <div>\n                                        <v-icon>mdi-camera</v-icon>\n                                        <h3>Upload</h3>\n                                    </div>\n                            </v-card> -->\n                        </div>\n                        <!-- <v-spacer></v-spacer> -->\n\n                </v-col>\n\n                <v-col\n                    :cols=\"12\"\n                    :sm=\"12\"\n                    :md=\"12\"\n                    :lg=\"8\"\n                    :xl=\"6\"\n\n                    :order-lg=\"0\"\n                    :order-xl=\"0\"\n                    >\n    \n                    <slot \n                        name=\"body\"\n                        :attrs=\"{\n                            // inputs: this.formInputs,\n                            // item: this.editedItem\n                        }\"\n                        >\n                        <v-row>\n                            <v-col\n                                v-for=\"(input, i) in formInputs\"\n                                :key =\"i\"\n                                :index=\"i\"\n                                :cols='input.cols'\n                                :sm='input.sm'\n                                :md='input.md'\n                                :lg='input.lg'\n                                :xl='input.xl'\n                            >\n                                <component \n                                    :is=\"`ue-input-${input.type}`\" \n                                    v-model=\"model[input.name]\"    \n                                    :attributes=\"input\"\n                                    />                    \n                \n                            </v-col>\n                        </v-row>\n                    </slot>\n                </v-col>\n                \n            </v-row>\n\n\n        </v-container>\n\n        <!-- <v-divider></v-divider> -->\n\n        <v-container v-if=\"!stickyButton && hasSubmit\">\n                <!-- <v-spacer></v-spacer> -->\n                <slot \n                    name=\"submitButton\"\n                    :attrs=\"{\n                        \n                    }\"\n                    :on=\"{\n                        \n                    }\"\n                    >\n                    <ue-btn\n                        :form=\"id\"\n                        type=\"submit\"\n                        right\n                        >\n                        {{ $tc('submit') }}\n                    </ue-btn>\n                </slot>\n        </v-container>\n\n        <v-container>\n            <v-text-field\n                v-if=\"loading\"\n                color=\"success\"\n                loading\n                disabled\n            />\n        </v-container>\n\n    </v-form>\n\n</template>\n\n<script>\nimport { mapGetters, mapState } from 'vuex'\nimport { FORM } from '@/store/mutations/index'\nimport ACTIONS from '@/store/actions'\n\nexport default {\n    // name: \"ue-form\",\n    props: {\n        value: {\n            type: Object,\n            default() {\n                return {}\n            }\n        },\n        inputs: {\n            type: Array\n        },\n        async: {\n            type: Boolean,\n            default: true\n        },\n        hasSubmit: {\n            type: Boolean,\n            default: false\n        },\n        buttonFloat: {\n            type: String,\n            default: 'right'\n        },\n        buttonPosition: {\n            type: String,\n            default: 'bottom'\n        },\n        stickyButton: {\n            type: Boolean,\n            default: false\n        },\n    },\n    data() {\n        return {\n            id: Math.ceil(Math.random()*1000000) + \"-form\",\n            valid: false,\n        }\n    },\n\n    created() {\n        // Object.fromEntries(this.inputs[1].extras.map(v => ([v,true])))\n        // console.log(this.inputs[2])\n    },\n\n    computed: {\n        issetModel() {\n            return Object.keys(this.value).length > 0;\n        },\n        model: {\n            get () {\n                return this.issetModel ? this.value : this.$store.state.form.editedItem;\n            },\n            set (value) {\n                // __log('Form.vue->model set', value)\n                // this.$store.commit(FORM.SET_EDITED_ITEM, value);\n\n            }\n        },\n        formInputs: {\n            get () {\n                // __log(this.inputs ?? this.$store.state.form.inputs ?? [])\n                return this.inputs ?? this.$store.state.form.inputs ?? [];\n            },\n            set (value) {\n                __log('form->inputs set', value)\n                // this.$store.commit(FORM.SET_EDITED_ITEM, value);\n\n            }\n        },\n        ...mapState({\n            loading: state => state.form.loading,\n            errors: state => state.form.errors,\n        }),\n\n        ...mapGetters([\n            'defaultItem'\n        ])\n    },\n    \n    methods: {\n        // update(key, value) {\n        //     __log('form->update', key, value);\n        //     // this.$emit('input', { ...this.value, [key]: value })\n        // },\n\n        saveForm(callback=null, errorCallback=null){\n            __log(\n                this.model,\n            );\n            return;\n            let fields = {};\n\n            Object.keys(this.defaultItem).forEach( (key,i) => {\n                fields[key] = (this.$store.state.form.editedItem[key]==null || this.defaultItem[key] != '') \n                    ? this.defaultItem[key]\n                    : this.$store.state.form.editedItem[key]\n            });\n\n            if(!!this.$store.state.form.editedItem.id)\n                fields.id = this.$store.state.form.editedItem.id;\n\n            this.$store.commit(FORM.SET_EDITED_ITEM, fields);\n\n            this.$store.dispatch(ACTIONS.SAVE_FORM, {item:null, callback:callback, errorCallback:errorCallback})\n        },\n\n        submit () {\n            if(this.async){\n                this.saveForm();\n            }\n\n            // this.$v.$touch()\n        },\n    }\n\n\n}\n</script>\n\n<style>\n\n</style>"],"mappings":";gCAyCuOA,mBAAA,CAAe,YAAX,QAAM;;;;;;;mtEAAvM,GAAAC,YAAA,CAA+RC,iBAAA;IAAvRC,KAAK,EAAC,cAAQ;IAACC,MAAM,EAAC;;sBAAK,MAAsC,C,iBAAtC,MAAsC,GAAAJ,mBAAA,CAA+K,c,iBAA1K,MAA0C,GAAAC,YAAA,CAA2BI,iBAAA;wBAAnB,MAAU,C,iBAAV,YAAU,E;;yBAAS,MAA0C,GAAAC,UAAe,E,iBAAA,MAAsC,E,oBAAM,MAA8B,E;;uBAAS,kCAOjS,GAAAL,YAAA,CAAqBM,mBAAA,G,iBAAA,8rCAiDjC,GAAAN,YAAA,CAAuBO,oBAAA,G,iBAAA,wKAGf,GAAAP,YAAA,CAAqBM,mBAAA,G,iBAAA,suB"},"metadata":{},"sourceType":"module","externalDependencies":[]}