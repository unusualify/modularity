{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, resolveDirective as _resolveDirective, withDirectives as _withDirectives, toHandlers as _toHandlers, mergeProps as _mergeProps, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nvar _hoisted_1 = {\n  id: \"app\"\n};\nvar _hoisted_2 = {\n  \"data-vv-scope\": \"form1\"\n};\nvar _hoisted_3 = {\n  \"data-vv-scope\": \"form2\"\n};\nvar _hoisted_4 = {\n  \"data-vv-scope\": \"form3\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_v_stepper_step = _resolveComponent(\"v-stepper-step\");\n  var _component_v_divider = _resolveComponent(\"v-divider\");\n  var _component_v_stepper_header = _resolveComponent(\"v-stepper-header\");\n  var _component_v_alert = _resolveComponent(\"v-alert\");\n  var _component_v_col = _resolveComponent(\"v-col\");\n  var _component_v_row = _resolveComponent(\"v-row\");\n  var _component_v_text_field = _resolveComponent(\"v-text-field\");\n  var _component_v_date_picker = _resolveComponent(\"v-date-picker\");\n  var _component_v_menu = _resolveComponent(\"v-menu\");\n  var _component_v_select = _resolveComponent(\"v-select\");\n  var _component_v_icon = _resolveComponent(\"v-icon\");\n  var _component_v_btn = _resolveComponent(\"v-btn\");\n  var _component_v_stepper_content = _resolveComponent(\"v-stepper-content\");\n  var _component_v_stepper_items = _resolveComponent(\"v-stepper-items\");\n  var _component_v_stepper = _resolveComponent(\"v-stepper\");\n  var _directive_validate = _resolveDirective(\"validate\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [!$data.isStepHidden ? (_openBlock(), _createBlock(_component_v_stepper, {\n    key: 0,\n    modelValue: $data.e1,\n    \"onUpdate:modelValue\": _cache[19] || (_cache[19] = function ($event) {\n      return $data.e1 = $event;\n    })\n  }, {\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_v_stepper_header, null, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_v_stepper_step, {\n            complete: $data.e1 > 1,\n            step: \"1\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createTextVNode(\"Company Information\")];\n            }),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"complete\"]), _createVNode(_component_v_divider), _createVNode(_component_v_stepper_step, {\n            complete: $data.e1 > 2,\n            step: \"2\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createTextVNode(\"Directors\")];\n            }),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"complete\"]), _createVNode(_component_v_divider), _createVNode(_component_v_stepper_step, {\n            step: \"3\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createTextVNode(\"Shareholders\")];\n            }),\n            _: 1 /* STABLE */\n          })];\n        }),\n\n        _: 1 /* STABLE */\n      }), _createVNode(_component_v_stepper_items, null, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_v_stepper_content, {\n            step: \"1\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createElementVNode(\"form\", _hoisted_2, [_createVNode(_component_v_row, null, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_v_col, null, {\n                    \"default\": _withCtx(function () {\n                      return [_createVNode(_component_v_alert, {\n                        icon: \"account_circle\",\n                        type: \"info\",\n                        text: \"\"\n                      }, {\n                        \"default\": _withCtx(function () {\n                          return [_createTextVNode(\" CONTACT INFO \")];\n                        }),\n                        _: 1 /* STABLE */\n                      })];\n                    }),\n\n                    _: 1 /* STABLE */\n                  })];\n                }),\n\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_row, null, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_v_col, {\n                    cols: \"3\"\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_withDirectives(_createVNode(_component_v_text_field, {\n                        modelValue: $data.Contact_FirstName,\n                        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n                          return $data.Contact_FirstName = $event;\n                        }),\n                        label: \"First Name\",\n                        \"error-messages\": _ctx.errors.collect('Contact_FirstName'),\n                        \"data-vv-name\": \"Contact_FirstName\",\n                        required: \"\",\n                        \"data-vv-scope\": \"form1\",\n                        \"data-vv-as\": \"First Name\"\n                      }, null, 8 /* PROPS */, [\"modelValue\", \"error-messages\"]), [[_directive_validate, 'required']])];\n                    }),\n                    _: 1 /* STABLE */\n                  }), _createVNode(_component_v_col, {\n                    cols: \"3\"\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_withDirectives(_createVNode(_component_v_text_field, {\n                        modelValue: $data.Contact_LastName,\n                        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n                          return $data.Contact_LastName = $event;\n                        }),\n                        label: \"Last Name\",\n                        \"error-messages\": _ctx.errors.collect('Contact_LastName'),\n                        \"data-vv-name\": \"Contact_LastName\",\n                        required: \"\",\n                        \"data-vv-scope\": \"form1\",\n                        \"data-vv-as\": \"Last Name\"\n                      }, null, 8 /* PROPS */, [\"modelValue\", \"error-messages\"]), [[_directive_validate, 'required']])];\n                    }),\n                    _: 1 /* STABLE */\n                  })];\n                }),\n\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_row, null, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_v_col, {\n                    cols: \"3\"\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_withDirectives(_createVNode(_component_v_text_field, {\n                        modelValue: $data.Contact_Email,\n                        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n                          return $data.Contact_Email = $event;\n                        }),\n                        label: \"Email\",\n                        \"error-messages\": _ctx.errors.collect('Contact_Email'),\n                        \"data-vv-name\": \"Contact_Email\",\n                        required: \"\",\n                        \"data-vv-scope\": \"form1\",\n                        \"data-vv-as\": \"Contact Email\"\n                      }, null, 8 /* PROPS */, [\"modelValue\", \"error-messages\"]), [[_directive_validate, 'required|email']])];\n                    }),\n                    _: 1 /* STABLE */\n                  }), _createVNode(_component_v_col, {\n                    cols: \"3\"\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_withDirectives(_createVNode(_component_v_text_field, {\n                        modelValue: $data.Contact_Phone,\n                        \"onUpdate:modelValue\": _cache[3] || (_cache[3] = function ($event) {\n                          return $data.Contact_Phone = $event;\n                        }),\n                        label: \"Contact Number\",\n                        \"error-messages\": _ctx.errors.collect('Contact_Phone'),\n                        \"data-vv-name\": \"Contact_Phone\",\n                        required: \"\",\n                        \"data-vv-scope\": \"form1\",\n                        \"data-vv-as\": \"Contact Phone\"\n                      }, null, 8 /* PROPS */, [\"modelValue\", \"error-messages\"]), [[_directive_validate, 'required']])];\n                    }),\n                    _: 1 /* STABLE */\n                  })];\n                }),\n\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_row, null, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_v_col, null, {\n                    \"default\": _withCtx(function () {\n                      return [_createVNode(_component_v_alert, {\n                        icon: \"card_travel\",\n                        type: \"info\",\n                        text: \"\"\n                      }, {\n                        \"default\": _withCtx(function () {\n                          return [_createTextVNode(\" COMPANY INFO \")];\n                        }),\n                        _: 1 /* STABLE */\n                      })];\n                    }),\n\n                    _: 1 /* STABLE */\n                  })];\n                }),\n\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_row, null, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_v_col, {\n                    cols: \"3\"\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_withDirectives(_createVNode(_component_v_text_field, {\n                        modelValue: $data.Proposed_Company_Name_I,\n                        \"onUpdate:modelValue\": _cache[4] || (_cache[4] = function ($event) {\n                          return $data.Proposed_Company_Name_I = $event;\n                        }),\n                        label: \"Proposed Company Name\",\n                        \"error-messages\": _ctx.errors.collect('Proposed_Company_Name_I'),\n                        \"data-vv-name\": \"Proposed_Company_Name_I\",\n                        required: \"\",\n                        \"data-vv-scope\": \"form1\",\n                        \"data-vv-as\": \"Proposed Company Name\"\n                      }, null, 8 /* PROPS */, [\"modelValue\", \"error-messages\"]), [[_directive_validate, 'required']])];\n                    }),\n                    _: 1 /* STABLE */\n                  }), _createVNode(_component_v_col, {\n                    cols: \"3\"\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_createVNode(_component_v_menu, {\n                        modelValue: $data.menu2,\n                        \"onUpdate:modelValue\": _cache[8] || (_cache[8] = function ($event) {\n                          return $data.menu2 = $event;\n                        }),\n                        \"close-on-content-click\": false,\n                        \"nudge-right\": 40,\n                        transition: \"scale-transition\",\n                        \"offset-y\": \"\",\n                        \"min-width\": \"290px\"\n                      }, {\n                        activator: _withCtx(function (_ref) {\n                          var on = _ref.on;\n                          return [_withDirectives(_createVNode(_component_v_text_field, _mergeProps({\n                            modelValue: $data.Financial_Year_End,\n                            \"onUpdate:modelValue\": _cache[5] || (_cache[5] = function ($event) {\n                              return $data.Financial_Year_End = $event;\n                            }),\n                            label: \"Financial Year End\",\n                            \"prepend-icon\": \"event\",\n                            readonly: \"\"\n                          }, _toHandlers(on), {\n                            \"error-messages\": _ctx.errors.collect('Financial_Year_End'),\n                            \"data-vv-name\": \"Financial_Year_End\",\n                            required: \"\",\n                            \"data-vv-scope\": \"form1\",\n                            value: $options.computedDateFormattedMomentjs,\n                            \"data-vv-as\": \"Financial Year End\"\n                          }), null, 16 /* FULL_PROPS */, [\"modelValue\", \"error-messages\", \"value\"]), [[_directive_validate, 'required']])];\n                        }),\n                        \"default\": _withCtx(function () {\n                          return [_createVNode(_component_v_date_picker, {\n                            modelValue: $data.Financial_Year_End,\n                            \"onUpdate:modelValue\": _cache[6] || (_cache[6] = function ($event) {\n                              return $data.Financial_Year_End = $event;\n                            }),\n                            onInput: _cache[7] || (_cache[7] = function ($event) {\n                              return $data.menu2 = false;\n                            })\n                          }, null, 8 /* PROPS */, [\"modelValue\"])];\n                        }),\n                        _: 1 /* STABLE */\n                      }, 8 /* PROPS */, [\"modelValue\"])];\n                    }),\n                    _: 1 /* STABLE */\n                  })];\n                }),\n\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_row, null, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_v_col, {\n                    cols: \"3\"\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_withDirectives(_createVNode(_component_v_text_field, {\n                        modelValue: $data.Principal_Business_Activity_I,\n                        \"onUpdate:modelValue\": _cache[9] || (_cache[9] = function ($event) {\n                          return $data.Principal_Business_Activity_I = $event;\n                        }),\n                        label: \"Principal Business Activity I\",\n                        \"error-messages\": _ctx.errors.collect('Principal_Business_Activity_I'),\n                        \"data-vv-name\": \"Principal_Business_Activity_I\",\n                        required: \"\",\n                        \"data-vv-scope\": \"form2\",\n                        \"data-vv-as\": \"Principal Business Activity I\"\n                      }, null, 8 /* PROPS */, [\"modelValue\", \"error-messages\"]), [[_directive_validate, 'required']])];\n                    }),\n                    _: 1 /* STABLE */\n                  }), _createVNode(_component_v_col, {\n                    cols: \"3\"\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_withDirectives(_createVNode(_component_v_text_field, {\n                        modelValue: $data.Principal_Business_Activity_II,\n                        \"onUpdate:modelValue\": _cache[10] || (_cache[10] = function ($event) {\n                          return $data.Principal_Business_Activity_II = $event;\n                        }),\n                        label: \"Principal Business Activity II\",\n                        \"error-messages\": _ctx.errors.collect('Principal_Business_Activity_II'),\n                        \"data-vv-name\": \"Principal_Business_Activity_II\",\n                        required: \"\",\n                        \"data-vv-scope\": \"form2\",\n                        \"data-vv-as\": \"Principal Business Activity II\"\n                      }, null, 8 /* PROPS */, [\"modelValue\", \"error-messages\"]), [[_directive_validate, 'required']])];\n                    }),\n                    _: 1 /* STABLE */\n                  })];\n                }),\n\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_row, null, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_v_col, {\n                    cols: \"3\"\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_withDirectives(_createVNode(_component_v_select, {\n                        items: $data.currency_options,\n                        modelValue: $data.Paid_Up_Capital_Currency,\n                        \"onUpdate:modelValue\": _cache[11] || (_cache[11] = function ($event) {\n                          return $data.Paid_Up_Capital_Currency = $event;\n                        }),\n                        label: \"Paid Up Capital Currency\",\n                        \"error-messages\": _ctx.errors.collect('Paid_Up_Capital_Currency'),\n                        \"data-vv-name\": \"Paid_Up_Capital_Currency\",\n                        required: \"\",\n                        \"data-vv-scope\": \"form1\",\n                        \"data-vv-as\": \"Paid Up Capital Currency\"\n                      }, null, 8 /* PROPS */, [\"items\", \"modelValue\", \"error-messages\"]), [[_directive_validate, 'required']])];\n                    }),\n                    _: 1 /* STABLE */\n                  }), _createVNode(_component_v_col, {\n                    cols: \"3\"\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_withDirectives(_createVNode(_component_v_text_field, {\n                        modelValue: $data.Paid_Up_Capital_Amount,\n                        \"onUpdate:modelValue\": _cache[12] || (_cache[12] = function ($event) {\n                          return $data.Paid_Up_Capital_Amount = $event;\n                        }),\n                        label: \"Paid Up Capital Amount\",\n                        \"error-messages\": _ctx.errors.collect('Paid_Up_Capital_Amount'),\n                        \"data-vv-name\": \"Paid_Up_Capital_Amount\",\n                        required: \"\",\n                        \"data-vv-scope\": \"form1\",\n                        \"data-vv-as\": \"Paid Up Capital Amount\"\n                      }, null, 8 /* PROPS */, [\"modelValue\", \"error-messages\"]), [[_directive_validate, 'required']])];\n                    }),\n                    _: 1 /* STABLE */\n                  })];\n                }),\n\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_row, null, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_v_col, {\n                    cols: \"3\"\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_withDirectives(_createVNode(_component_v_text_field, {\n                        modelValue: $data.Total_Number_of_Shares,\n                        \"onUpdate:modelValue\": _cache[13] || (_cache[13] = function ($event) {\n                          return $data.Total_Number_of_Shares = $event;\n                        }),\n                        label: \"Total Number of Shares\",\n                        \"error-messages\": _ctx.errors.collect('Total_Number_of_Shares'),\n                        \"data-vv-name\": \"Total_Number_of_Shares\",\n                        required: \"\",\n                        \"data-vv-scope\": \"form2\",\n                        \"data-vv-as\": \"Total Number of Shares\"\n                      }, null, 8 /* PROPS */, [\"modelValue\", \"error-messages\"]), [[_directive_validate, 'required']])];\n                    }),\n                    _: 1 /* STABLE */\n                  }), _createVNode(_component_v_col, {\n                    cols: \"3\"\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_withDirectives(_createVNode(_component_v_text_field, {\n                        modelValue: $data.Registered_Office_Address,\n                        \"onUpdate:modelValue\": _cache[14] || (_cache[14] = function ($event) {\n                          return $data.Registered_Office_Address = $event;\n                        }),\n                        label: \"Registered Office Address\",\n                        \"error-messages\": _ctx.errors.collect('Registered_Office_Address'),\n                        \"data-vv-name\": \"Registered_Office_Address\",\n                        required: \"\",\n                        \"data-vv-scope\": \"form2\",\n                        \"data-vv-as\": \"Registered Office Address\"\n                      }, null, 8 /* PROPS */, [\"modelValue\", \"error-messages\"]), [[_directive_validate, 'required']])];\n                    }),\n                    _: 1 /* STABLE */\n                  })];\n                }),\n\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_btn, {\n                color: \"primary\",\n                onClick: _cache[15] || (_cache[15] = function ($event) {\n                  return $options.stepContinue('form1');\n                }),\n                disabled: _ctx.errors.any()\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_v_icon, {\n                    left: \"\"\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_createTextVNode(\"skip_next\")];\n                    }),\n                    _: 1 /* STABLE */\n                  }), _createTextVNode(\" Continue \")];\n                }),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"disabled\"])])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_v_stepper_content, {\n            step: \"2\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createElementVNode(\"form\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.directors, function (director, index) {\n                return _openBlock(), _createElementBlock(\"div\", {\n                  key: index\n                }, [_createVNode(_component_v_row, null, {\n                  \"default\": _withCtx(function () {\n                    return [_createVNode(_component_v_col, null, {\n                      \"default\": _withCtx(function () {\n                        return [_createVNode(_component_v_alert, {\n                          icon: \"person\",\n                          type: \"info\",\n                          text: \"\"\n                        }, {\n                          \"default\": _withCtx(function () {\n                            return [_createTextVNode(\" Director \" + _toDisplayString(index + 1), 1 /* TEXT */)];\n                          }),\n\n                          _: 2 /* DYNAMIC */\n                        }, 1024 /* DYNAMIC_SLOTS */)];\n                      }),\n\n                      _: 2 /* DYNAMIC */\n                    }, 1024 /* DYNAMIC_SLOTS */)];\n                  }),\n\n                  _: 2 /* DYNAMIC */\n                }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_v_row, null, {\n                  \"default\": _withCtx(function () {\n                    return [_createVNode(_component_v_col, {\n                      cols: \"3\"\n                    }, {\n                      \"default\": _withCtx(function () {\n                        return [_withDirectives(_createVNode(_component_v_text_field, {\n                          modelValue: $data.directors[index].Name,\n                          \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n                            return $data.directors[index].Name = $event;\n                          },\n                          label: \"Name\",\n                          \"error-messages\": _ctx.errors.collect(\"directors_\".concat(index, \"_Name\")),\n                          \"data-vv-name\": \"directors_\".concat(index, \"_Name\"),\n                          \"data-vv-as\": \"Name\",\n                          required: \"\",\n                          \"data-vv-scope\": \"form2\",\n                          name: \"directors[][Name]\"\n                        }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"error-messages\", \"data-vv-name\"]), [[_directive_validate, 'required']])];\n                      }),\n                      _: 2 /* DYNAMIC */\n                    }, 1024 /* DYNAMIC_SLOTS */), $data.isCorpShow ? (_openBlock(), _createBlock(_component_v_col, {\n                      key: 0,\n                      cols: \"3\"\n                    }, {\n                      \"default\": _withCtx(function () {\n                        return [_withDirectives(_createVNode(_component_v_text_field, {\n                          modelValue: $data.directors[index].ID,\n                          \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n                            return $data.directors[index].ID = $event;\n                          },\n                          label: \"Registration Number\",\n                          \"error-messages\": _ctx.errors.collect(\"directors_\".concat(index, \"_ID\")),\n                          \"data-vv-as\": \"Registration Number\",\n                          \"data-vv-name\": \"directors_\".concat(index, \"_ID\"),\n                          required: \"\",\n                          \"data-vv-scope\": \"form2\",\n                          name: \"directors[][ID]\"\n                        }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"error-messages\", \"data-vv-name\"]), [[_directive_validate, 'required']])];\n                      }),\n                      _: 2 /* DYNAMIC */\n                    }, 1024 /* DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true), _createVNode(_component_v_col, {\n                      cols: \"3\"\n                    }, {\n                      \"default\": _withCtx(function () {\n                        return [_withDirectives(_createVNode(_component_v_text_field, {\n                          modelValue: $data.directors[index].ID,\n                          \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n                            return $data.directors[index].ID = $event;\n                          },\n                          label: \"ID\",\n                          \"error-messages\": _ctx.errors.collect(\"directors_\".concat(index, \"_ID\")),\n                          \"data-vv-as\": \"ID\",\n                          \"data-vv-name\": \"directors_\".concat(index, \"_ID\"),\n                          required: \"\",\n                          \"data-vv-scope\": \"form2\",\n                          name: \"directors[][ID]\"\n                        }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"error-messages\", \"data-vv-name\"]), [[_directive_validate, 'required']])];\n                      }),\n                      _: 2 /* DYNAMIC */\n                    }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_v_col, {\n                      cols: \"3\"\n                    }, {\n                      \"default\": _withCtx(function () {\n                        return [_createVNode(_component_v_menu, {\n                          modelValue: $data.directors[index].Menu,\n                          \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n                            return $data.directors[index].Menu = $event;\n                          },\n                          \"close-on-content-click\": false,\n                          \"nudge-right\": 40,\n                          transition: \"scale-transition\",\n                          \"offset-y\": \"\",\n                          \"min-width\": \"290px\"\n                        }, {\n                          activator: _withCtx(function (_ref2) {\n                            var on = _ref2.on;\n                            return [_withDirectives(_createVNode(_component_v_text_field, _mergeProps({\n                              modelValue: $data.directors[index].DOB,\n                              \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n                                return $data.directors[index].DOB = $event;\n                              },\n                              label: \"DOB\",\n                              \"prepend-icon\": \"event\",\n                              readonly: \"\"\n                            }, _toHandlers(on), {\n                              \"error-messages\": _ctx.errors.collect(\"directors_\".concat(index, \"_DOB\")),\n                              \"data-vv-name\": \"directors_\".concat(index, \"_DOB\"),\n                              \"data-vv-as\": \"DOB\",\n                              required: \"\",\n                              \"data-vv-scope\": \"form2\"\n                            }), null, 16 /* FULL_PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"error-messages\", \"data-vv-name\"]), [[_directive_validate, 'required']])];\n                          }),\n                          \"default\": _withCtx(function () {\n                            return [_createVNode(_component_v_date_picker, {\n                              modelValue: $data.directors[index].DOB,\n                              \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n                                return $data.directors[index].DOB = $event;\n                              },\n                              onInput: function onInput($event) {\n                                return $data.directors[index].Menu = false;\n                              }\n                            }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"onInput\"])];\n                          }),\n                          _: 2 /* DYNAMIC */\n                        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"modelValue\", \"onUpdate:modelValue\"])];\n                      }),\n                      _: 2 /* DYNAMIC */\n                    }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_v_col, {\n                      cols: \"3\"\n                    }, {\n                      \"default\": _withCtx(function () {\n                        return [_withDirectives(_createVNode(_component_v_select, {\n                          items: $data.nationality_options,\n                          name: \"directors[][Nationality]\",\n                          modelValue: $data.directors[index].Nationality,\n                          \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n                            return $data.directors[index].Nationality = $event;\n                          },\n                          label: \"Nationality\",\n                          \"error-messages\": _ctx.errors.collect(\"directors_\".concat(index, \"_Nationality\")),\n                          \"data-vv-name\": \"directors_\".concat(index, \"_Nationality\"),\n                          \"data-vv-as\": \"Nationality\",\n                          \"data-vv-scope\": \"form2\"\n                        }, null, 8 /* PROPS */, [\"items\", \"modelValue\", \"onUpdate:modelValue\", \"error-messages\", \"data-vv-name\"]), [[_directive_validate, 'required']])];\n                      }),\n                      _: 2 /* DYNAMIC */\n                    }, 1024 /* DYNAMIC_SLOTS */)];\n                  }),\n\n                  _: 2 /* DYNAMIC */\n                }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_v_row, null, {\n                  \"default\": _withCtx(function () {\n                    return [_createVNode(_component_v_col, {\n                      cols: \"3\"\n                    }, {\n                      \"default\": _withCtx(function () {\n                        return [_withDirectives(_createVNode(_component_v_text_field, {\n                          modelValue: $data.directors[index].Email,\n                          \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n                            return $data.directors[index].Email = $event;\n                          },\n                          label: \"Email\",\n                          \"error-messages\": _ctx.errors.collect(\"directors_\".concat(index, \"_Email\")),\n                          \"data-vv-name\": \"directors_\".concat(index, \"_Email\"),\n                          \"data-vv-as\": \"Email\",\n                          required: \"\",\n                          \"data-vv-scope\": \"form2\",\n                          name: \"directors[][Email]\"\n                        }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"error-messages\", \"data-vv-name\"]), [[_directive_validate, 'required|email']])];\n                      }),\n                      _: 2 /* DYNAMIC */\n                    }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_v_col, {\n                      cols: \"3\"\n                    }, {\n                      \"default\": _withCtx(function () {\n                        return [_withDirectives(_createVNode(_component_v_text_field, {\n                          modelValue: $data.directors[index].Phone,\n                          \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n                            return $data.directors[index].Phone = $event;\n                          },\n                          label: \"Contact Number\",\n                          \"error-messages\": _ctx.errors.collect(\"directors_\".concat(index, \"_Phone\")),\n                          \"data-vv-name\": \"directors_\".concat(index, \"_Phone\"),\n                          \"data-vv-as\": \"Contact Number\",\n                          required: \"\",\n                          \"data-vv-scope\": \"form2\",\n                          name: \"directors[][Phone]\"\n                        }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"error-messages\", \"data-vv-name\"]), [[_directive_validate, 'required']])];\n                      }),\n                      _: 2 /* DYNAMIC */\n                    }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_v_col, {\n                      cols: \"6\"\n                    }, {\n                      \"default\": _withCtx(function () {\n                        return [_withDirectives(_createVNode(_component_v_text_field, {\n                          modelValue: $data.directors[index].Address,\n                          \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n                            return $data.directors[index].Address = $event;\n                          },\n                          label: \"Address\",\n                          \"error-messages\": _ctx.errors.collect(\"directors_\".concat(index, \"_Address\")),\n                          \"data-vv-name\": \"directors_\".concat(index, \"_Address\"),\n                          \"data-vv-as\": \"Address\",\n                          required: \"\",\n                          \"data-vv-scope\": \"form2\",\n                          name: \"directors[][Address]\"\n                        }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"error-messages\", \"data-vv-name\"]), [[_directive_validate, 'required']])];\n                      }),\n                      _: 2 /* DYNAMIC */\n                    }, 1024 /* DYNAMIC_SLOTS */)];\n                  }),\n\n                  _: 2 /* DYNAMIC */\n                }, 1024 /* DYNAMIC_SLOTS */), index != 0 ? (_openBlock(), _createBlock(_component_v_row, {\n                  key: 0\n                }, {\n                  \"default\": _withCtx(function () {\n                    return [_createVNode(_component_v_col, null, {\n                      \"default\": _withCtx(function () {\n                        return [_createVNode(_component_v_btn, {\n                          onClick: function onClick($event) {\n                            return $options.removeDirector(index);\n                          }\n                        }, {\n                          \"default\": _withCtx(function () {\n                            return [_createTextVNode(\"Remove\")];\n                          }),\n                          _: 2 /* DYNAMIC */\n                        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])];\n                      }),\n                      _: 2 /* DYNAMIC */\n                    }, 1024 /* DYNAMIC_SLOTS */)];\n                  }),\n\n                  _: 2 /* DYNAMIC */\n                }, 1024 /* DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true)]);\n              }), 128 /* KEYED_FRAGMENT */)), _createVNode(_component_v_btn, {\n                color: \"primary\",\n                onClick: _cache[16] || (_cache[16] = function ($event) {\n                  return $options.stepContinue('form2');\n                }),\n                disabled: _ctx.errors.any()\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createCommentVNode(\" <v-btn\\n                                color=\\\"primary\\\"\\n                                @click=\\\"goNextStep()\\\"\\n                                > \"), _createVNode(_component_v_icon, {\n                    left: \"\"\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_createTextVNode(\"skip_next\")];\n                    }),\n                    _: 1 /* STABLE */\n                  }), _createTextVNode(\" Continue \")];\n                }),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"disabled\"]), _createVNode(_component_v_btn, {\n                onClick: $options.addNewDirector\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_v_icon, {\n                    left: \"\"\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_createTextVNode(\" person_add\")];\n                    }),\n                    _: 1 /* STABLE */\n                  }), _createTextVNode(\" Add \")];\n                }),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_v_btn, {\n                text: \"\",\n                onClick: _cache[17] || (_cache[17] = function ($event) {\n                  return $options.goBack();\n                })\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_v_icon, {\n                    left: \"\"\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_createTextVNode(\"skip_previous\")];\n                    }),\n                    _: 1 /* STABLE */\n                  }), _createTextVNode(\" Back \")];\n                }),\n                _: 1 /* STABLE */\n              })])];\n            }),\n\n            _: 1 /* STABLE */\n          }), _createVNode(_component_v_stepper_content, {\n            step: \"3\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createElementVNode(\"form\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.shareholders, function (shareholder, index) {\n                return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_v_row, null, {\n                  \"default\": _withCtx(function () {\n                    return [_createVNode(_component_v_col, null, {\n                      \"default\": _withCtx(function () {\n                        return [_createVNode(_component_v_alert, {\n                          icon: \"person\",\n                          type: \"info\",\n                          text: \"\"\n                        }, {\n                          \"default\": _withCtx(function () {\n                            return [_createTextVNode(\" SHAREHOLDER \" + _toDisplayString(index + 1), 1 /* TEXT */)];\n                          }),\n\n                          _: 2 /* DYNAMIC */\n                        }, 1024 /* DYNAMIC_SLOTS */)];\n                      }),\n\n                      _: 2 /* DYNAMIC */\n                    }, 1024 /* DYNAMIC_SLOTS */)];\n                  }),\n\n                  _: 2 /* DYNAMIC */\n                }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_v_row, null, {\n                  \"default\": _withCtx(function () {\n                    return [_createVNode(_component_v_col, {\n                      cols: \"3\"\n                    }, {\n                      \"default\": _withCtx(function () {\n                        return [_withDirectives(_createVNode(_component_v_select, {\n                          items: $data.shareholder_options,\n                          name: \"shareholders[][Type]\",\n                          modelValue: $data.shareholders[index].Type,\n                          \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n                            return $data.shareholders[index].Type = $event;\n                          },\n                          label: \"Type\",\n                          \"error-messages\": _ctx.errors.collect(\"shareholders_\".concat(index, \"_Type\")),\n                          \"data-vv-name\": \"shareholders_\".concat(index, \"_Type\"),\n                          \"data-vv-as\": \"Type\",\n                          \"data-vv-scope\": \"form3\",\n                          onInput: function onInput($event) {\n                            return $options.onValueChange($event, $data.shareholders[index].ID);\n                          },\n                          required: \"\"\n                        }, null, 8 /* PROPS */, [\"items\", \"modelValue\", \"onUpdate:modelValue\", \"error-messages\", \"data-vv-name\", \"onInput\"]), [[_directive_validate, 'required']])];\n                      }),\n                      _: 2 /* DYNAMIC */\n                    }, 1024 /* DYNAMIC_SLOTS */)];\n                  }),\n\n                  _: 2 /* DYNAMIC */\n                }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_v_row, null, {\n                  \"default\": _withCtx(function () {\n                    return [_createVNode(_component_v_col, {\n                      cols: \"3\"\n                    }, {\n                      \"default\": _withCtx(function () {\n                        return [_withDirectives(_createVNode(_component_v_text_field, {\n                          modelValue: $data.shareholders[index].Name,\n                          \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n                            return $data.shareholders[index].Name = $event;\n                          },\n                          label: \"Name\",\n                          \"error-messages\": _ctx.errors.collect(\"shareholders_\".concat(index, \"_Name\")),\n                          \"data-vv-name\": \"shareholders_\".concat(index, \"_Name\"),\n                          \"data-vv-as\": \"Name\",\n                          required: \"\",\n                          \"data-vv-scope\": \"form3\",\n                          name: \"shareholders[][Name]\"\n                        }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"error-messages\", \"data-vv-name\"]), [[_directive_validate, 'required']])];\n                      }),\n                      _: 2 /* DYNAMIC */\n                    }, 1024 /* DYNAMIC_SLOTS */), $data.shareholders[index].isCorpShow ? (_openBlock(), _createBlock(_component_v_col, {\n                      key: 0,\n                      cols: \"3\"\n                    }, {\n                      \"default\": _withCtx(function () {\n                        return [_withDirectives(_createVNode(_component_v_text_field, {\n                          modelValue: $data.shareholders[index].ID,\n                          \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n                            return $data.shareholders[index].ID = $event;\n                          },\n                          label: \"Registration Number\",\n                          \"error-messages\": _ctx.errors.collect(\"shareholders_\".concat(index, \"_ID\")),\n                          \"data-vv-as\": \"Registration Number\",\n                          \"data-vv-name\": \"shareholders_\".concat(index, \"_ID\"),\n                          required: \"\",\n                          \"data-vv-scope\": \"form3\",\n                          name: \"shareholders[][ID]\"\n                        }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"error-messages\", \"data-vv-name\"]), [[_directive_validate, 'required']])];\n                      }),\n                      _: 2 /* DYNAMIC */\n                    }, 1024 /* DYNAMIC_SLOTS */)) : (_openBlock(), _createBlock(_component_v_col, {\n                      key: 1,\n                      cols: \"3\"\n                    }, {\n                      \"default\": _withCtx(function () {\n                        return [_withDirectives(_createVNode(_component_v_text_field, {\n                          modelValue: $data.shareholders[index].ID,\n                          \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n                            return $data.shareholders[index].ID = $event;\n                          },\n                          label: \"ID\",\n                          \"error-messages\": _ctx.errors.collect(\"shareholders_\".concat(index, \"_ID\")),\n                          \"data-vv-as\": \"ID\",\n                          \"data-vv-name\": \"shareholders_\".concat(index, \"_ID\"),\n                          required: \"\",\n                          \"data-vv-scope\": \"form3\",\n                          name: \"shareholders[][ID]\"\n                        }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"error-messages\", \"data-vv-name\"]), [[_directive_validate, 'required']])];\n                      }),\n                      _: 2 /* DYNAMIC */\n                    }, 1024 /* DYNAMIC_SLOTS */)), $data.shareholders[index].isCorpShow ? (_openBlock(), _createBlock(_component_v_col, {\n                      key: 2,\n                      cols: \"3\"\n                    }, {\n                      \"default\": _withCtx(function () {\n                        return [_createVNode(_component_v_menu, {\n                          modelValue: $data.shareholders[index].Menu,\n                          \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n                            return $data.shareholders[index].Menu = $event;\n                          },\n                          \"close-on-content-click\": false,\n                          \"nudge-right\": 40,\n                          transition: \"scale-transition\",\n                          \"offset-y\": \"\",\n                          \"min-width\": \"290px\"\n                        }, {\n                          activator: _withCtx(function (_ref3) {\n                            var on = _ref3.on;\n                            return [_withDirectives(_createVNode(_component_v_text_field, _mergeProps({\n                              modelValue: $data.shareholders[index].DOB,\n                              \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n                                return $data.shareholders[index].DOB = $event;\n                              },\n                              label: \"Date of Incorporation\",\n                              \"prepend-icon\": \"event\",\n                              readonly: \"\"\n                            }, _toHandlers(on), {\n                              \"error-messages\": _ctx.errors.collect(\"shareholders_\".concat(index, \"_DOB\")),\n                              \"data-vv-as\": \"Country of Incorporation\",\n                              \"data-vv-name\": \"shareholders_\".concat(index, \"_DOB\"),\n                              required: \"\",\n                              \"data-vv-scope\": \"form2\"\n                            }), null, 16 /* FULL_PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"error-messages\", \"data-vv-name\"]), [[_directive_validate, 'required']])];\n                          }),\n                          \"default\": _withCtx(function () {\n                            return [_createVNode(_component_v_date_picker, {\n                              modelValue: $data.shareholders[index].DOB,\n                              \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n                                return $data.shareholders[index].DOB = $event;\n                              },\n                              onInput: function onInput($event) {\n                                return $data.shareholders[index].Menu = false;\n                              }\n                            }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"onInput\"])];\n                          }),\n                          _: 2 /* DYNAMIC */\n                        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"modelValue\", \"onUpdate:modelValue\"])];\n                      }),\n                      _: 2 /* DYNAMIC */\n                    }, 1024 /* DYNAMIC_SLOTS */)) : (_openBlock(), _createBlock(_component_v_col, {\n                      key: 3,\n                      cols: \"3\"\n                    }, {\n                      \"default\": _withCtx(function () {\n                        return [_createVNode(_component_v_menu, {\n                          modelValue: $data.shareholders[index].Menu,\n                          \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n                            return $data.shareholders[index].Menu = $event;\n                          },\n                          \"close-on-content-click\": false,\n                          \"nudge-right\": 40,\n                          transition: \"scale-transition\",\n                          \"offset-y\": \"\",\n                          \"min-width\": \"290px\"\n                        }, {\n                          activator: _withCtx(function (_ref4) {\n                            var on = _ref4.on;\n                            return [_withDirectives(_createVNode(_component_v_text_field, _mergeProps({\n                              modelValue: $data.shareholders[index].DOB,\n                              \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n                                return $data.shareholders[index].DOB = $event;\n                              },\n                              label: \"DOB\",\n                              \"prepend-icon\": \"event\",\n                              readonly: \"\"\n                            }, _toHandlers(on), {\n                              \"error-messages\": _ctx.errors.collect(\"shareholders_\".concat(index, \"_DOB\")),\n                              \"data-vv-name\": \"shareholders_\".concat(index, \"_DOB\"),\n                              \"data-vv-as\": \"DOB\",\n                              required: \"\",\n                              \"data-vv-scope\": \"form2\"\n                            }), null, 16 /* FULL_PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"error-messages\", \"data-vv-name\"]), [[_directive_validate, 'required']])];\n                          }),\n                          \"default\": _withCtx(function () {\n                            return [_createVNode(_component_v_date_picker, {\n                              modelValue: $data.shareholders[index].DOB,\n                              \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n                                return $data.shareholders[index].DOB = $event;\n                              },\n                              onInput: function onInput($event) {\n                                return $data.shareholders[index].Menu = false;\n                              }\n                            }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"onInput\"])];\n                          }),\n                          _: 2 /* DYNAMIC */\n                        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"modelValue\", \"onUpdate:modelValue\"])];\n                      }),\n                      _: 2 /* DYNAMIC */\n                    }, 1024 /* DYNAMIC_SLOTS */)), $data.shareholders[index].isCorpShow ? (_openBlock(), _createBlock(_component_v_col, {\n                      key: 4,\n                      cols: \"3\"\n                    }, {\n                      \"default\": _withCtx(function () {\n                        return [_withDirectives(_createVNode(_component_v_select, {\n                          items: $data.country_options,\n                          name: \"shareholders[][Nationality]\",\n                          modelValue: $data.shareholders[index].Nationality,\n                          \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n                            return $data.shareholders[index].Nationality = $event;\n                          },\n                          label: \"Country of Incorporation\",\n                          \"error-messages\": _ctx.errors.collect(\"shareholders_\".concat(index, \"_Nationality\")),\n                          \"data-vv-name\": \"shareholders_\".concat(index, \"_Nationality\"),\n                          \"data-vv-as\": \"Country of Incorporation\",\n                          \"data-vv-scope\": \"form3\"\n                        }, null, 8 /* PROPS */, [\"items\", \"modelValue\", \"onUpdate:modelValue\", \"error-messages\", \"data-vv-name\"]), [[_directive_validate, 'required']])];\n                      }),\n                      _: 2 /* DYNAMIC */\n                    }, 1024 /* DYNAMIC_SLOTS */)) : (_openBlock(), _createBlock(_component_v_col, {\n                      key: 5,\n                      cols: \"3\"\n                    }, {\n                      \"default\": _withCtx(function () {\n                        return [_withDirectives(_createVNode(_component_v_select, {\n                          items: $data.nationality_options,\n                          name: \"shareholders[][Nationality]\",\n                          modelValue: $data.shareholders[index].Nationality,\n                          \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n                            return $data.shareholders[index].Nationality = $event;\n                          },\n                          label: \"Nationality\",\n                          \"error-messages\": _ctx.errors.collect(\"shareholders_\".concat(index, \"_Nationality\")),\n                          \"data-vv-name\": \"shareholders_\".concat(index, \"_Nationality\"),\n                          \"data-vv-as\": \"Nationality\",\n                          \"data-vv-scope\": \"form3\"\n                        }, null, 8 /* PROPS */, [\"items\", \"modelValue\", \"onUpdate:modelValue\", \"error-messages\", \"data-vv-name\"]), [[_directive_validate, 'required']])];\n                      }),\n                      _: 2 /* DYNAMIC */\n                    }, 1024 /* DYNAMIC_SLOTS */))];\n                  }),\n\n                  _: 2 /* DYNAMIC */\n                }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_v_row, null, {\n                  \"default\": _withCtx(function () {\n                    return [_createVNode(_component_v_col, {\n                      cols: \"3\"\n                    }, {\n                      \"default\": _withCtx(function () {\n                        return [_withDirectives(_createVNode(_component_v_text_field, {\n                          modelValue: $data.shareholders[index].Email,\n                          \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n                            return $data.shareholders[index].Email = $event;\n                          },\n                          label: \"Email\",\n                          \"error-messages\": _ctx.errors.collect(\"shareholders_\".concat(index, \"_Email\")),\n                          \"data-vv-name\": \"shareholders_\".concat(index, \"_Email\"),\n                          \"data-vv-as\": \"Email\",\n                          required: \"\",\n                          \"data-vv-scope\": \"form3\",\n                          name: \"shareholders[][Email]\"\n                        }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"error-messages\", \"data-vv-name\"]), [[_directive_validate, 'required|email']])];\n                      }),\n                      _: 2 /* DYNAMIC */\n                    }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_v_col, {\n                      cols: \"3\"\n                    }, {\n                      \"default\": _withCtx(function () {\n                        return [_withDirectives(_createVNode(_component_v_text_field, {\n                          modelValue: $data.shareholders[index].Phone,\n                          \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n                            return $data.shareholders[index].Phone = $event;\n                          },\n                          label: \"Contact Number\",\n                          \"error-messages\": _ctx.errors.collect(\"shareholders_\".concat(index, \"_Phone\")),\n                          \"data-vv-name\": \"shareholders_\".concat(index, \"_Phone\"),\n                          \"data-vv-as\": \"Contact Number\",\n                          required: \"\",\n                          \"data-vv-scope\": \"form3\",\n                          name: \"shareholders[][Phone]\"\n                        }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"error-messages\", \"data-vv-name\"]), [[_directive_validate, 'required']])];\n                      }),\n                      _: 2 /* DYNAMIC */\n                    }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_v_col, {\n                      cols: \"3\"\n                    }, {\n                      \"default\": _withCtx(function () {\n                        return [_withDirectives(_createVNode(_component_v_text_field, {\n                          modelValue: $data.shareholders[index].Address,\n                          \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n                            return $data.shareholders[index].Address = $event;\n                          },\n                          label: \"Address\",\n                          \"error-messages\": _ctx.errors.collect(\"shareholders_\".concat(index, \"_Address\")),\n                          \"data-vv-name\": \"shareholders_\".concat(index, \"_Address\"),\n                          \"data-vv-as\": \"Address\",\n                          required: \"\",\n                          \"data-vv-scope\": \"form3\",\n                          name: \"shareholders[][Address]\"\n                        }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"error-messages\", \"data-vv-name\"]), [[_directive_validate, 'required']])];\n                      }),\n                      _: 2 /* DYNAMIC */\n                    }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_v_col, {\n                      cols: \"3\"\n                    }, {\n                      \"default\": _withCtx(function () {\n                        return [_withDirectives(_createVNode(_component_v_text_field, {\n                          modelValue: $data.shareholders[index].Shares,\n                          \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n                            return $data.shareholders[index].Shares = $event;\n                          },\n                          label: \"Shares\",\n                          \"error-messages\": _ctx.errors.collect(\"shareholders_\".concat(index, \"_Shares\")),\n                          \"data-vv-name\": \"shareholders_\".concat(index, \"_Shares\"),\n                          \"data-vv-as\": \"Shares\",\n                          required: \"\",\n                          \"data-vv-scope\": \"form3\",\n                          name: \"shareholders[][Shares]\"\n                        }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"error-messages\", \"data-vv-name\"]), [[_directive_validate, 'required']])];\n                      }),\n                      _: 2 /* DYNAMIC */\n                    }, 1024 /* DYNAMIC_SLOTS */)];\n                  }),\n\n                  _: 2 /* DYNAMIC */\n                }, 1024 /* DYNAMIC_SLOTS */), $data.shareholders[index].isCorpShow ? (_openBlock(), _createBlock(_component_v_row, {\n                  key: 0\n                }, {\n                  \"default\": _withCtx(function () {\n                    return [_createVNode(_component_v_col, {\n                      cols: \"3\"\n                    }, {\n                      \"default\": _withCtx(function () {\n                        return [_withDirectives(_createVNode(_component_v_text_field, {\n                          modelValue: $data.shareholders[index].Corporate_Representative_Name,\n                          \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n                            return $data.shareholders[index].Corporate_Representative_Name = $event;\n                          },\n                          label: \"Corporate Representative Name\",\n                          \"error-messages\": _ctx.errors.collect(\"shareholders_\".concat(index, \"_Corporate_Representative_Name\")),\n                          name: \"shareholders[][Corporate_Representative_Name]\",\n                          \"data-vv-name\": \"shareholders_\".concat(index, \"_Corporate_Representative_Name\"),\n                          \"data-vv-as\": \"Corporate Representative Name\",\n                          required: \"\",\n                          \"data-vv-scope\": \"form3\"\n                        }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"error-messages\", \"data-vv-name\"]), [[_directive_validate, 'required']])];\n                      }),\n                      _: 2 /* DYNAMIC */\n                    }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_v_col, {\n                      cols: \"3\"\n                    }, {\n                      \"default\": _withCtx(function () {\n                        return [_withDirectives(_createVNode(_component_v_text_field, {\n                          modelValue: $data.shareholders[index].Corporate_Representative_Address,\n                          \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n                            return $data.shareholders[index].Corporate_Representative_Address = $event;\n                          },\n                          label: \"Corporate Representative Address\",\n                          \"error-messages\": _ctx.errors.collect(\"shareholders_\".concat(index, \"_Corporate_Representative_Address\")),\n                          name: \"shareholders[][Corporate_Representative_Address]\",\n                          \"data-vv-as\": \"Corporate Representative Name\",\n                          \"data-vv-name\": \"shareholders_\".concat(index, \"_Corporate_Representative_Address\"),\n                          required: \"\",\n                          \"data-vv-scope\": \"form3\"\n                        }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"error-messages\", \"data-vv-name\"]), [[_directive_validate, 'required']])];\n                      }),\n                      _: 2 /* DYNAMIC */\n                    }, 1024 /* DYNAMIC_SLOTS */)];\n                  }),\n\n                  _: 2 /* DYNAMIC */\n                }, 1024 /* DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true), index != 0 ? (_openBlock(), _createBlock(_component_v_row, {\n                  key: 1\n                }, {\n                  \"default\": _withCtx(function () {\n                    return [_createVNode(_component_v_col, null, {\n                      \"default\": _withCtx(function () {\n                        return [_createVNode(_component_v_btn, {\n                          onClick: function onClick($event) {\n                            return $options.removeShareholder(index);\n                          }\n                        }, {\n                          \"default\": _withCtx(function () {\n                            return [_createTextVNode(\"Remove\")];\n                          }),\n                          _: 2 /* DYNAMIC */\n                        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])];\n                      }),\n                      _: 2 /* DYNAMIC */\n                    }, 1024 /* DYNAMIC_SLOTS */)];\n                  }),\n\n                  _: 2 /* DYNAMIC */\n                }, 1024 /* DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true)]);\n              }), 256 /* UNKEYED_FRAGMENT */)), _createVNode(_component_v_btn, {\n                color: \"primary\",\n                \"click|%3D%26%2334%3BstepContinue(%26%2339%3Bform3%26%2339%3B)%26%2334%3B\": \"\"\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createTextVNode(\" > \"), _createCommentVNode(\" <v-btn\\n                            color=\\\"primary\\\"\\n                                @click=\\\"goNextStep()\\\"\\n\\n                                    > \"), _createTextVNode(\" Submit \"), _createVNode(_component_v_icon, {\n                    right: \"\"\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_createTextVNode(\"send\")];\n                    }),\n                    _: 1 /* STABLE */\n                  })];\n                }),\n\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_btn, {\n                onClick: $options.addNewShareholder\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_v_icon, {\n                    left: \"\"\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_createTextVNode(\"person_add\")];\n                    }),\n                    _: 1 /* STABLE */\n                  }), _createTextVNode(\" Add \")];\n                }),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_v_btn, {\n                text: \"\",\n                onClick: _cache[18] || (_cache[18] = function ($event) {\n                  return $options.goBack();\n                })\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_v_icon, {\n                    left: \"\"\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_createTextVNode(\"skip_previous\")];\n                    }),\n                    _: 1 /* STABLE */\n                  }), _createTextVNode(\" Back \")];\n                }),\n                _: 1 /* STABLE */\n              })])];\n            }),\n\n            _: 1 /* STABLE */\n          })];\n        }),\n\n        _: 1 /* STABLE */\n      })];\n    }),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"])) : _createCommentVNode(\"v-if\", true), !$data.isLoading ? (_openBlock(), _createBlock(_component_v_alert, {\n    key: 1,\n    icon: \"cloud_upload\",\n    type: \"info\"\n  }, {\n    \"default\": _withCtx(function () {\n      return [_createTextVNode(_toDisplayString($data.responsefromServer), 1 /* TEXT */)];\n    }),\n\n    _: 1 /* STABLE */\n  })) : _createCommentVNode(\"v-if\", true)]);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}