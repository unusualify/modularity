{"ast":null,"code":"import { toDisplayString as _toDisplayString } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return \"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelSelect as _vModelSelect, createElementVNode as _createElementVNode, withDirectives as _withDirectives, vShow as _vShow, renderSlot as _renderSlot, toHandlers as _toHandlers, mergeProps as _mergeProps, createBlock as _createBlock, withKeys as _withKeys, createSlots as _createSlots } from \\\"vue\\\" const _hoisted_1 = [\\\"value\\\"] const _hoisted_2 = { key: 1 } export function render(_ctx, _cache, $props, $setup, $data, $options) { const _component_v_toolbar_title = _resolveComponent(\\\"v-toolbar-title\\\") const _component_v_divider = _resolveComponent(\\\"v-divider\\\") const _component_v_text_field = _resolveComponent(\\\"v-text-field\\\") const _component_v_spacer = _resolveComponent(\\\"v-spacer\\\") const _component_ue_modal_form = _resolveComponent(\\\"ue-modal-form\\\") const _component_ue_modal_dialog = _resolveComponent(\\\"ue-modal-dialog\\\") const _component_v_toolbar = _resolveComponent(\\\"v-toolbar\\\") const _component_v_icon = _resolveComponent(\\\"v-icon\\\") const _component_v_btn = _resolveComponent(\\\"v-btn\\\") const _component_v_list_item = _resolveComponent(\\\"v-list-item\\\") const _component_v_list = _resolveComponent(\\\"v-list\\\") const _component_v_menu = _resolveComponent(\\\"v-menu\\\") const _component_v_edit_dialog = _resolveComponent(\\\"v-edit-dialog\\\") const _component_v_data_table = _resolveComponent(\\\"v-data-table\\\") return (_openBlock(), _createBlock(_component_v_data_table, { headers: _ctx.headers, items: _ctx.elements, class: \\\"elevation-1\\\", loading: _ctx.loading, options: _ctx.options, \\\"server-items-length\\\": _ctx.totalElements, search: _ctx.search, \\\"hide-default-header\\\": _ctx.hideDefaultHeader, \\\"hide-default-footer\\\": _ctx.hideDefaultFooter, \\\"footer-props\\\": { showFirstLastPage: true, firstIcon: 'mdi-arrow-collapse-left', lastIcon: 'mdi-arrow-collapse-right', nextIcon: 'mdi-chevron-right', prevIcon: 'mdi-chevron-left' }, \\\"disable-pagination\\\": false, \\\"disable-sort\\\": false }, _createSlots({ top: _withCtx(() => [ _createVNode(_component_v_toolbar, { flat: \\\"\\\" }, { default: _withCtx(() => [ _createCommentVNode(\\\" #title.left-top \\\"), _createVNode(_component_v_toolbar_title, null, { default: _withCtx(() => [ _createTextVNode(_toDisplayString(_ctx.$tc('list-of-item', [_ctx.name, _ctx.$tc('modules.' + _ctx.name.toLowerCase )] )) + \\\" \\\", 1 /* TEXT */), _createCommentVNode(\\\" \" + _toDisplayString(_ctx.$t('errors.missingMessage')) + \" \\\") ]), _: 1 /* STABLE */ }), _createVNode(_component_v_divider, { class: \\\"mx-4\\\", inset: \\\"\\\", vertical: \\\"\\\" }), _createCommentVNode(\\\" #search input \\\"), _createVNode(_component_v_text_field, { modelValue: _ctx.search, \\\"onUpdate:modelValue\\\": _cache[0] || (_cache[0] = $event => ((_ctx.search) = $event)), \\\"append-icon\\\": \\\"mdi-magnify\\\", label: \\\"Search\\\", \\\"single-line\\\": \\\"\\\", \\\"hide-details\\\": \\\"\\\" }, null, 8 /* PROPS */, [\\\"modelValue\\\"]), _createVNode(_component_v_divider, { class: \\\"mx-4\\\", inset: \\\"\\\", vertical: \\\"\\\" }), _createCommentVNode(\\\" #language selector \\\"), _withDirectives(_createVNode(_component_v_toolbar_title, null, { default: _withCtx(() => [ _createCommentVNode(\\\" \" + _toDisplayString(_ctx.$tc('list')) + \"\\\\n \" + _toDisplayString(_ctx.$n(100.77, 'currency')) + \" \\\"), _createTextVNode(\\\" \\\" + _toDisplayString(_ctx.$t('language-select')) + \\\" \\\", 1 /* TEXT */), _withDirectives(_createElementVNode(\\\"select\\\", { \\\"onUpdate:modelValue\\\": _cache[1] || (_cache[1] = $event => ((_ctx.$i18n.locale) = $event)) }, [ (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.langs, (lang, i) => { return (_openBlock(), _createElementBlock(\\\"option\\\", { key: `Lang${i}`, value: lang }, _toDisplayString(lang), 9 /* TEXT, PROPS */, _hoisted_1)) }), 128 /* KEYED_FRAGMENT */)) ], 512 /* NEED_PATCH */), [ [_vModelSelect, _ctx.$i18n.locale] ]) ]), _: 1 /* STABLE */ }, 512 /* NEED_PATCH */), [ [_vShow, false] ]), _createVNode(_component_v_divider, { class: \\\"mx-4\\\", inset: \\\"\\\", vertical: \\\"\\\" }), _createVNode(_component_v_spacer), _createCommentVNode(\\\" #form dialog \\\"), _renderSlot(_ctx.$slots, \\\"FormDialog\\\", {}, () => [ _createVNode(_component_ue_modal_form, { ref: \\\"formModal\\\", modelValue: _ctx.formModalActive, \\\"onUpdate:modelValue\\\": _cache[2] || (_cache[2] = $event => ((_ctx.formModalActive) = $event)), \\\"route-name\\\": _ctx.name, inputs: _ctx.inputs, \\\"edited-item\\\": _ctx.editedItem, onUpdateItem: $options.emitEditedItem, onConfirm: $options.confirmForm }, null, 8 /* PROPS */, [\\\"modelValue\\\", \\\"route-name\\\", \\\"inputs\\\", \\\"edited-item\\\", \\\"onUpdateItem\\\", \\\"onConfirm\\\"]) ]), _createCommentVNode(\\\" general #dialog \\\"), _createVNode(_component_ue_modal_dialog, { ref: \\\"dialog\\\", modelValue: _ctx.dialogActive, \\\"onUpdate:modelValue\\\": _cache[3] || (_cache[3] = $event => ((_ctx.dialogActive) = $event)), onCancel: _ctx.resetEditedItem, onConfirm: $options.confirmDialog, description: $options.dialogDescription }, null, 8 /* PROPS */, [\\\"modelValue\\\", \\\"onCancel\\\", \\\"onConfirm\\\", \\\"description\\\"]) ]), _: 3 /* FORWARDED */ }) ]), \\\"item.actions\\\": _withCtx(({ item }) => [ _createCommentVNode(\\\" @click's editItem|deleteItem \\\"), _createCommentVNode(\\\" #actions \\\"), (_ctx.rowActionsType == 'dropdown') ? (_openBlock(), _createBlock(_component_v_menu, { key: 0, \\\"close-on-content-click\\\": false, left: \\\"\\\", \\\"offset-x\\\": \\\"\\\" }, { activator: _withCtx(({ on, attrs }) => [ _createVNode(_component_v_btn, _mergeProps({ icon: \\\"\\\" }, attrs, _toHandlers(on)), { default: _withCtx(() => [ _createVNode(_component_v_icon, { color: \\\"green darken-2\\\" }, { default: _withCtx(() => [ _createTextVNode(\\\" $list \\\") ]), _: 1 /* STABLE */ }) ]), _: 2 /* DYNAMIC */ }, 1040 /* FULL_PROPS, DYNAMIC_SLOTS */) ]), default: _withCtx(() => [ _createVNode(_component_v_list, null, { default: _withCtx(() => [ (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.rowActions, (action, k) => { return (_openBlock(), _createBlock(_component_v_list_item, { key: k, onClick: $event => (_ctx.handleFunctionCall(action + 'Item', item)) }, { default: _withCtx(() => [ _createVNode(_component_v_icon, { small: \\\"\\\" }, { default: _withCtx(() => [ _createTextVNode(_toDisplayString('$' + action), 1 /* TEXT */) ]), _: 2 /* DYNAMIC */ }, 1024 /* DYNAMIC_SLOTS */), _createTextVNode(\\\" \\\" + _toDisplayString(_ctx.$tc(action)), 1 /* TEXT */) ]), _: 2 /* DYNAMIC */ }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\\\"onClick\\\"])) }), 128 /* KEYED_FRAGMENT */)) ]), _: 2 /* DYNAMIC */ }, 1024 /* DYNAMIC_SLOTS */) ]), _: 2 /* DYNAMIC */ }, 1024 /* DYNAMIC_SLOTS */)) : (_openBlock(), _createElementBlock(\\\"div\\\", _hoisted_2, [ (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.rowActions, (action, k) => { return (_openBlock(), _createBlock(_component_v_icon, { key: k, small: \\\"\\\", class: \\\"mr-2\\\", onClick: $event => (_ctx.handleFunctionCall(action + 'Item', item)) }, { default: _withCtx(() => [ _createTextVNode(_toDisplayString('$' + action), 1 /* TEXT */) ]), _: 2 /* DYNAMIC */ }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\\\"onClick\\\"])) }), 128 /* KEYED_FRAGMENT */)) ])) ]), \\\"no-data\\\": _withCtx(() => [ _createVNode(_component_v_btn, { color: \\\"primary\\\", onClick: _ctx.initialize }, { default: _withCtx(() => [ _createTextVNode(\\\" Reset \\\") ]), _: 1 /* STABLE */ }, 8 /* PROPS */, [\\\"onClick\\\"]) ]), _: 2 /* DYNAMIC */ }, [ _renderList(_ctx.formatterColumns, (col, i) => { return { name: `item.${col.value}`, fn: _withCtx(({ col, value }) => [ _createCommentVNode(\\\" \" + _toDisplayString(_ctx.handleFunctionCall(_ctx.header.formatter, _ctx.value)) + \" \\\"), _createCommentVNode(\\\" \" + _toDisplayString([_ctx.header.formatter](_ctx.value)) + \" \\\"), _createTextVNode(\\\" \\\" + _toDisplayString(_ctx.$d(new Date(value), 'long')), 1 /* TEXT */) ]) } }), _renderList(_ctx.columnEditables, (e, k) => { return { name: `item.${e.value}`, fn: _withCtx((props) => [ (_openBlock(), _createBlock(_component_v_edit_dialog, { key: k, \\\"return-value\\\": props.item[e.value], \\\"save-text\\\": _ctx.$t('save'), onSave: $event => ($options.updateCell(e.value)), onCancel: $options.cancelColumnEdit, onOpen: $event => ($options.openColumnEdit(props.item)), onClose: $options.closeColumnEdit, persistent: \\\"\\\", large: \\\"\\\" }, { input: _withCtx(() => [ _createVNode(_component_v_text_field, { value: props.item[e.value], onInput: $options.columnChanged, onKeyup: _withKeys($event => ($options.updateCell(e.value)), [\\\"enter\\\"]), label: \\\"Edit\\\", \\\"single-line\\\": \\\"\\\", counter: \\\"\\\" }, null, 8 /* PROPS */, [\\\"value\\\", \\\"onInput\\\", \\\"onKeyup\\\"]) ]), default: _withCtx(() => [ _createTextVNode(_toDisplayString(props.item[e.value]) + \\\" \\\", 1 /* TEXT */) ]), _: 2 /* DYNAMIC */ }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\\\"return-value\\\", \\\"save-text\\\", \\\"onSave\\\", \\\"onCancel\\\", \\\"onOpen\\\", \\\"onClose\\\"])) ]) } }) ]), 1032 /* PROPS, DYNAMIC_SLOTS */, [\\\"headers\\\", \\\"items\\\", \\\"loading\\\", \\\"options\\\", \\\"server-items-length\\\", \\\"search\\\", \\\"hide-default-header\\\", \\\"hide-default-footer\\\"])) }\";\n}","map":{"version":3,"names":["_toDisplayString","_ctx","$t","$tc","$n","handleFunctionCall","header","formatter","value"],"sources":["/var/www/crm_template/packages/oobook/crm-base/vue/src/js/components/Datatable_.vue"],"sourcesContent":["<template>\n  <v-data-table\n    :headers=\"headers\"\n    :items=\"elements\"\n    \n    class=\"elevation-1\"\n    :loading=\"loading\"\n    :options.sync=\"options\"\n    :server-items-length=\"totalElements\"\n    :search=\"search\"\n    :hide-default-header=\"hideDefaultHeader\"\n    :hide-default-footer=\"hideDefaultFooter\"\n    :footer-props=\"{\n      showFirstLastPage: true,\n      firstIcon: 'mdi-arrow-collapse-left',\n      lastIcon: 'mdi-arrow-collapse-right',\n      nextIcon: 'mdi-chevron-right',\n      prevIcon: 'mdi-chevron-left'\n    }\"\n\n    :disable-pagination=\"false\"\n    :disable-sort=\"false\"\n  >\n    <template v-slot:top>\n      <v-toolbar\n        flat\n      >\n        <!-- #title.left-top -->\n        <v-toolbar-title>\n          {{ $tc('list-of-item', [name, $tc('modules.' + name.toLowerCase )] ) }}\n          <!-- {{ $t('errors.missingMessage') }} -->\n        </v-toolbar-title>\n\n        <v-divider class=\"mx-4\" inset vertical></v-divider>\n\n        <!-- #search input -->\n        <v-text-field\n          v-model=\"search\"\n          append-icon=\"mdi-magnify\"\n          label=\"Search\"\n          single-line\n          hide-details\n        >\n        </v-text-field>\n\n        <v-divider class=\"mx-4\" inset vertical></v-divider>\n        \n        <!-- #language selector -->\n        <v-toolbar-title v-show=\"false\">\n          <!-- {{ $tc('list') }}\n          {{ $n(100.77, 'currency') }} -->\n          {{ $t('language-select') }}\n          <select v-model=\"$i18n.locale\">\n            <option v-for=\"(lang, i) in langs\" :key=\"`Lang${i}`\" :value=\"lang\">\n              {{ lang }}\n            </option>\n          </select>\n        </v-toolbar-title>\n\n        <v-divider class=\"mx-4\" inset vertical></v-divider>\n\n        <v-spacer></v-spacer>\n        \n        <!-- #form dialog -->\n        <slot \n          name=\"FormDialog\"\n          >\n          <ue-modal-form\n              ref=\"formModal\"\n              v-model=\"formModalActive\"\n              :route-name=\"name\"\n              :inputs=\"inputs\"\n                \n              :edited-item=\"editedItem\"\n              @update-item=\"emitEditedItem\"\n              \n              @confirm=\"confirmForm\"\n              >\n          </ue-modal-form>\n        </slot>\n\n        <!-- general #dialog -->\n        <ue-modal-dialog\n          ref=\"dialog\"\n          v-model=\"dialogActive\"\n          @cancel=\"resetEditedItem\"\n          @confirm=\"confirmDialog\"\n          :description=\"dialogDescription\"\n        >\n        </ue-modal-dialog>\n\n      </v-toolbar>\n    </template>\n\n    <template v-slot:item.actions=\"{ item }\">\n      \n      <!-- @click's editItem|deleteItem -->\n      <!-- #actions -->\n      <v-menu v-if=\"rowActionsType == 'dropdown'\" \n        :close-on-content-click=\"false\"\n        left\n        offset-x\n        >\n        <template v-slot:activator=\"{ on, attrs }\">\n          <v-btn icon v-bind=\"attrs\" v-on=\"on\">\n            <v-icon color=\"green darken-2\">\n              $list\n            </v-icon>\n          </v-btn>\n        </template>\n        <v-list>\n\n          <v-list-item\n            v-for=\"(action, k) in rowActions\"\n            :key=\"k\"\n            @click=\"handleFunctionCall(action + 'Item', item)\"\n\n            >\n              <v-icon small> {{ '$' + action }} </v-icon>\n              {{ $tc(action) }}\n          </v-list-item>\n\n        </v-list>\n      </v-menu>\n\n      <div v-else=\"\">\n        <v-icon\n          v-for=\"(action, k) in rowActions\"\n          :key=\"k\"\n          small\n          class=\"mr-2\"\n          @click=\"handleFunctionCall(action + 'Item', item)\"\n          >\n          {{ '$' + action }}\n        </v-icon>\n      </div>\n    </template>\n\n    <template v-slot:no-data>\n      <v-btn\n        color=\"primary\"\n        @click=\"initialize\"\n      >\n        Reset\n      </v-btn>\n    </template>\n\n    <!-- #formatterColumns -->\n    <template \n      v-for=\"(col, i) in formatterColumns\" \n      v-slot:[`item.${col.value}`]=\"{ col, value }\"\n      >\n        <!-- {{ handleFunctionCall(header.formatter, value ) }} -->\n        <!-- {{ [header.formatter](value) }} -->\n        {{ $d(new Date(value), 'long') }}\n    </template>\n\n    <!-- #edit-dialog for columnEditables -->\n    <template \n      v-for=\"(e, k) in columnEditables\" \n      v-slot:[`item.${e.value}`]=\"props\"\n      >\n        <v-edit-dialog\n          :key=\"k\"\n          :return-value.sync=\"props.item[e.value]\"\n          :save-text=\"$t('save')\"\n          @save=\"updateCell(e.value)\"\n          @cancel=\"cancelColumnEdit\"\n          @open=\"openColumnEdit(props.item)\"\n          @close=\"closeColumnEdit\"\n\n          persistent\n          large\n\n        >\n          {{ props.item[e.value] }}\n          <template v-slot:input>\n            <v-text-field\n              :value=\"props.item[e.value]\"\n              @input=\"columnChanged\"\n              @keyup.enter=\"updateCell(e.value)\"\n              label=\"Edit\"\n              single-line\n              counter\n            >\n            </v-text-field>\n          </template>\n        </v-edit-dialog>\n    </template>\n\n  </v-data-table>\n</template>\n\n<script>\n  import { mapState } from 'vuex'\n  import { DATATABLE, FORM, ALERT } from '@/store/mutations'\n  import ACTIONS from '@/store/actions'\n\n  import { DatatableMixin } from '@/mixins'\n\n  export default {\n    mixins: [DatatableMixin],\n    data: function() {\n      return {\n        formModalActive: false,\n        dialogActive: false,\n\n        langs: ['tr', 'en'],\n\n        cellInput: ''\n      }\n    },\n    computed: {\n      dialogDescription(){\n        return this.$t('confirm-deletion', {\n          route: this.transName.toLowerCase(), \n          name: this.editedItem[this.titleKey]\n        })\n      },\n      transName(){\n        return this.$t('modules.'+this.name.toLowerCase())\n      }\n    },\n\n    watch: {\n      formModalActive (val) {\n        val || this.resetEditedItem()\n      },\n      dialogActive (val) {\n        val || this.resetEditedItem()\n      },\n      editedItem(val) {\n        // console.log('editedItem watcher', this.editedItem )\n      }\n    },\n\n    beforeCreate() {\n    },\n\n    created () {\n\n    },\n\n    mounted() {\n    },\n\n    methods: {      \n      editItem (item) {\n        this.editedIndex = this.elements.indexOf(item)\n        this.editedItem = Object.assign({}, item)\n        this.formModalActive = true\n      },\n      emitEditedItem(v){\n        this.editedItem = v;\n      },\n      confirmForm (editedItem) {\n        this.$store.commit(FORM.UPDATE_FORM_LOADING, true)\n        \n        __log(editedItem);\n        \n        this.$store.dispatch(ACTIONS.SAVE_FORM, editedItem).then(() => {\n          this.$nextTick(function () {\n            // this.$store.dispatch(ACTIONS.GET_DATATABLE)\n            this.formModalActive = false;\n          })\n        }, (errorResponse) => {\n          // this.$store.commit(NOTIFICATION.SET_NOTIF, {\n          //   message: 'Your content can not be edited, please retry',\n          //   variant: 'error'\n          // })\n        })\n      },\n\n\n\n      deleteItem (item) {\n        this.setEditedItem(item);\n        this.openDialog()\n      },\n\n      openDialog(){\n        this.dialogActive = true;\n      },\n      confirmDialog(){        \n        this.delete(this.editedItem);\n      },\n      delete: function (item) {\n        this.$store.dispatch(ACTIONS.DELETE_ITEM, item)\n      },\n\n      columnChanged(value) {\n        this.cellInput = value\n      },\n\n      openColumnEdit (item) {\n        // this.resetEditedItem();\n        this.setEditedItem(item);\n        // this.$store.commit(ALERT.SET_ALERT, {\n        //   variant: 'info',\n        //   message: 'Dialog Opened'\n        // })\n        // this.$root.$refs.alert.info('Dialog Opened');\n      },\n      cancelColumnEdit () {\n        this.resetEditedItem();\n        // this.$store.commit(ALERT.SET_ALERT, {\n        //   variant: 'warning',\n        //   message: 'cancelled'\n        // })\n        // this.$root.$refs.alert.error('Cancelled!')\n      },\n      closeColumnEdit () {\n        // this.resetEditedItem();\n      },\n      /**\n       * @param {string} key - related key of object\n       */\n      updateCell ( key) {\n        this.$store.commit(ALERT.CLEAR_ALERT)\n\n        if( this.editedItem[key] !== this.cellInput ){\n          let data = {\n            id: this.editedItem.id,\n            [key]: this.cellInput,\n            // reload: false\n          };\n\n          this.$store.dispatch(ACTIONS.SAVE_FORM, data)\n          //   .then(() => {\n          //     this.$nextTick(function () {\n          //       // this.$store.commit(ALERT.SET_ALERT, {\n          //       //   variant: 'success',\n          //       //   message: this.$tc('saved', 2, [key])\n          //       // })\n                \n          //     })\n          // }, (errorResponse) => {\n          //   this.$store.commit(ALERT.SET_ALERT, {\n          //     message: 'Your content can not be edited, please retry',\n          //     variant: 'error'\n          //   });\n          // }) \n        }\n      },\n\n\n\n\n\n\n    },\n  }\n</script>"],"mappings":";;qmFA8BoC,GAAAA,gBAAA,CAAGC,IAAA,CAAAC,EAAE,6BAA4B,+rBAmBjC,GAAAF,gBAAA,CAAGC,IAAA,CAAAE,GAAG,YAAW,MAAY,GAAAH,gBAAA,CAAGC,IAAA,CAAAG,EAAE,wBAAuB,4oIAuG7D,GAAAJ,gBAAA,CAAGC,IAAA,CAAAI,kBAAkB,CAACJ,IAAA,CAAAK,MAAM,CAACC,SAAS,EAAEN,IAAA,CAAAO,KAAK,KAAK,+BAClD,GAAAR,gBAAA,EAAIC,IAAA,CAAAK,MAAM,CAACC,SAAS,EAAEN,IAAA,CAAAO,KAAK,KAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}