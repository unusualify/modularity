{"ast":null,"code":"const Refs = Symbol('Forwarded refs');\n\n/** Omit properties starting with P */\n\nexport function forwardRefs(target) {\n  for (var _len = arguments.length, refs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    refs[_key - 1] = arguments[_key];\n  }\n  target[Refs] = refs;\n  return new Proxy(target, {\n    get(target, key) {\n      if (Reflect.has(target, key)) {\n        return Reflect.get(target, key);\n      }\n      for (const ref of refs) {\n        if (ref.value && Reflect.has(ref.value, key)) {\n          const val = Reflect.get(ref.value, key);\n          return typeof val === 'function' ? val.bind(ref.value) : val;\n        }\n      }\n    },\n    getOwnPropertyDescriptor(target, key) {\n      const descriptor = Reflect.getOwnPropertyDescriptor(target, key);\n      if (descriptor) return descriptor;\n\n      // Skip internal properties\n      if (typeof key === 'symbol' || key.startsWith('__')) return;\n\n      // Check each ref's own properties\n      for (const ref of refs) {\n        if (!ref.value) continue;\n        const descriptor = Reflect.getOwnPropertyDescriptor(ref.value, key);\n        if (descriptor) return descriptor;\n        if ('_' in ref.value && 'setupState' in ref.value._) {\n          const descriptor = Reflect.getOwnPropertyDescriptor(ref.value._.setupState, key);\n          if (descriptor) return descriptor;\n        }\n      }\n      // Recursive search up each ref's prototype\n      for (const ref of refs) {\n        let obj = ref.value && Object.getPrototypeOf(ref.value);\n        while (obj) {\n          const descriptor = Reflect.getOwnPropertyDescriptor(obj, key);\n          if (descriptor) return descriptor;\n          obj = Object.getPrototypeOf(obj);\n        }\n      }\n      // Call forwarded refs' proxies\n      for (const ref of refs) {\n        const childRefs = ref.value && ref.value[Refs];\n        if (!childRefs) continue;\n        const queue = childRefs.slice();\n        while (queue.length) {\n          const ref = queue.shift();\n          const descriptor = Reflect.getOwnPropertyDescriptor(ref.value, key);\n          if (descriptor) return descriptor;\n          const childRefs = ref.value && ref.value[Refs];\n          if (childRefs) queue.push(...childRefs);\n        }\n      }\n      return undefined;\n    }\n  });\n}","map":{"version":3,"names":["Refs","Symbol","forwardRefs","target","_len","arguments","length","refs","Array","_key","Proxy","get","key","Reflect","has","ref","value","val","bind","getOwnPropertyDescriptor","descriptor","startsWith","_","setupState","obj","Object","getPrototypeOf","childRefs","queue","slice","shift","push","undefined"],"sources":["../../src/composables/forwardRefs.ts"],"sourcesContent":["import type { ComponentPublicInstance, Ref, UnwrapRef } from 'vue'\nimport type { UnionToIntersection } from '@/util'\n\nconst Refs = Symbol('Forwarded refs')\n\n/** Omit properties starting with P */\ntype OmitPrefix<T, P extends string> = [Extract<keyof T, `${P}${any}`>] extends [never] ? T : Omit<T, `${P}${any}`>\n\ntype OmitProps<T> = T extends { $props: any } ? Omit<T, keyof T['$props']> : never\n\nexport function forwardRefs<T extends {}, U extends Ref<HTMLElement | Omit<ComponentPublicInstance, '$emit'> | undefined>[]> (\n  target: T,\n  ...refs: U\n): T & UnionToIntersection<{ [K in keyof U]: OmitPrefix<OmitProps<NonNullable<UnwrapRef<U[K]>>>, '$'> }[number]> {\n  (target as any)[Refs] = refs\n\n  return new Proxy(target, {\n    get (target, key) {\n      if (Reflect.has(target, key)) {\n        return Reflect.get(target, key)\n      }\n      for (const ref of refs) {\n        if (ref.value && Reflect.has(ref.value, key)) {\n          const val = Reflect.get(ref.value, key)\n          return typeof val === 'function'\n            ? val.bind(ref.value)\n            : val\n        }\n      }\n    },\n    getOwnPropertyDescriptor (target, key) {\n      const descriptor = Reflect.getOwnPropertyDescriptor(target, key)\n      if (descriptor) return descriptor\n\n      // Skip internal properties\n      if (typeof key === 'symbol' || key.startsWith('__')) return\n\n      // Check each ref's own properties\n      for (const ref of refs) {\n        if (!ref.value) continue\n        const descriptor = Reflect.getOwnPropertyDescriptor(ref.value, key)\n        if (descriptor) return descriptor\n        if ('_' in ref.value && 'setupState' in ref.value._) {\n          const descriptor = Reflect.getOwnPropertyDescriptor(ref.value._.setupState, key)\n          if (descriptor) return descriptor\n        }\n      }\n      // Recursive search up each ref's prototype\n      for (const ref of refs) {\n        let obj = ref.value && Object.getPrototypeOf(ref.value)\n        while (obj) {\n          const descriptor = Reflect.getOwnPropertyDescriptor(obj, key)\n          if (descriptor) return descriptor\n          obj = Object.getPrototypeOf(obj)\n        }\n      }\n      // Call forwarded refs' proxies\n      for (const ref of refs) {\n        const childRefs = ref.value && (ref.value as any)[Refs]\n        if (!childRefs) continue\n        const queue = childRefs.slice()\n        while (queue.length) {\n          const ref = queue.shift()\n          const descriptor = Reflect.getOwnPropertyDescriptor(ref.value, key)\n          if (descriptor) return descriptor\n          const childRefs = ref.value && (ref.value as any)[Refs]\n          if (childRefs) queue.push(...childRefs)\n        }\n      }\n      return undefined\n    },\n  }) as any\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}