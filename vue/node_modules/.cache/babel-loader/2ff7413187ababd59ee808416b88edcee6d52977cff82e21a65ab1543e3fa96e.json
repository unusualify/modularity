{"ast":null,"code":"import \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport { ModalMixin } from '@/mixins';\nexport default {\n  mixins: [ModalMixin],\n  props: {\n    cancelText: {\n      type: String,\n      \"default\": ''\n    },\n    confirmText: {\n      type: String,\n      \"default\": ''\n    },\n    description: {\n      type: String,\n      \"default\": ''\n    }\n  },\n  data: function data() {\n    return {\n      // open: false\n      dialog: false\n    };\n  },\n  computed: {\n    textCancel: function textCancel() {\n      return this.cancelText != '' ? this.cancelText : this.$t('cancel');\n    },\n    textConfirm: function textConfirm() {\n      return this.confirmText != '' ? this.confirmText : this.$t('confirm');\n    },\n    textDescription: {\n      get: function get() {\n        return this.description != '' ? this.description : this.$t('confirm-description');\n      },\n      set: function set(value) {\n        this.$emit('input', value);\n      }\n    }\n  },\n  watch: {},\n  methods: {\n    cancelModal: function cancelModal(callback) {\n      __log('parent.cancelModal');\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n      this.$emit('cancel');\n    },\n    confirmModal: function confirmModal(callback) {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n      this.$emit('confirm');\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}