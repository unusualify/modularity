{"ast":null,"code":"import _slicedToArray from \"/var/www/crm_template/packages/oobook/crm-base/vue/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectSpread from \"/var/www/crm_template/packages/oobook/crm-base/vue/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/web.timers.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport { mergeProps as _mergeProps, createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VMenu.css\";\n\n// Components\nimport { VDialogTransition } from \"../transitions/index.mjs\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\";\nimport { VOverlay } from \"../VOverlay/index.mjs\"; // Composables\nimport { forwardRefs } from \"../../composables/forwardRefs.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\";\nimport { useScopeId } from \"../../composables/scopeId.mjs\"; // Utilities\nimport { computed, inject, mergeProps, provide, ref, watch } from 'vue';\nimport { genericComponent, getUid, omit, useRender } from \"../../util/index.mjs\";\nimport { filterVOverlayProps, makeVOverlayProps } from \"../VOverlay/VOverlay.mjs\";\nimport { VMenuSymbol } from \"./shared.mjs\"; // Types\nexport var VMenu = genericComponent()({\n  name: 'VMenu',\n  props: _objectSpread({\n    // TODO\n    // disableKeys: Boolean,\n    id: String\n  }, omit(makeVOverlayProps({\n    closeDelay: 250,\n    closeOnContentClick: true,\n    locationStrategy: 'connected',\n    openDelay: 300,\n    scrim: false,\n    scrollStrategy: 'reposition',\n    transition: {\n      component: VDialogTransition\n    }\n  }), ['absolute'])),\n  emits: {\n    'update:modelValue': function updateModelValue(value) {\n      return true;\n    }\n  },\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n    var isActive = useProxiedModel(props, 'modelValue');\n    var _useScopeId = useScopeId(),\n      scopeId = _useScopeId.scopeId;\n    var uid = getUid();\n    var id = computed(function () {\n      return props.id || \"v-menu-\".concat(uid);\n    });\n    var overlay = ref();\n    var parent = inject(VMenuSymbol, null);\n    var openChildren = ref(0);\n    provide(VMenuSymbol, {\n      register: function register() {\n        ++openChildren.value;\n      },\n      unregister: function unregister() {\n        --openChildren.value;\n      },\n      closeParents: function closeParents() {\n        setTimeout(function () {\n          if (!openChildren.value) {\n            isActive.value = false;\n            parent === null || parent === void 0 ? void 0 : parent.closeParents();\n          }\n        }, 40);\n      }\n    });\n    watch(isActive, function (val) {\n      val ? parent === null || parent === void 0 ? void 0 : parent.register() : parent === null || parent === void 0 ? void 0 : parent.unregister();\n    });\n    function onClickOutside() {\n      parent === null || parent === void 0 ? void 0 : parent.closeParents();\n    }\n    var activatorProps = computed(function () {\n      return mergeProps({\n        'aria-haspopup': 'menu',\n        'aria-expanded': String(isActive.value),\n        'aria-owns': id.value\n      }, props.activatorProps);\n    });\n    useRender(function () {\n      var _filterVOverlayProps = filterVOverlayProps(props),\n        _filterVOverlayProps2 = _slicedToArray(_filterVOverlayProps, 1),\n        overlayProps = _filterVOverlayProps2[0];\n      return _createVNode(VOverlay, _mergeProps({\n        \"ref\": overlay,\n        \"class\": ['v-menu']\n      }, overlayProps, {\n        \"modelValue\": isActive.value,\n        \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n          return isActive.value = $event;\n        },\n        \"absolute\": true,\n        \"activatorProps\": activatorProps.value,\n        \"onClick:outside\": onClickOutside\n      }, scopeId), {\n        activator: slots.activator,\n        \"default\": function _default() {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n          return _createVNode(VDefaultsProvider, {\n            \"root\": true\n          }, {\n            \"default\": function _default() {\n              var _slots$default;\n              return [(_slots$default = slots[\"default\"]) === null || _slots$default === void 0 ? void 0 : _slots$default.call.apply(_slots$default, [slots].concat(args))];\n            }\n          });\n        }\n      });\n    });\n    return forwardRefs({\n      id: id,\n      ΨopenChildren: openChildren\n    }, overlay);\n  }\n});","map":{"version":3,"names":["VDialogTransition","VDefaultsProvider","VOverlay","forwardRefs","useProxiedModel","useScopeId","computed","inject","mergeProps","provide","ref","watch","genericComponent","getUid","omit","useRender","filterVOverlayProps","makeVOverlayProps","VMenuSymbol","VMenu","name","props","_objectSpread","id","String","closeDelay","closeOnContentClick","locationStrategy","openDelay","scrim","scrollStrategy","transition","component","emits","updateModelValue","value","setup","_ref","slots","isActive","_useScopeId","scopeId","uid","concat","overlay","parent","openChildren","register","unregister","closeParents","setTimeout","val","onClickOutside","activatorProps","_filterVOverlayProps","_filterVOverlayProps2","_slicedToArray","overlayProps","_createVNode","_mergeProps","onUpdateModelValue","$event","activator","_default","_len","arguments","length","args","Array","_key","_slots$default","call","apply","ΨopenChildren"],"sources":["../../../src/components/VMenu/VMenu.tsx"],"sourcesContent":["// Styles\nimport './VMenu.sass'\n\n// Components\nimport { VDialogTransition } from '@/components/transitions'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VOverlay } from '@/components/VOverlay'\n\n// Composables\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { useScopeId } from '@/composables/scopeId'\n\n// Utilities\nimport { computed, inject, mergeProps, provide, ref, watch } from 'vue'\nimport { genericComponent, getUid, omit, useRender } from '@/util'\nimport { filterVOverlayProps, makeVOverlayProps } from '@/components/VOverlay/VOverlay'\nimport { VMenuSymbol } from './shared'\n\n// Types\nimport type { OverlaySlots } from '@/components/VOverlay/VOverlay'\n\nexport const VMenu = genericComponent<OverlaySlots>()({\n  name: 'VMenu',\n\n  props: {\n    // TODO\n    // disableKeys: Boolean,\n    id: String,\n\n    ...omit(makeVOverlayProps({\n      closeDelay: 250,\n      closeOnContentClick: true,\n      locationStrategy: 'connected' as const,\n      openDelay: 300,\n      scrim: false,\n      scrollStrategy: 'reposition' as const,\n      transition: { component: VDialogTransition },\n    }), ['absolute']),\n  },\n\n  emits: {\n    'update:modelValue': (value: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const isActive = useProxiedModel(props, 'modelValue')\n    const { scopeId } = useScopeId()\n\n    const uid = getUid()\n    const id = computed(() => props.id || `v-menu-${uid}`)\n\n    const overlay = ref<VOverlay>()\n\n    const parent = inject(VMenuSymbol, null)\n    const openChildren = ref(0)\n    provide(VMenuSymbol, {\n      register () {\n        ++openChildren.value\n      },\n      unregister () {\n        --openChildren.value\n      },\n      closeParents () {\n        setTimeout(() => {\n          if (!openChildren.value) {\n            isActive.value = false\n            parent?.closeParents()\n          }\n        }, 40)\n      },\n    })\n\n    watch(isActive, val => {\n      val ? parent?.register() : parent?.unregister()\n    })\n\n    function onClickOutside () {\n      parent?.closeParents()\n    }\n\n    const activatorProps = computed(() =>\n      mergeProps({\n        'aria-haspopup': 'menu',\n        'aria-expanded': String(isActive.value),\n        'aria-owns': id.value,\n      }, props.activatorProps)\n    )\n\n    useRender(() => {\n      const [overlayProps] = filterVOverlayProps(props)\n\n      return (\n        <VOverlay\n          ref={ overlay }\n          class={[\n            'v-menu',\n          ]}\n          { ...overlayProps }\n          v-model={ isActive.value }\n          absolute\n          activatorProps={ activatorProps.value }\n          onClick:outside={ onClickOutside }\n          { ...scopeId }\n        >\n          {{\n            activator: slots.activator,\n            default: (...args) => (\n              <VDefaultsProvider root>\n                { slots.default?.(...args) }\n              </VDefaultsProvider>\n            ),\n          }}\n        </VOverlay>\n      )\n    })\n\n    return forwardRefs({ id, ΨopenChildren: openChildren }, overlay)\n  },\n})\n\nexport type VMenu = InstanceType<typeof VMenu>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}