{"ast":null,"code":"import { mapGetters, mapState } from 'vuex';\nimport { FORM } from '@/store/mutations/index';\nimport ACTIONS from '@/store/actions';\nexport default {\n  // name: \"ue-form\",\n  props: {\n    // value: {\n    //     type: Object,\n    //     default: {}\n    // },\n    inputs: {\n      type: Array\n    },\n    async: {\n      type: Boolean,\n      default: true\n    },\n    hasSubmit: {\n      type: Boolean,\n      default: false\n    },\n    buttonFloat: {\n      type: String,\n      default: 'right'\n    },\n    buttonPosition: {\n      type: String,\n      default: 'bottom'\n    }\n  },\n  data() {\n    return {\n      id: Math.ceil(Math.random() * 1000000) + \"-form\",\n      valid: false,\n      pickDate: false,\n      pickColor: false,\n      mask: '!XNNNNNNNN'\n    };\n  },\n  created() {\n\n    // Object.fromEntries(this.inputs[1].extras.map(v => ([v,true])))\n\n    // console.log(this.inputs[2])\n  },\n  computed: {\n    editedItem: {\n      get() {\n        return this.$store.state.form.editedItem;\n      },\n      set(value) {\n        __log('form->editedItem set', value);\n        // this.$store.commit(FORM.SET_EDITED_ITEM, value);\n      }\n    },\n\n    ...mapState({\n      loading: state => state.form.loading,\n      errors: state => state.form.errors\n    }),\n    ...mapGetters(['defaultItem'])\n  },\n  methods: {\n    update(key, value) {\n      __log('form->update', key, value);\n      // this.$emit('input', { ...this.value, [key]: value })\n    },\n\n    checkProp(object, prop, def = undefined) {\n      return object[prop] !== 'undefined' ? object[prop] : def;\n    },\n    extraProps(props) {\n      return Array.isArray(props.extras) ? Object.fromEntries(props.extras.map(v => [v, true])) : {};\n    },\n    swatchStyle(color) {\n      const {\n        pickColor\n      } = this;\n      return {\n        backgroundColor: color,\n        cursor: 'pointer',\n        height: '30px',\n        width: '30px',\n        borderRadius: pickColor ? '50%' : '4px',\n        transition: 'border-radius 200ms ease-in-out'\n      };\n    },\n    saveForm(callback = null, errorCallback = null) {\n      let fields = {};\n      Object.keys(this.defaultItem).forEach((key, i) => {\n        fields[key] = this.$store.state.form.editedItem[key] == null || this.defaultItem[key] != '' ? this.defaultItem[key] : this.$store.state.form.editedItem[key];\n      });\n      if (!!this.$store.state.form.editedItem.id) fields.id = this.$store.state.form.editedItem.id;\n      this.$store.commit(FORM.SET_EDITED_ITEM, fields);\n      this.$store.dispatch(ACTIONS.SAVE_FORM, {\n        item: null,\n        callback: callback,\n        errorCallback: errorCallback\n      });\n    },\n    submit() {\n      if (this.async) {\n        this.saveForm();\n      }\n\n      // this.$v.$touch()\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}