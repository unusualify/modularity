{"ast":null,"code":"export function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return \"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, mergeProps as _mergeProps, createBlock as _createBlock, withCtx as _withCtx } from \\\"vue\\\" export function render(_ctx, _cache, $props, $setup, $data, $options) { const _component_v_radio = _resolveComponent(\\\"v-radio\\\") const _component_v_radio_group = _resolveComponent(\\\"v-radio-group\\\") return (_openBlock(), _createBlock(_component_v_radio_group, _mergeProps({ value: _ctx.value, onChange: _cache[0] || (_cache[0] = $event => (_ctx.update($event))), \\\"error-messages\\\": _ctx.errorMessages(_ctx.attributes.name) }, _ctx.props), { default: _withCtx(() => [ (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.attributes.options, (option, n) => { return (_openBlock(), _createBlock(_component_v_radio, _mergeProps({ value: option.value, key: n, label: option.label, id: `${_ctx.id}-radio-option${n}` }, _ctx.secondaryProps), null, 16 /* FULL_PROPS */, [\\\"value\\\", \\\"label\\\", \\\"id\\\"])) }), 128 /* KEYED_FRAGMENT */)) ]), _: 1 /* STABLE */ }, 16 /* FULL_PROPS */, [\\\"value\\\", \\\"error-messages\\\"])) }\";\n}","map":{"version":3,"names":[],"sources":["/var/www/crm_template/packages/oobook/crm-base/vue/src/js/components/inputs/Radio.vue"],"sourcesContent":["<template>\n    <v-radio-group \n        :value=\"value\"\n        @change=\"update($event)\"\n        :error-messages=\"errorMessages(attributes.name)\"\n        \n        v-bind=\"props\"\n    >\n        <v-radio\n            v-for=\"(option,n) in attributes.options\"\n            :value=\"option.value\"\n            :key=\"n\"\n            :label=\"option.label\"\n            :id=\"`${id}-radio-option${n}`\"\n\n            v-bind=\"secondaryProps\"\n        ></v-radio>\n    </v-radio-group>\n</template>\n\n<script>\nimport { InputMixin } from '@/mixins'\n\nexport default {\n    mixins: [InputMixin],\n\n    props: {\n        // value: {\n        //     type: Number,\n        //     default: 0,\n        // },\n    }\n}\n</script>"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}