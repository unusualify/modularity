{"ast":null,"code":"import _objectSpread from \"/var/www/crm_template/packages/oobook/crm-base/vue/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { renderSlot as _renderSlot, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, toHandlers as _toHandlers, mergeProps as _mergeProps, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _this = this;\n  var _component_v_spacer = _resolveComponent(\"v-spacer\");\n  var _component_v_icon = _resolveComponent(\"v-icon\");\n  var _component_v_system_bar = _resolveComponent(\"v-system-bar\");\n  var _component_v_card = _resolveComponent(\"v-card\");\n  var _component_v_dialog = _resolveComponent(\"v-dialog\");\n  return _openBlock(), _createBlock(_component_v_dialog, _mergeProps({\n    modelValue: $options.dialog,\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n      return $options.dialog = $event;\n    })\n  }, _toHandlers({\n    toggleFullScreen: $options.toggleFullScreen\n  }), _ctx.bindProps(), {\n    fullscreen: $data.full,\n    width: $options.modalWidth\n  }), {\n    activator: _withCtx(function (_ref) {\n      var on = _ref.on,\n        attrs = _ref.attrs;\n      return [_renderSlot(_ctx.$slots, \"activator\", {\n        attrs: _objectSpread({}, attrs),\n        on: _objectSpread({}, on)\n      }, function () {\n        return [_createCommentVNode(\" <v-btn\\n                    color=\\\"primary\\\"\\n                    dark\\n                    class=\\\"mb-2\\\"\\n                    v-bind=\\\"{attrs}\\\"\\n                    v-on=\\\"on\\\"\\n                    >\\n                    {{ $tc('show') }}\\n                </v-btn> \")];\n      })];\n    }),\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_v_card, null, {\n        \"default\": _withCtx(function () {\n          return [$props.systembar ? _renderSlot(_ctx.$slots, \"systembar\", {\n            key: 0\n          }, function () {\n            return [_createVNode(_component_v_system_bar, {\n              window: \"\",\n              dark: \"\"\n            }, {\n              \"default\": _withCtx(function () {\n                return [_createVNode(_component_v_spacer), _createVNode(_component_v_icon, {\n                  onClick: _cache[0] || (_cache[0] = function ($event) {\n                    return $options.toggleFullScreen();\n                  }),\n                  \"x-small\": $data.full\n                }, {\n                  \"default\": _withCtx(function () {\n                    return [_createTextVNode(\" mdi-checkbox-blank-outline \")];\n                  }),\n                  _: 1 /* STABLE */\n                }, 8 /* PROPS */, [\"x-small\"]), _createCommentVNode(\" <v-icon @click=\\\"cancelModal(on.closeDialog)\\\" >mdi-close</v-icon> \"), _createVNode(_component_v_icon, {\n                  onClick: _cache[1] || (_cache[1] = function ($event) {\n                    return $options.close();\n                  })\n                }, {\n                  \"default\": _withCtx(function () {\n                    return [_createTextVNode(\"mdi-close\")];\n                  }),\n                  _: 1 /* STABLE */\n                })];\n              }),\n\n              _: 1 /* STABLE */\n            })];\n          }) : _createCommentVNode(\"v-if\", true), _renderSlot(_ctx.$slots, \"body\", {\n            attrs: {},\n            on: {\n              openDialog: _this.open,\n              closeDialog: _this.close,\n              confirmDialog: _this.confirm\n            },\n            closeDialog: $options.close\n          })];\n        }),\n        _: 3 /* FORWARDED */\n      })];\n    }),\n\n    _: 3 /* FORWARDED */\n  }, 16 /* FULL_PROPS */, [\"modelValue\", \"fullscreen\", \"width\"]);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}