{"ast":null,"code":"import _objectSpread from \"/var/www/crm_template/packages/oobook/crm-base/vue/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VAvatar.css\";\n\n// Components\nimport { VIcon } from \"../VIcon/index.mjs\";\nimport { VImg } from \"../VImg/index.mjs\"; // Composables\nimport { genOverlays, makeVariantProps, useVariant } from \"../../composables/variant.mjs\";\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { makeDensityProps, useDensity } from \"../../composables/density.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeSizeProps, useSize } from \"../../composables/size.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\"; // Utilities\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.mjs\";\nexport var makeVAvatarProps = propsFactory(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({\n  start: Boolean,\n  end: Boolean,\n  icon: IconValue,\n  image: String\n}, makeDensityProps()), makeRoundedProps()), makeSizeProps()), makeTagProps()), makeThemeProps()), makeVariantProps({\n  variant: 'flat'\n})), 'v-avatar');\nexport var VAvatar = genericComponent()({\n  name: 'VAvatar',\n  props: makeVAvatarProps(),\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n    var _provideTheme = provideTheme(props),\n      themeClasses = _provideTheme.themeClasses;\n    var _useVariant = useVariant(props),\n      colorClasses = _useVariant.colorClasses,\n      colorStyles = _useVariant.colorStyles,\n      variantClasses = _useVariant.variantClasses;\n    var _useDensity = useDensity(props),\n      densityClasses = _useDensity.densityClasses;\n    var _useRounded = useRounded(props),\n      roundedClasses = _useRounded.roundedClasses;\n    var _useSize = useSize(props),\n      sizeClasses = _useSize.sizeClasses,\n      sizeStyles = _useSize.sizeStyles;\n    useRender(function () {\n      return _createVNode(props.tag, {\n        \"class\": ['v-avatar', {\n          'v-avatar--start': props.start,\n          'v-avatar--end': props.end\n        }, themeClasses.value, colorClasses.value, densityClasses.value, roundedClasses.value, sizeClasses.value, variantClasses.value],\n        \"style\": [colorStyles.value, sizeStyles.value]\n      }, {\n        \"default\": function _default() {\n          var _slots$default;\n          return [props.image ? _createVNode(VImg, {\n            \"key\": \"image\",\n            \"src\": props.image,\n            \"alt\": \"\",\n            \"cover\": true\n          }, null) : props.icon ? _createVNode(VIcon, {\n            \"key\": \"icon\",\n            \"icon\": props.icon\n          }, null) : (_slots$default = slots[\"default\"]) === null || _slots$default === void 0 ? void 0 : _slots$default.call(slots), genOverlays(false, 'v-avatar')];\n        }\n      });\n    });\n    return {};\n  }\n});","map":{"version":3,"names":["VIcon","VImg","genOverlays","makeVariantProps","useVariant","IconValue","makeDensityProps","useDensity","makeRoundedProps","useRounded","makeSizeProps","useSize","makeTagProps","makeThemeProps","provideTheme","genericComponent","propsFactory","useRender","makeVAvatarProps","_objectSpread","start","Boolean","end","icon","image","String","variant","VAvatar","name","props","setup","_ref","slots","_provideTheme","themeClasses","_useVariant","colorClasses","colorStyles","variantClasses","_useDensity","densityClasses","_useRounded","roundedClasses","_useSize","sizeClasses","sizeStyles","_createVNode","tag","value","_default","_slots$default","call"],"sources":["../../../src/components/VAvatar/VAvatar.tsx"],"sourcesContent":["// Styles\nimport './VAvatar.sass'\n\n// Components\nimport { VIcon } from '@/components/VIcon'\nimport { VImg } from '@/components/VImg'\n\n// Composables\nimport { genOverlays, makeVariantProps, useVariant } from '@/composables/variant'\nimport { IconValue } from '@/composables/icons'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeSizeProps, useSize } from '@/composables/size'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\n\n// Utilities\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVAvatarProps = propsFactory({\n  start: Boolean,\n  end: Boolean,\n  icon: IconValue,\n  image: String,\n\n  ...makeDensityProps(),\n  ...makeRoundedProps(),\n  ...makeSizeProps(),\n  ...makeTagProps(),\n  ...makeThemeProps(),\n  ...makeVariantProps({ variant: 'flat' } as const),\n}, 'v-avatar')\n\nexport const VAvatar = genericComponent()({\n  name: 'VAvatar',\n\n  props: makeVAvatarProps(),\n\n  setup (props, { slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { colorClasses, colorStyles, variantClasses } = useVariant(props)\n    const { densityClasses } = useDensity(props)\n    const { roundedClasses } = useRounded(props)\n    const { sizeClasses, sizeStyles } = useSize(props)\n\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-avatar',\n          {\n            'v-avatar--start': props.start,\n            'v-avatar--end': props.end,\n          },\n          themeClasses.value,\n          colorClasses.value,\n          densityClasses.value,\n          roundedClasses.value,\n          sizeClasses.value,\n          variantClasses.value,\n        ]}\n        style={[\n          colorStyles.value,\n          sizeStyles.value,\n        ]}\n      >\n        { props.image\n          ? (<VImg key=\"image\" src={ props.image } alt=\"\" cover />)\n          : props.icon\n            ? (<VIcon key=\"icon\" icon={ props.icon } />)\n            : slots.default?.()\n        }\n\n        { genOverlays(false, 'v-avatar') }\n      </props.tag>\n    ))\n\n    return {}\n  },\n})\n\nexport type VAvatar = InstanceType<typeof VAvatar>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}