{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\n// Composables\nimport { useProxiedModel } from \"./proxiedModel.mjs\"; // Utilities\nimport { computed, inject, onBeforeUnmount, onMounted, provide, reactive, toRef, watch } from 'vue';\nimport { consoleWarn, deepEqual, findChildrenWithProvide, getCurrentInstance, getUid, propsFactory, wrapInArray } from \"../util/index.mjs\"; // Types\nexport var makeGroupProps = propsFactory({\n  modelValue: {\n    type: null,\n    \"default\": undefined\n  },\n  multiple: Boolean,\n  mandatory: [Boolean, String],\n  max: Number,\n  selectedClass: String,\n  disabled: Boolean\n}, 'group');\nexport var makeGroupItemProps = propsFactory({\n  value: null,\n  disabled: Boolean,\n  selectedClass: String\n}, 'group-item');\nexport function useGroupItem(props, injectKey) {\n  var required = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  var vm = getCurrentInstance('useGroupItem');\n  if (!vm) {\n    throw new Error('[Vuetify] useGroupItem composable must be used inside a component setup function');\n  }\n  var id = getUid();\n  provide(Symbol[\"for\"](\"\".concat(injectKey.description, \":id\")), id);\n  var group = inject(injectKey, null);\n  if (!group) {\n    if (!required) return group;\n    throw new Error(\"[Vuetify] Could not find useGroup injection with symbol \".concat(injectKey.description));\n  }\n  var value = toRef(props, 'value');\n  var disabled = computed(function () {\n    return group.disabled.value || props.disabled;\n  });\n  group.register({\n    id: id,\n    value: value,\n    disabled: disabled\n  }, vm);\n  onBeforeUnmount(function () {\n    group.unregister(id);\n  });\n  var isSelected = computed(function () {\n    return group.isSelected(id);\n  });\n  var selectedClass = computed(function () {\n    return isSelected.value && [group.selectedClass.value, props.selectedClass];\n  });\n  watch(isSelected, function (value) {\n    vm.emit('group:selected', {\n      value: value\n    });\n  });\n  return {\n    id: id,\n    isSelected: isSelected,\n    toggle: function toggle() {\n      return group.select(id, !isSelected.value);\n    },\n    select: function select(value) {\n      return group.select(id, value);\n    },\n    selectedClass: selectedClass,\n    value: value,\n    disabled: disabled,\n    group: group\n  };\n}\nexport function useGroup(props, injectKey) {\n  var isUnmounted = false;\n  var items = reactive([]);\n  var selected = useProxiedModel(props, 'modelValue', [], function (v) {\n    if (v == null) return [];\n    return getIds(items, wrapInArray(v));\n  }, function (v) {\n    var arr = getValues(items, v);\n    return props.multiple ? arr : arr[0];\n  });\n  var groupVm = getCurrentInstance('useGroup');\n  function register(item, vm) {\n    // Is there a better way to fix this typing?\n    var unwrapped = item;\n    var key = Symbol[\"for\"](\"\".concat(injectKey.description, \":id\"));\n    var children = findChildrenWithProvide(key, groupVm === null || groupVm === void 0 ? void 0 : groupVm.vnode);\n    var index = children.indexOf(vm);\n    if (index > -1) {\n      items.splice(index, 0, unwrapped);\n    } else {\n      items.push(unwrapped);\n    }\n  }\n  function unregister(id) {\n    if (isUnmounted) return;\n\n    // TODO: re-evaluate this line's importance in the future\n    // should we only modify the model if mandatory is set.\n    // selected.value = selected.value.filter(v => v !== id)\n\n    forceMandatoryValue();\n    var index = items.findIndex(function (item) {\n      return item.id === id;\n    });\n    items.splice(index, 1);\n  }\n\n  // If mandatory and nothing is selected, then select first non-disabled item\n  function forceMandatoryValue() {\n    var item = items.find(function (item) {\n      return !item.disabled;\n    });\n    if (item && props.mandatory === 'force' && !selected.value.length) {\n      selected.value = [item.id];\n    }\n  }\n  onMounted(function () {\n    forceMandatoryValue();\n  });\n  onBeforeUnmount(function () {\n    isUnmounted = true;\n  });\n  function select(id, value) {\n    var item = items.find(function (item) {\n      return item.id === id;\n    });\n    if (value && item !== null && item !== void 0 && item.disabled) return;\n    if (props.multiple) {\n      var _value;\n      var internalValue = selected.value.slice();\n      var index = internalValue.findIndex(function (v) {\n        return v === id;\n      });\n      var isSelected = ~index;\n      value = (_value = value) !== null && _value !== void 0 ? _value : !isSelected;\n\n      // We can't remove value if group is\n      // mandatory, value already exists,\n      // and it is the only value\n      if (isSelected && props.mandatory && internalValue.length <= 1) return;\n\n      // We can't add value if it would\n      // cause max limit to be exceeded\n      if (!isSelected && props.max != null && internalValue.length + 1 > props.max) return;\n      if (index < 0 && value) internalValue.push(id);else if (index >= 0 && !value) internalValue.splice(index, 1);\n      selected.value = internalValue;\n    } else {\n      var _value2;\n      var _isSelected = selected.value.includes(id);\n      if (props.mandatory && _isSelected) return;\n      selected.value = ((_value2 = value) !== null && _value2 !== void 0 ? _value2 : !_isSelected) ? [id] : [];\n    }\n  }\n  function step(offset) {\n    // getting an offset from selected value obviously won't work with multiple values\n    if (props.multiple) consoleWarn('This method is not supported when using \"multiple\" prop');\n    if (!selected.value.length) {\n      var item = items.find(function (item) {\n        return !item.disabled;\n      });\n      item && (selected.value = [item.id]);\n    } else {\n      var currentId = selected.value[0];\n      var currentIndex = items.findIndex(function (i) {\n        return i.id === currentId;\n      });\n      var newIndex = (currentIndex + offset) % items.length;\n      var newItem = items[newIndex];\n      while (newItem.disabled && newIndex !== currentIndex) {\n        newIndex = (newIndex + offset) % items.length;\n        newItem = items[newIndex];\n      }\n      if (newItem.disabled) return;\n      selected.value = [items[newIndex].id];\n    }\n  }\n  var state = {\n    register: register,\n    unregister: unregister,\n    selected: selected,\n    select: select,\n    disabled: toRef(props, 'disabled'),\n    prev: function prev() {\n      return step(items.length - 1);\n    },\n    next: function next() {\n      return step(1);\n    },\n    isSelected: function isSelected(id) {\n      return selected.value.includes(id);\n    },\n    selectedClass: computed(function () {\n      return props.selectedClass;\n    }),\n    items: computed(function () {\n      return items;\n    }),\n    getItemIndex: function getItemIndex(value) {\n      return _getItemIndex(items, value);\n    }\n  };\n  provide(injectKey, state);\n  return state;\n}\nfunction _getItemIndex(items, value) {\n  var ids = getIds(items, [value]);\n  if (!ids.length) return -1;\n  return items.findIndex(function (item) {\n    return item.id === ids[0];\n  });\n}\nfunction getIds(items, modelValue) {\n  var ids = [];\n  var _loop = function _loop() {\n    var item = items[i];\n    if (item.value != null) {\n      if (modelValue.find(function (value) {\n        return deepEqual(value, item.value);\n      }) != null) {\n        ids.push(item.id);\n      }\n    } else if (modelValue.includes(i)) {\n      ids.push(item.id);\n    }\n  };\n  for (var i = 0; i < items.length; i++) {\n    _loop();\n  }\n  return ids;\n}\nfunction getValues(items, ids) {\n  var values = [];\n  for (var i = 0; i < items.length; i++) {\n    var item = items[i];\n    if (ids.includes(item.id)) {\n      values.push(item.value != null ? item.value : i);\n    }\n  }\n  return values;\n}","map":{"version":3,"names":["useProxiedModel","computed","inject","onBeforeUnmount","onMounted","provide","reactive","toRef","watch","consoleWarn","deepEqual","findChildrenWithProvide","getCurrentInstance","getUid","propsFactory","wrapInArray","makeGroupProps","modelValue","type","undefined","multiple","Boolean","mandatory","String","max","Number","selectedClass","disabled","makeGroupItemProps","value","useGroupItem","props","injectKey","required","arguments","length","vm","Error","id","Symbol","concat","description","group","register","unregister","isSelected","emit","toggle","select","useGroup","isUnmounted","items","selected","v","getIds","arr","getValues","groupVm","item","unwrapped","key","children","vnode","index","indexOf","splice","push","forceMandatoryValue","findIndex","find","_value","internalValue","slice","_value2","includes","step","offset","currentId","currentIndex","i","newIndex","newItem","state","prev","next","getItemIndex","ids","_loop","values"],"sources":["../../src/composables/group.ts"],"sourcesContent":["// Composables\nimport { useProxiedModel } from './proxiedModel'\n\n// Utilities\nimport { computed, inject, onBeforeUnmount, onMounted, provide, reactive, toRef, watch } from 'vue'\nimport { consoleWarn, deepEqual, findChildrenWithProvide, getCurrentInstance, getUid, propsFactory, wrapInArray } from '@/util'\n\n// Types\nimport type { ComponentInternalInstance, ComputedRef, ExtractPropTypes, InjectionKey, PropType, Ref, UnwrapRef } from 'vue'\n\nexport interface GroupItem {\n  id: number\n  value: Ref<unknown>\n  disabled: Ref<boolean | undefined>\n}\n\nexport interface GroupProps {\n  disabled: boolean\n  modelValue: unknown\n  multiple?: boolean\n  mandatory?: boolean | 'force' | undefined\n  max?: number | undefined\n  selectedClass: string | undefined\n  'onUpdate:modelValue': ((val: unknown) => void) | undefined\n}\n\nexport interface GroupProvide {\n  register: (item: GroupItem, cmp: ComponentInternalInstance) => void\n  unregister: (id: number) => void\n  select: (id: number, value: boolean) => void\n  selected: Ref<Readonly<number[]>>\n  isSelected: (id: number) => boolean\n  prev: () => void\n  next: () => void\n  selectedClass: Ref<string | undefined>\n  items: ComputedRef<{\n    id: number\n    value: unknown\n    disabled: boolean | undefined\n  }[]>\n  disabled: Ref<boolean | undefined>\n  getItemIndex: (value: unknown) => number\n}\n\nexport interface GroupItemProvide {\n  id: number\n  isSelected: Ref<boolean>\n  toggle: () => void\n  select: (value: boolean) => void\n  selectedClass: Ref<(string | undefined)[] | false>\n  value: Ref<unknown>\n  disabled: Ref<boolean | undefined>\n  group: GroupProvide\n}\n\nexport const makeGroupProps = propsFactory({\n  modelValue: {\n    type: null,\n    default: undefined,\n  },\n  multiple: Boolean,\n  mandatory: [Boolean, String] as PropType<boolean | 'force'>,\n  max: Number,\n  selectedClass: String,\n  disabled: Boolean,\n}, 'group')\n\nexport const makeGroupItemProps = propsFactory({\n  value: null,\n  disabled: Boolean,\n  selectedClass: String,\n}, 'group-item')\n\nexport interface GroupItemProps extends ExtractPropTypes<ReturnType<typeof makeGroupItemProps>> {\n  'onGroup:selected': ((val: { value: boolean }) => void) | undefined\n}\n\n// Composables\nexport function useGroupItem (\n  props: GroupItemProps,\n  injectKey: InjectionKey<GroupProvide>,\n  required?: true,\n): GroupItemProvide\nexport function useGroupItem (\n  props: GroupItemProps,\n  injectKey: InjectionKey<GroupProvide>,\n  required: false,\n): GroupItemProvide | null\nexport function useGroupItem (\n  props: GroupItemProps,\n  injectKey: InjectionKey<GroupProvide>,\n  required = true,\n): GroupItemProvide | null {\n  const vm = getCurrentInstance('useGroupItem')\n\n  if (!vm) {\n    throw new Error(\n      '[Vuetify] useGroupItem composable must be used inside a component setup function'\n    )\n  }\n\n  const id = getUid()\n\n  provide(Symbol.for(`${injectKey.description}:id`), id)\n\n  const group = inject(injectKey, null)\n\n  if (!group) {\n    if (!required) return group\n\n    throw new Error(`[Vuetify] Could not find useGroup injection with symbol ${injectKey.description}`)\n  }\n\n  const value = toRef(props, 'value')\n  const disabled = computed(() => group.disabled.value || props.disabled)\n\n  group.register({\n    id,\n    value,\n    disabled,\n  }, vm)\n\n  onBeforeUnmount(() => {\n    group.unregister(id)\n  })\n\n  const isSelected = computed(() => {\n    return group.isSelected(id)\n  })\n\n  const selectedClass = computed(() => isSelected.value && [group.selectedClass.value, props.selectedClass])\n\n  watch(isSelected, value => {\n    vm.emit('group:selected', { value })\n  })\n\n  return {\n    id,\n    isSelected,\n    toggle: () => group.select(id, !isSelected.value),\n    select: (value: boolean) => group.select(id, value),\n    selectedClass,\n    value,\n    disabled,\n    group,\n  }\n}\n\nexport function useGroup (\n  props: GroupProps,\n  injectKey: InjectionKey<GroupProvide>\n) {\n  let isUnmounted = false\n  const items = reactive<GroupItem[]>([])\n  const selected = useProxiedModel(\n    props,\n    'modelValue',\n    [],\n    v => {\n      if (v == null) return []\n\n      return getIds(items, wrapInArray(v))\n    },\n    v => {\n      const arr = getValues(items, v)\n\n      return props.multiple ? arr : arr[0]\n    }\n  )\n\n  const groupVm = getCurrentInstance('useGroup')\n\n  function register (item: GroupItem, vm: ComponentInternalInstance) {\n    // Is there a better way to fix this typing?\n    const unwrapped = item as unknown as UnwrapRef<GroupItem>\n\n    const key = Symbol.for(`${injectKey.description}:id`)\n    const children = findChildrenWithProvide(key, groupVm?.vnode)\n    const index = children.indexOf(vm)\n\n    if (index > -1) {\n      items.splice(index, 0, unwrapped)\n    } else {\n      items.push(unwrapped)\n    }\n  }\n\n  function unregister (id: number) {\n    if (isUnmounted) return\n\n    // TODO: re-evaluate this line's importance in the future\n    // should we only modify the model if mandatory is set.\n    // selected.value = selected.value.filter(v => v !== id)\n\n    forceMandatoryValue()\n\n    const index = items.findIndex(item => item.id === id)\n    items.splice(index, 1)\n  }\n\n  // If mandatory and nothing is selected, then select first non-disabled item\n  function forceMandatoryValue () {\n    const item = items.find(item => !item.disabled)\n    if (item && props.mandatory === 'force' && !selected.value.length) {\n      selected.value = [item.id]\n    }\n  }\n\n  onMounted(() => {\n    forceMandatoryValue()\n  })\n\n  onBeforeUnmount(() => {\n    isUnmounted = true\n  })\n\n  function select (id: number, value?: boolean) {\n    const item = items.find(item => item.id === id)\n    if (value && item?.disabled) return\n\n    if (props.multiple) {\n      const internalValue = selected.value.slice()\n      const index = internalValue.findIndex(v => v === id)\n      const isSelected = ~index\n      value = value ?? !isSelected\n\n      // We can't remove value if group is\n      // mandatory, value already exists,\n      // and it is the only value\n      if (\n        isSelected &&\n        props.mandatory &&\n        internalValue.length <= 1\n      ) return\n\n      // We can't add value if it would\n      // cause max limit to be exceeded\n      if (\n        !isSelected &&\n        props.max != null &&\n        internalValue.length + 1 > props.max\n      ) return\n\n      if (index < 0 && value) internalValue.push(id)\n      else if (index >= 0 && !value) internalValue.splice(index, 1)\n\n      selected.value = internalValue\n    } else {\n      const isSelected = selected.value.includes(id)\n      if (props.mandatory && isSelected) return\n\n      selected.value = (value ?? !isSelected) ? [id] : []\n    }\n  }\n\n  function step (offset: number) {\n    // getting an offset from selected value obviously won't work with multiple values\n    if (props.multiple) consoleWarn('This method is not supported when using \"multiple\" prop')\n\n    if (!selected.value.length) {\n      const item = items.find(item => !item.disabled)\n      item && (selected.value = [item.id])\n    } else {\n      const currentId = selected.value[0]\n      const currentIndex = items.findIndex(i => i.id === currentId)\n\n      let newIndex = (currentIndex + offset) % items.length\n      let newItem = items[newIndex]\n\n      while (newItem.disabled && newIndex !== currentIndex) {\n        newIndex = (newIndex + offset) % items.length\n        newItem = items[newIndex]\n      }\n\n      if (newItem.disabled) return\n\n      selected.value = [items[newIndex].id]\n    }\n  }\n\n  const state: GroupProvide = {\n    register,\n    unregister,\n    selected,\n    select,\n    disabled: toRef(props, 'disabled'),\n    prev: () => step(items.length - 1),\n    next: () => step(1),\n    isSelected: (id: number) => selected.value.includes(id),\n    selectedClass: computed(() => props.selectedClass),\n    items: computed(() => items),\n    getItemIndex: (value: unknown) => getItemIndex(items, value),\n  }\n\n  provide(injectKey, state)\n\n  return state\n}\n\nfunction getItemIndex (items: UnwrapRef<GroupItem[]>, value: unknown) {\n  const ids = getIds(items, [value])\n\n  if (!ids.length) return -1\n\n  return items.findIndex(item => item.id === ids[0])\n}\n\nfunction getIds (items: UnwrapRef<GroupItem[]>, modelValue: any[]) {\n  const ids = []\n  for (let i = 0; i < items.length; i++) {\n    const item = items[i]\n\n    if (item.value != null) {\n      if (modelValue.find(value => deepEqual(value, item.value)) != null) {\n        ids.push(item.id)\n      }\n    } else if (modelValue.includes(i)) {\n      ids.push(item.id)\n    }\n  }\n\n  return ids\n}\n\nfunction getValues (items: UnwrapRef<GroupItem[]>, ids: any[]) {\n  const values = []\n\n  for (let i = 0; i < items.length; i++) {\n    const item = items[i]\n\n    if (ids.includes(item.id)) {\n      values.push(item.value != null ? item.value : i)\n    }\n  }\n\n  return values\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}