{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.concat.js\";\n// Utilities\nimport { computed } from 'vue';\nimport { getCurrentInstanceName, propsFactory } from \"../util/index.mjs\"; // Types\nvar allowedDensities = [null, 'default', 'comfortable', 'compact'];\n\n// typeof allowedDensities[number] evalutes to any\n// when generating api types for whatever reason.\n\n// Composables\nexport var makeDensityProps = propsFactory({\n  density: {\n    type: String,\n    \"default\": 'default',\n    validator: function validator(v) {\n      return allowedDensities.includes(v);\n    }\n  }\n}, 'density');\nexport function useDensity(props) {\n  var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getCurrentInstanceName();\n  var densityClasses = computed(function () {\n    return \"\".concat(name, \"--density-\").concat(props.density);\n  });\n  return {\n    densityClasses: densityClasses\n  };\n}","map":{"version":3,"names":["computed","getCurrentInstanceName","propsFactory","allowedDensities","makeDensityProps","density","type","String","validator","v","includes","useDensity","props","name","arguments","length","undefined","densityClasses","concat"],"sources":["../../src/composables/density.ts"],"sourcesContent":["// Utilities\nimport { computed } from 'vue'\nimport { getCurrentInstanceName, propsFactory } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\nconst allowedDensities = [null, 'default', 'comfortable', 'compact'] as const\n\n// typeof allowedDensities[number] evalutes to any\n// when generating api types for whatever reason.\nexport type Density = null | 'default' | 'comfortable' | 'compact'\n\nexport interface DensityProps {\n  density?: Density\n}\n\n// Composables\nexport const makeDensityProps = propsFactory({\n  density: {\n    type: String as PropType<Density>,\n    default: 'default',\n    validator: (v: any) => allowedDensities.includes(v),\n  },\n}, 'density')\n\nexport function useDensity (\n  props: DensityProps,\n  name = getCurrentInstanceName(),\n) {\n  const densityClasses = computed(() => {\n    return `${name}--density-${props.density}`\n  })\n\n  return { densityClasses }\n}\n"],"mappings":";;AAAA;AACA,SAASA,QAAQ,QAAQ,KAAK;AAAA,SACrBC,sBAAsB,EAAEC,YAAY,6BAE7C;AAGA,IAAMC,gBAAgB,GAAG,CAAC,IAAI,EAAE,SAAS,EAAE,aAAa,EAAE,SAAS,CAAU;;AAE7E;AACA;;AAOA;AACA,OAAO,IAAMC,gBAAgB,GAAGF,YAAY,CAAC;EAC3CG,OAAO,EAAE;IACPC,IAAI,EAAEC,MAA2B;IACjC,WAAS,SAAS;IAClBC,SAAS,EAAG,SAAAA,UAAAC,CAAM;MAAA,OAAKN,gBAAgB,CAACO,QAAQ,CAACD,CAAC;IAAA;EACpD;AACF,CAAC,EAAE,SAAS,CAAC;AAEb,OAAO,SAASE,UAAUA,CACxBC,KAAmB,EAEnB;EAAA,IADAC,IAAI,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGb,sBAAsB,EAAE;EAE/B,IAAMgB,cAAc,GAAGjB,QAAQ,CAAC,YAAM;IACpC,UAAAkB,MAAA,CAAUL,IAAK,gBAAAK,MAAA,CAAYN,KAAK,CAACP,OAAQ;EAC3C,CAAC,CAAC;EAEF,OAAO;IAAEY,cAAA,EAAAA;EAAe,CAAC;AAC3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}