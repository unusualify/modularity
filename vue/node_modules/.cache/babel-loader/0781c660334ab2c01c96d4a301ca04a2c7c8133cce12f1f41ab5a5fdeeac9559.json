{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport { mapState, mapGetters } from 'vuex';\nimport htmlClasses from '@/utils/htmlClasses';\nexport default {\n  props: {\n    value: {\n      type: Boolean,\n      \"default\": false\n    },\n    cancelText: {\n      type: String,\n      \"default\": ''\n    },\n    confirmText: {\n      type: String,\n      \"default\": ''\n    }\n  },\n  data: function data() {\n    return {\n      id: Math.ceil(Math.random() * 1000000) + \"-modal\",\n      show: this.value\n    };\n  },\n  computed: {\n    // show: {\n    //     get () {\n    //         return this.value\n    //     },\n    //     set (value) {\n    //         // __log('mixins/modal->show->setter', value)\n    //         this.$emit('input', value)\n    //         // __log(this.show)\n    //     }\n    // },\n    textCancel: function textCancel() {\n      return this.cancelText != '' ? this.cancelText : this.$t('cancel');\n    },\n    textConfirm: function textConfirm() {\n      return this.confirmText != '' ? this.confirmText : this.$t('confirm');\n    }\n  },\n  methods: {\n    setValue: function setValue(e) {\n      __log('setValue', e.target.name);\n      this[e.target.name] = e.target.value;\n    },\n    openModal: function openModal() {\n      this.show = true;\n    },\n    closeModal: function closeModal() {\n      this.show = false;\n    },\n    cancelModal: function cancelModal() {\n      if (typeof this.cancelCallback == \"undefined\") {\n        this.closeModal();\n      } else {\n        this.cancelCallback();\n      }\n      this.$emit('cancel');\n    },\n    confirmModal: function confirmModal() {\n      if (typeof this.confirmCallback == \"undefined\") {\n        this.closeModal();\n      } else {\n        this.confirmCallback();\n      }\n      this.$emit('confirm');\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}