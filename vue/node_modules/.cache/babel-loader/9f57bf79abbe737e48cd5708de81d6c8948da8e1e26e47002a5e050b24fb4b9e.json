{"ast":null,"code":"import _defineProperty from \"/var/www/crm_template/packages/oobook/crm-base/vue/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport { mapState } from 'vuex';\nimport { DATATABLE, FORM, ALERT } from '@/store/mutations';\nimport ACTIONS from '@/store/actions';\nimport { DatatableMixin } from '@/mixins';\nexport default {\n  mixins: [DatatableMixin],\n  data: function data() {\n    return {\n      formModalActive: false,\n      dialogActive: false,\n      langs: ['tr', 'en'],\n      cellInput: ''\n    };\n  },\n  computed: {\n    dialogDescription: function dialogDescription() {\n      return this.$t('confirm-deletion', {\n        route: this.transName.toLowerCase(),\n        name: this.editedItem[this.titleKey]\n      });\n    },\n    transName: function transName() {\n      return this.$t('modules.' + this.name.toLowerCase());\n    }\n  },\n  watch: {\n    formModalActive: function formModalActive(val) {\n      val || this.resetEditedItem();\n    },\n    dialogActive: function dialogActive(val) {\n      val || this.resetEditedItem();\n    },\n    editedItem: function editedItem(val) {\n      // console.log('editedItem watcher', this.editedItem )\n    }\n  },\n  beforeCreate: function beforeCreate() {},\n  created: function created() {},\n  mounted: function mounted() {},\n  methods: {\n    editItem: function editItem(item) {\n      this.editedIndex = this.elements.indexOf(item);\n      this.editedItem = Object.assign({}, item);\n      this.formModalActive = true;\n    },\n    emitEditedItem: function emitEditedItem(v) {\n      this.editedItem = v;\n    },\n    confirmForm: function confirmForm(editedItem) {\n      var _this = this;\n      this.$store.commit(FORM.UPDATE_FORM_LOADING, true);\n      __log(editedItem);\n      this.$store.dispatch(ACTIONS.SAVE_FORM, editedItem).then(function () {\n        _this.$nextTick(function () {\n          // this.$store.dispatch(ACTIONS.GET_DATATABLE)\n          this.formModalActive = false;\n        });\n      }, function (errorResponse) {\n        // this.$store.commit(NOTIFICATION.SET_NOTIF, {\n        //   message: 'Your content can not be edited, please retry',\n        //   variant: 'error'\n        // })\n      });\n    },\n    deleteItem: function deleteItem(item) {\n      this.setEditedItem(item);\n      this.openDialog();\n    },\n    openDialog: function openDialog() {\n      this.dialogActive = true;\n    },\n    confirmDialog: function confirmDialog() {\n      this[\"delete\"](this.editedItem);\n    },\n    \"delete\": function _delete(item) {\n      this.$store.dispatch(ACTIONS.DELETE_ITEM, item);\n    },\n    columnChanged: function columnChanged(value) {\n      this.cellInput = value;\n    },\n    openColumnEdit: function openColumnEdit(item) {\n      // this.resetEditedItem();\n      this.setEditedItem(item);\n      // this.$store.commit(ALERT.SET_ALERT, {\n      //   variant: 'info',\n      //   message: 'Dialog Opened'\n      // })\n      // this.$root.$refs.alert.info('Dialog Opened');\n    },\n    cancelColumnEdit: function cancelColumnEdit() {\n      this.resetEditedItem();\n      // this.$store.commit(ALERT.SET_ALERT, {\n      //   variant: 'warning',\n      //   message: 'cancelled'\n      // })\n      // this.$root.$refs.alert.error('Cancelled!')\n    },\n    closeColumnEdit: function closeColumnEdit() {\n      // this.resetEditedItem();\n    },\n    /**\n       * @param {string} key - related key of object\n       */\n    updateCell: function updateCell(key) {\n      this.$store.commit(ALERT.CLEAR_ALERT);\n      if (this.editedItem[key] !== this.cellInput) {\n        var data = _defineProperty({\n          id: this.editedItem.id\n        }, key, this.cellInput);\n        this.$store.dispatch(ACTIONS.SAVE_FORM, data);\n        //   .then(() => {\n        //     this.$nextTick(function () {\n        //       // this.$store.commit(ALERT.SET_ALERT, {\n        //       //   variant: 'success',\n        //       //   message: this.$t('saved', 2, [key])\n        //       // })\n\n        //     })\n        // }, (errorResponse) => {\n        //   this.$store.commit(ALERT.SET_ALERT, {\n        //     message: 'Your content can not be edited, please retry',\n        //     variant: 'error'\n        //   });\n        // })\n      }\n    }\n  }\n};","map":{"version":3,"names":["mapState","DATATABLE","FORM","ALERT","ACTIONS","DatatableMixin","mixins","data","formModalActive","dialogActive","langs","cellInput","computed","dialogDescription","$t","route","transName","toLowerCase","name","editedItem","titleKey","watch","val","resetEditedItem","beforeCreate","created","mounted","methods","editItem","item","editedIndex","elements","indexOf","Object","assign","emitEditedItem","v","confirmForm","_this","$store","commit","UPDATE_FORM_LOADING","__log","dispatch","SAVE_FORM","then","$nextTick","errorResponse","deleteItem","setEditedItem","openDialog","confirmDialog","_delete","DELETE_ITEM","columnChanged","value","openColumnEdit","cancelColumnEdit","closeColumnEdit","updateCell","key","CLEAR_ALERT","_defineProperty","id"],"sources":["/var/www/crm_template/packages/oobook/crm-base/vue/src/js/components/Datatable_.vue"],"sourcesContent":["<template>\n  <v-data-table\n    :headers=\"headers\"\n    :items=\"elements\"\n\n    class=\"elevation-1\"\n    :loading=\"loading\"\n    :options.sync=\"options\"\n    :server-items-length=\"totalElements\"\n    :search=\"search\"\n    :hide-default-header=\"hideDefaultHeader\"\n    :hide-default-footer=\"hideDefaultFooter\"\n    :footer-props=\"{\n      showFirstLastPage: true,\n      firstIcon: 'mdi-arrow-collapse-left',\n      lastIcon: 'mdi-arrow-collapse-right',\n      nextIcon: 'mdi-chevron-right',\n      prevIcon: 'mdi-chevron-left'\n    }\"\n\n    :disable-pagination=\"false\"\n    :disable-sort=\"false\"\n  >\n    <template v-slot:top>\n      <v-toolbar\n        flat\n      >\n        <!-- #title.left-top -->\n        <v-toolbar-title>\n          {{ $t('list-of-item', [name, $t('modules.' + name.toLowerCase )] ) }}\n          <!-- {{ $t('errors.missingMessage') }} -->\n        </v-toolbar-title>\n\n        <v-divider class=\"mx-4\" inset vertical></v-divider>\n\n        <!-- #search input -->\n        <v-text-field\n          v-model=\"search\"\n          append-icon=\"mdi-magnify\"\n          label=\"Search\"\n          single-line\n          hide-details\n        >\n        </v-text-field>\n\n        <v-divider class=\"mx-4\" inset vertical></v-divider>\n\n        <!-- #language selector -->\n        <v-toolbar-title v-show=\"false\">\n          <!-- {{ $t('list') }}\n          {{ $n(100.77, 'currency') }} -->\n          {{ $t('language-select') }}\n          <select v-model=\"$i18n.locale\">\n            <option v-for=\"(lang, i) in langs\" :key=\"`Lang${i}`\" :value=\"lang\">\n              {{ lang }}\n            </option>\n          </select>\n        </v-toolbar-title>\n\n        <v-divider class=\"mx-4\" inset vertical></v-divider>\n\n        <v-spacer></v-spacer>\n\n        <!-- #form dialog -->\n        <slot\n          name=\"FormDialog\"\n          >\n          <ue-modal-form\n              ref=\"formModal\"\n              v-model=\"formModalActive\"\n              :route-name=\"name\"\n              :inputs=\"inputs\"\n\n              :edited-item=\"editedItem\"\n              @update-item=\"emitEditedItem\"\n\n              @confirm=\"confirmForm\"\n              >\n          </ue-modal-form>\n        </slot>\n\n        <!-- general #dialog -->\n        <ue-modal-dialog\n          ref=\"dialog\"\n          v-model=\"dialogActive\"\n          @cancel=\"resetEditedItem\"\n          @confirm=\"confirmDialog\"\n          :description=\"dialogDescription\"\n        >\n        </ue-modal-dialog>\n\n      </v-toolbar>\n    </template>\n\n    <template v-slot:item.actions=\"{ item }\">\n\n      <!-- @click's editItem|deleteItem -->\n      <!-- #actions -->\n      <v-menu v-if=\"rowActionsType == 'dropdown'\"\n        :close-on-content-click=\"false\"\n        left\n        offset-x\n        >\n        <template v-slot:activator=\"{ on, attrs }\">\n          <v-btn icon v-bind=\"attrs\" v-on=\"on\">\n            <v-icon color=\"green darken-2\">\n              $list\n            </v-icon>\n          </v-btn>\n        </template>\n        <v-list>\n\n          <v-list-item\n            v-for=\"(action, k) in rowActions\"\n            :key=\"k\"\n            @click=\"handleFunctionCall(action + 'Item', item)\"\n\n            >\n              <v-icon small> {{ '$' + action }} </v-icon>\n              {{ $t(action) }}\n          </v-list-item>\n\n        </v-list>\n      </v-menu>\n\n      <div v-else=\"\">\n        <v-icon\n          v-for=\"(action, k) in rowActions\"\n          :key=\"k\"\n          small\n          class=\"mr-2\"\n          @click=\"handleFunctionCall(action + 'Item', item)\"\n          >\n          {{ '$' + action }}\n        </v-icon>\n      </div>\n    </template>\n\n    <template v-slot:no-data>\n      <v-btn\n        color=\"primary\"\n        @click=\"initialize\"\n      >\n        Reset\n      </v-btn>\n    </template>\n\n    <!-- #formatterColumns -->\n    <template\n      v-for=\"(col, i) in formatterColumns\"\n      v-slot:[`item.${col.value}`]=\"{ col, value }\"\n      >\n        <!-- {{ handleFunctionCall(header.formatter, value ) }} -->\n        <!-- {{ [header.formatter](value) }} -->\n        {{ $d(new Date(value), 'long') }}\n    </template>\n\n    <!-- #edit-dialog for columnEditables -->\n    <template\n      v-for=\"(e, k) in columnEditables\"\n      v-slot:[`item.${e.value}`]=\"props\"\n      >\n        <v-edit-dialog\n          :key=\"k\"\n          :return-value.sync=\"props.item[e.value]\"\n          :save-text=\"$t('save')\"\n          @save=\"updateCell(e.value)\"\n          @cancel=\"cancelColumnEdit\"\n          @open=\"openColumnEdit(props.item)\"\n          @close=\"closeColumnEdit\"\n\n          persistent\n          large\n\n        >\n          {{ props.item[e.value] }}\n          <template v-slot:input>\n            <v-text-field\n              :value=\"props.item[e.value]\"\n              @input=\"columnChanged\"\n              @keyup.enter=\"updateCell(e.value)\"\n              label=\"Edit\"\n              single-line\n              counter\n            >\n            </v-text-field>\n          </template>\n        </v-edit-dialog>\n    </template>\n\n  </v-data-table>\n</template>\n\n<script>\nimport { mapState } from 'vuex'\nimport { DATATABLE, FORM, ALERT } from '@/store/mutations'\nimport ACTIONS from '@/store/actions'\n\nimport { DatatableMixin } from '@/mixins'\n\nexport default {\n  mixins: [DatatableMixin],\n  data: function () {\n    return {\n      formModalActive: false,\n      dialogActive: false,\n\n      langs: ['tr', 'en'],\n\n      cellInput: ''\n    }\n  },\n  computed: {\n    dialogDescription () {\n      return this.$t('confirm-deletion', {\n        route: this.transName.toLowerCase(),\n        name: this.editedItem[this.titleKey]\n      })\n    },\n    transName () {\n      return this.$t('modules.' + this.name.toLowerCase())\n    }\n  },\n\n  watch: {\n    formModalActive (val) {\n      val || this.resetEditedItem()\n    },\n    dialogActive (val) {\n      val || this.resetEditedItem()\n    },\n    editedItem (val) {\n      // console.log('editedItem watcher', this.editedItem )\n    }\n  },\n\n  beforeCreate () {\n  },\n\n  created () {\n\n  },\n\n  mounted () {\n  },\n\n  methods: {\n    editItem (item) {\n      this.editedIndex = this.elements.indexOf(item)\n      this.editedItem = Object.assign({}, item)\n      this.formModalActive = true\n    },\n    emitEditedItem (v) {\n      this.editedItem = v\n    },\n    confirmForm (editedItem) {\n      this.$store.commit(FORM.UPDATE_FORM_LOADING, true)\n\n      __log(editedItem)\n\n      this.$store.dispatch(ACTIONS.SAVE_FORM, editedItem).then(() => {\n        this.$nextTick(function () {\n          // this.$store.dispatch(ACTIONS.GET_DATATABLE)\n          this.formModalActive = false\n        })\n      }, (errorResponse) => {\n        // this.$store.commit(NOTIFICATION.SET_NOTIF, {\n        //   message: 'Your content can not be edited, please retry',\n        //   variant: 'error'\n        // })\n      })\n    },\n\n    deleteItem (item) {\n      this.setEditedItem(item)\n      this.openDialog()\n    },\n\n    openDialog () {\n      this.dialogActive = true\n    },\n    confirmDialog () {\n      this.delete(this.editedItem)\n    },\n    delete: function (item) {\n      this.$store.dispatch(ACTIONS.DELETE_ITEM, item)\n    },\n\n    columnChanged (value) {\n      this.cellInput = value\n    },\n\n    openColumnEdit (item) {\n      // this.resetEditedItem();\n      this.setEditedItem(item)\n      // this.$store.commit(ALERT.SET_ALERT, {\n      //   variant: 'info',\n      //   message: 'Dialog Opened'\n      // })\n      // this.$root.$refs.alert.info('Dialog Opened');\n    },\n    cancelColumnEdit () {\n      this.resetEditedItem()\n      // this.$store.commit(ALERT.SET_ALERT, {\n      //   variant: 'warning',\n      //   message: 'cancelled'\n      // })\n      // this.$root.$refs.alert.error('Cancelled!')\n    },\n    closeColumnEdit () {\n      // this.resetEditedItem();\n    },\n    /**\n       * @param {string} key - related key of object\n       */\n    updateCell (key) {\n      this.$store.commit(ALERT.CLEAR_ALERT)\n\n      if (this.editedItem[key] !== this.cellInput) {\n        const data = {\n          id: this.editedItem.id,\n          [key]: this.cellInput\n          // reload: false\n        }\n\n        this.$store.dispatch(ACTIONS.SAVE_FORM, data)\n        //   .then(() => {\n        //     this.$nextTick(function () {\n        //       // this.$store.commit(ALERT.SET_ALERT, {\n        //       //   variant: 'success',\n        //       //   message: this.$t('saved', 2, [key])\n        //       // })\n\n        //     })\n        // }, (errorResponse) => {\n        //   this.$store.commit(ALERT.SET_ALERT, {\n        //     message: 'Your content can not be edited, please retry',\n        //     variant: 'error'\n        //   });\n        // })\n      }\n    }\n\n  }\n}\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}