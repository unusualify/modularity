{"ast":null,"code":"import _objectSpread from \"/var/www/crm_template/packages/oobook/crm-base/vue/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport { createVNode as _createVNode, mergeProps as _mergeProps, resolveDirective as _resolveDirective } from \"vue\";\n// Components\nimport { makeSelectionControlProps, VSelectionControl } from \"../VSelectionControl/VSelectionControl.mjs\"; // Composables\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\"; // Utilities\nimport { computed } from 'vue';\nimport { genericComponent, pick, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nexport var makeVCheckboxBtnProps = propsFactory(_objectSpread({\n  indeterminate: Boolean,\n  indeterminateIcon: {\n    type: IconValue,\n    \"default\": '$checkboxIndeterminate'\n  }\n}, makeSelectionControlProps({\n  falseIcon: '$checkboxOff',\n  trueIcon: '$checkboxOn'\n})), 'v-checkbox-btn');\nexport var VCheckboxBtn = genericComponent()({\n  name: 'VCheckboxBtn',\n  props: makeVCheckboxBtnProps(),\n  emits: {\n    'update:modelValue': function updateModelValue(value) {\n      return true;\n    },\n    'update:indeterminate': function updateIndeterminate(val) {\n      return true;\n    }\n  },\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n    var indeterminate = useProxiedModel(props, 'indeterminate');\n    var model = useProxiedModel(props, 'modelValue');\n    function onChange(v) {\n      if (indeterminate.value) {\n        indeterminate.value = false;\n      }\n    }\n    var falseIcon = computed(function () {\n      return props.indeterminate ? props.indeterminateIcon : props.falseIcon;\n    });\n    var trueIcon = computed(function () {\n      return props.indeterminate ? props.indeterminateIcon : props.trueIcon;\n    });\n    useRender(function () {\n      return _createVNode(VSelectionControl, _mergeProps(props, {\n        \"modelValue\": model.value,\n        \"onUpdate:modelValue\": [function ($event) {\n          return model.value = $event;\n        }, onChange],\n        \"class\": \"v-checkbox-btn\",\n        \"type\": \"checkbox\",\n        \"inline\": true,\n        \"falseIcon\": falseIcon.value,\n        \"trueIcon\": trueIcon.value,\n        \"aria-checked\": props.indeterminate ? 'mixed' : undefined\n      }), slots);\n    });\n    return {};\n  }\n});\nexport function filterCheckboxBtnProps(props) {\n  return pick(props, Object.keys(VCheckboxBtn.props));\n}","map":{"version":3,"names":["makeSelectionControlProps","VSelectionControl","IconValue","useProxiedModel","computed","genericComponent","pick","propsFactory","useRender","makeVCheckboxBtnProps","_objectSpread","indeterminate","Boolean","indeterminateIcon","type","falseIcon","trueIcon","VCheckboxBtn","name","props","emits","updateModelValue","value","updateIndeterminate","val","setup","_ref","slots","model","onChange","v","_createVNode","_mergeProps","$event","undefined","filterCheckboxBtnProps","Object","keys"],"sources":["../../../src/components/VCheckbox/VCheckboxBtn.tsx"],"sourcesContent":["// Components\nimport type { VSelectionControlSlots } from '@/components/VSelectionControl/VSelectionControl'\nimport { makeSelectionControlProps, VSelectionControl } from '@/components/VSelectionControl/VSelectionControl'\n\n// Composables\nimport { IconValue } from '@/composables/icons'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed } from 'vue'\nimport { genericComponent, pick, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { ExtractPropTypes } from 'vue'\n\nexport const makeVCheckboxBtnProps = propsFactory({\n  indeterminate: Boolean,\n  indeterminateIcon: {\n    type: IconValue,\n    default: '$checkboxIndeterminate',\n  },\n\n  ...makeSelectionControlProps({\n    falseIcon: '$checkboxOff',\n    trueIcon: '$checkboxOn',\n  }),\n}, 'v-checkbox-btn')\n\nexport const VCheckboxBtn = genericComponent<VSelectionControlSlots>()({\n  name: 'VCheckboxBtn',\n\n  props: makeVCheckboxBtnProps(),\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n    'update:indeterminate': (val: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const indeterminate = useProxiedModel(props, 'indeterminate')\n    const model = useProxiedModel(props, 'modelValue')\n\n    function onChange (v: any) {\n      if (indeterminate.value) {\n        indeterminate.value = false\n      }\n    }\n\n    const falseIcon = computed(() => {\n      return props.indeterminate\n        ? props.indeterminateIcon\n        : props.falseIcon\n    })\n\n    const trueIcon = computed(() => {\n      return props.indeterminate\n        ? props.indeterminateIcon\n        : props.trueIcon\n    })\n\n    useRender(() => (\n      <VSelectionControl\n        { ...props }\n        v-model={ model.value }\n        class=\"v-checkbox-btn\"\n        type=\"checkbox\"\n        inline\n        onUpdate:modelValue={ onChange }\n        falseIcon={ falseIcon.value }\n        trueIcon={ trueIcon.value }\n        aria-checked={ props.indeterminate ? 'mixed' : undefined }\n        v-slots={ slots }\n      />\n    ))\n\n    return {}\n  },\n})\n\nexport type VCheckboxBtn = InstanceType<typeof VCheckboxBtn>\n\nexport function filterCheckboxBtnProps (props: ExtractPropTypes<ReturnType<typeof makeVCheckboxBtnProps>>) {\n  return pick(props, Object.keys(VCheckboxBtn.props) as any)\n}\n"],"mappings":";;;AAAA;AAAA,SAESA,yBAAyB,EAAEC,iBAAiB,sDAErD;AAAA,SACSC,SAAS;AAAA,SACTC,eAAe,8CAExB;AACA,SAASC,QAAQ,QAAQ,KAAK;AAAA,SACrBC,gBAAgB,EAAEC,IAAI,EAAEC,YAAY,EAAEC,SAAS,gCAExD;AAGA,OAAO,IAAMC,qBAAqB,GAAGF,YAAY,CAAAG,aAAA;EAC/CC,aAAa,EAAEC,OAAO;EACtBC,iBAAiB,EAAE;IACjBC,IAAI,EAAEZ,SAAS;IACf,WAAS;EACX;AAAC,GAEEF,yBAAyB,CAAC;EAC3Be,SAAS,EAAE,cAAc;EACzBC,QAAQ,EAAE;AACZ,CAAC,IACA,gBAAgB,CAAC;AAEpB,OAAO,IAAMC,YAAY,GAAGZ,gBAAgB,EAA0B,CAAC;EACrEa,IAAI,EAAE,cAAc;EAEpBC,KAAK,EAAEV,qBAAqB,EAAE;EAE9BW,KAAK,EAAE;IACL,mBAAmB,EAAG,SAAAC,iBAAAC,KAAU;MAAA,OAAK,IAAI;IAAA;IACzC,sBAAsB,EAAG,SAAAC,oBAAAC,GAAY;MAAA,OAAK;IAAA;EAC5C,CAAC;EAEDC,KAAK,WAAAA,MAAEN,KAAK,EAAAO,IAAA,EAAa;IAAA,IAATC,KAAA,GAAOD,IAAA,CAAPC,KAAA;IACd,IAAMhB,aAAa,GAAGR,eAAe,CAACgB,KAAK,EAAE,eAAe,CAAC;IAC7D,IAAMS,KAAK,GAAGzB,eAAe,CAACgB,KAAK,EAAE,YAAY,CAAC;IAElD,SAASU,QAAQA,CAAEC,CAAM,EAAE;MACzB,IAAInB,aAAa,CAACW,KAAK,EAAE;QACvBX,aAAa,CAACW,KAAK,GAAG,KAAK;MAC7B;IACF;IAEA,IAAMP,SAAS,GAAGX,QAAQ,CAAC,YAAM;MAC/B,OAAOe,KAAK,CAACR,aAAa,GACtBQ,KAAK,CAACN,iBAAiB,GACvBM,KAAK,CAACJ,SAAS;IACrB,CAAC,CAAC;IAEF,IAAMC,QAAQ,GAAGZ,QAAQ,CAAC,YAAM;MAC9B,OAAOe,KAAK,CAACR,aAAa,GACtBQ,KAAK,CAACN,iBAAiB,GACvBM,KAAK,CAACH,QAAQ;IACpB,CAAC,CAAC;IAEFR,SAAS,CAAC;MAAA,OAAAuB,YAAA,CAAA9B,iBAAA,EAAA+B,WAAA,CAEDb,KAAK;QAAA,cACAS,KAAK,CAACN,KAAK;QAAA,kCAAAW,MAAA;UAAA,OAAXL,KAAK,CAACN,KAAK,GAAAW,MAAA;QAAA,GAICJ,QAAQ;QAAA,SAHxB,gBAAgB;QAAA,QACjB,UAAU;QAAA;QAAA,aAGHd,SAAS,CAACO,KAAK;QAAA,YAChBN,QAAQ,CAACM,KAAK;QAAA,gBACVH,KAAK,CAACR,aAAa,GAAG,OAAO,GAAGuB;MAAS,IAC9CP,KAAK,CAElB;IAAA,EAAC;IAEF,OAAO,CAAC,CAAC;EACX;AACF,CAAC,CAAC;AAIF,OAAO,SAASQ,sBAAsBA,CAAEhB,KAAiE,EAAE;EACzG,OAAOb,IAAI,CAACa,KAAK,EAAEiB,MAAM,CAACC,IAAI,CAACpB,YAAY,CAACE,KAAK,CAAC,CAAQ;AAC5D"},"metadata":{},"sourceType":"module","externalDependencies":[]}