{"ast":null,"code":"import _objectSpread from \"/var/www/crm_template/packages/oobook/crm-base/vue/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport { mapGetters, mapState } from 'vuex';\nimport { FORM } from '@/store/mutations/index';\nimport ACTIONS from '@/store/actions';\nexport default {\n  // name: \"ue-form-base\",\n  props: {\n    value: {\n      type: Object,\n      \"default\": function _default() {\n        return {};\n      }\n    },\n    schema: {\n      type: Object,\n      \"default\": function _default() {\n        return {};\n      }\n    },\n    rowAttribute: {\n      type: Object,\n      \"default\": function _default() {\n        return {\n          noGutters: false\n          // justify:'center',\n          // align:'center'\n        };\n      }\n    },\n\n    async: {\n      type: Boolean,\n      \"default\": true\n    },\n    hasSubmit: {\n      type: Boolean,\n      \"default\": false\n    },\n    stickyFrame: {\n      type: Boolean,\n      \"default\": false\n    },\n    stickyButton: {\n      type: Boolean,\n      \"default\": false\n    }\n  },\n  data: function data() {\n    return {\n      id: Math.ceil(Math.random() * 1000000) + '-form',\n      valid: false\n    };\n  },\n  beforeCreate: function beforeCreate() {},\n  created: function created() {\n    // __log(this.$root)\n    // Object.fromEntries(this.inputs[1].extras.map(v => ([v,true])))\n\n    // console.log(this.inputs[2])\n  },\n  watch: {\n    inputSchema: function inputSchema(val) {\n      __log('inputSchema changed', val);\n    }\n  },\n  computed: _objectSpread({\n    issetModel: function issetModel() {\n      return Object.keys(this.value).length > 0;\n    },\n    issetSchema: function issetSchema() {\n      return Object.keys(this.schema).length > 0;\n    },\n    hasStickyFrame: function hasStickyFrame() {\n      return this.stickyFrame || this.stickyButton;\n    },\n    inputSchema: function inputSchema() {\n      return this.issetSchema ? this.schema : this.$store.state.form.inputs;\n    },\n    defaultItem: {\n      get: function get() {\n        // __log(\n        //     this.issetModel ? this.value : this.$store.state.form.editedItem\n        // )\n        return this.issetModel ? this.value : this.$store.state.form.editedItem;\n      },\n      set: function set(value) {}\n    },\n    model: {\n      get: function get() {\n        console.log('formBase model getter', this.defaultItem, this.value);\n        return this.defaultItem;\n      },\n      set: function set(value) {\n        __log('model setter', value);\n        // __log('ForBase.vue->model set', value)\n\n        // if(this.issetModel)\n        //     this.$emit('input', value)\n        // else\n        //     this.$store.commit(FORM.SET_EDITED_ITEM, value)\n      }\n    },\n    reference: function reference() {\n      return 'ref-' + this.id;\n    },\n    formColumnAttrs: function formColumnAttrs() {\n      return this.hasStickyFrame ? {\n        cols: '12',\n        sm: '12',\n        md: '12',\n        lg: '8',\n        xl: '6',\n        'order-lg': '0',\n        'order-xl': '0'\n      } : {\n        cols: '12'\n      };\n    },\n    stickyColumnAttrs: function stickyColumnAttrs() {\n      return {\n        cols: '12',\n        sm: '12',\n        md: '12',\n        lg: '4',\n        xl: '6',\n        'order-lg': '1',\n        'order-xl': '1'\n      };\n    }\n  }, mapState({\n    loading: function loading(state) {\n      return state.form.loading;\n    },\n    errors: function errors(state) {\n      return state.form.errors;\n    }\n  })),\n  methods: {\n    validate: function validate() {\n      this.$refs[this.reference].validate();\n    },\n    resetValidation: function resetValidation() {\n      this.$refs[this.reference].resetValidation();\n    },\n    handleInput: function handleInput(v) {\n      // __log(\n      //     'handleInput',\n      //     v.obj.key,\n      //     v.obj.value,\n      //     this.model\n      // )\n      // this.model = this.model;\n    },\n    handleUpdate: function handleUpdate(v) {\n      __log('handleUpdate', v);\n    },\n    handleResize: function handleResize(v) {\n      // __log('handleResize', v)\n    },\n    handleBlur: function handleBlur(v) {\n      // __log('handleBlur', v)\n    },\n    saveForm: function saveForm() {\n      var _this = this;\n      var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var errorCallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var fields = {};\n      Object.keys(this.defaultItem).forEach(function (key, i) {\n        fields[key] = _this.model[key] == null || _this.defaultItem[key] != '' ? _this.defaultItem[key] : _this.model[key];\n      });\n      if (this.model.id) {\n        fields.id = this.model.id;\n      }\n\n      // __log(\n      //     this.defaultItem,\n      //     fields,\n      // );\n      // return;\n      this.$store.commit(FORM.SET_EDITED_ITEM, fields);\n      this.$store.dispatch(ACTIONS.SAVE_FORM, {\n        item: null,\n        callback: callback,\n        errorCallback: errorCallback\n      });\n    },\n    submit: function submit() {\n      if (this.async) {\n        this.saveForm();\n      }\n\n      // this.$v.$touch()\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","mapState","FORM","ACTIONS","props","value","type","Object","_default","schema","rowAttribute","noGutters","async","Boolean","hasSubmit","stickyFrame","stickyButton","data","id","Math","ceil","random","valid","beforeCreate","created","watch","inputSchema","val","__log","computed","_objectSpread","issetModel","keys","length","issetSchema","hasStickyFrame","$store","state","form","inputs","defaultItem","get","editedItem","set","model","console","log","reference","formColumnAttrs","cols","sm","md","lg","xl","stickyColumnAttrs","loading","errors","methods","validate","$refs","resetValidation","handleInput","v","handleUpdate","handleResize","handleBlur","saveForm","_this","callback","arguments","undefined","errorCallback","fields","forEach","key","i","commit","SET_EDITED_ITEM","dispatch","SAVE_FORM","item","submit"],"sources":["/var/www/crm_template/packages/oobook/crm-base/vue/src/js/components/FormBase.vue"],"sourcesContent":["<template>\n\n    <v-form\n        :ref=\"reference\"\n        v-model=\"valid\"\n        lazy-validation\n        @submit.prevent=\"submit\"\n        :id=\"id\"\n        >\n        <v-container>\n            <v-row>\n                <v-col\n                    v-if=\"hasStickyFrame\"\n                    v-bind=\"stickyColumnAttrs\"\n                    class=\"d-flex flex-column\"\n                    style=\"position:sticky;\"\n                    >\n                        <div class=\"d-flex flex-column align-items-center\" style=\"position:sticky;top:100px;\">\n                            <slot\n                                v-if=\"hasSubmit && stickyButton\"\n                                name=\"submitButton\"\n                                :attrs=\"{\n\n                                }\"\n                                :on=\"{\n\n                                }\"\n                                >\n                                <ue-btn\n                                    :form=\"id\"\n                                    type=\"submit\"\n                                    width=\"60%\"\n\n                                    >\n                                    {{ $t('submit') }}\n                                </ue-btn>\n                            </slot>\n\n                            <slot\n                                name=\"stickyBody\"\n                                :attrs=\"{\n\n                                }\"\n                                :on=\"{\n\n                                }\"\n                                >\n                                <!-- <v-card class=\"mt-6\" height=\"\">\n                                        <div>\n                                            <v-icon>mdi-camera</v-icon>\n                                            <h3>Upload</h3>\n                                        </div>\n                                </v-card> -->\n                            </slot>\n\n                        </div>\n                        <!-- <v-spacer></v-spacer> -->\n\n                </v-col>\n                <v-col\n                    v-bind=\"formColumnAttrs\"\n                    >\n\n                    <v-custom-form-base\n                        id=\"treeview-slot\"\n\n                        :row=\"rowAttribute\"\n                        :model=\"model\"\n                        :schema=\"inputSchema\"\n\n                        @update=\"handleUpdate\"\n                        @input=\"handleInput\"\n                        @resize=\"handleResize\"\n                        @blur=\"handleBlur\"\n\n                        >\n                        <template v-slot:[`slot-inject-prepend-key-treeview-slot-permissions`]=\"{open}\" >\n                            <v-icon color=\"blue\">\n                                {{open ? 'mdi-folder-open' : 'mdi-folder'}}\n                            </v-icon>\n                        </template>\n                        <template #slot-inject-label-key-treeview-slot-permissions=\"{item}\" >\n                            <span class=\"caption\" >{{item.name.toUpperCase()}}</span>\n                        </template>\n                    </v-custom-form-base>\n\n                </v-col>\n            </v-row>\n        </v-container>\n\n        <v-container v-if=\"hasSubmit && !stickyButton\">\n                <!-- <v-spacer></v-spacer> -->\n                <slot\n                    name=\"submitButton\"\n                    :attrs=\"{\n\n                    }\"\n                    :on=\"{\n\n                    }\"\n                    >\n                    <ue-btn\n                        :form=\"id\"\n                        type=\"submit\"\n                        right\n                        >\n                        {{ $t('submit') }}\n                    </ue-btn>\n                </slot>\n        </v-container>\n\n        <v-container>\n            <v-text-field\n                v-if=\"loading\"\n                color=\"success\"\n                loading\n                disabled\n            />\n        </v-container>\n    </v-form>\n\n</template>\n\n<script>\nimport { mapGetters, mapState } from 'vuex'\nimport { FORM } from '@/store/mutations/index'\nimport ACTIONS from '@/store/actions'\n\nexport default {\n  // name: \"ue-form-base\",\n  props: {\n    value: {\n      type: Object,\n      default () {\n        return {}\n      }\n    },\n    schema: {\n      type: Object,\n      default () {\n        return {}\n      }\n    },\n    rowAttribute: {\n      type: Object,\n      default () {\n        return {\n          noGutters: false\n          // justify:'center',\n          // align:'center'\n        }\n      }\n    },\n    async: {\n      type: Boolean,\n      default: true\n    },\n    hasSubmit: {\n      type: Boolean,\n      default: false\n    },\n    stickyFrame: {\n      type: Boolean,\n      default: false\n    },\n    stickyButton: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data () {\n    return {\n      id: Math.ceil(Math.random() * 1000000) + '-form',\n      valid: false\n    }\n  },\n\n  beforeCreate () {\n\n  },\n\n  created () {\n    // __log(this.$root)\n    // Object.fromEntries(this.inputs[1].extras.map(v => ([v,true])))\n\n    // console.log(this.inputs[2])\n  },\n\n  watch: {\n    inputSchema (val) {\n      __log('inputSchema changed', val)\n    }\n  },\n\n  computed: {\n    issetModel () {\n      return Object.keys(this.value).length > 0\n    },\n    issetSchema () {\n      return Object.keys(this.schema).length > 0\n    },\n    hasStickyFrame () {\n      return this.stickyFrame || this.stickyButton\n    },\n    inputSchema () {\n      return this.issetSchema ? this.schema : this.$store.state.form.inputs\n    },\n    defaultItem: {\n      get () {\n        // __log(\n        //     this.issetModel ? this.value : this.$store.state.form.editedItem\n        // )\n        return this.issetModel ? this.value : this.$store.state.form.editedItem\n      },\n      set (value) {\n\n      }\n    },\n    model: {\n      get () {\n        console.log('formBase model getter', this.defaultItem, this.value)\n        return this.defaultItem\n      },\n      set (value) {\n        __log('model setter', value)\n        // __log('ForBase.vue->model set', value)\n\n        // if(this.issetModel)\n        //     this.$emit('input', value)\n        // else\n        //     this.$store.commit(FORM.SET_EDITED_ITEM, value)\n      }\n    },\n\n    reference () {\n      return 'ref-' + this.id\n    },\n\n    formColumnAttrs () {\n      return this.hasStickyFrame\n        ? {\n            cols: '12',\n            sm: '12',\n            md: '12',\n            lg: '8',\n            xl: '6',\n            'order-lg': '0',\n            'order-xl': '0'\n          }\n        : {\n            cols: '12'\n          }\n    },\n\n    stickyColumnAttrs () {\n      return {\n        cols: '12',\n        sm: '12',\n        md: '12',\n        lg: '4',\n        xl: '6',\n        'order-lg': '1',\n        'order-xl': '1'\n      }\n    },\n\n    ...mapState({\n      loading: state => state.form.loading,\n      errors: state => state.form.errors\n    })\n\n  },\n\n  methods: {\n    validate () {\n      this.$refs[this.reference].validate()\n    },\n    resetValidation () {\n      this.$refs[this.reference].resetValidation()\n    },\n\n    handleInput (v) {\n      // __log(\n      //     'handleInput',\n      //     v.obj.key,\n      //     v.obj.value,\n      //     this.model\n      // )\n      // this.model = this.model;\n    },\n    handleUpdate (v) {\n      __log('handleUpdate', v)\n    },\n    handleResize (v) {\n      // __log('handleResize', v)\n\n    },\n    handleBlur (v) {\n      // __log('handleBlur', v)\n\n    },\n\n    saveForm (callback = null, errorCallback = null) {\n      const fields = {}\n      Object.keys(this.defaultItem).forEach((key, i) => {\n        fields[key] = (this.model[key] == null || this.defaultItem[key] != '')\n          ? this.defaultItem[key]\n          : this.model[key]\n      })\n\n      if (this.model.id) { fields.id = this.model.id }\n\n      // __log(\n      //     this.defaultItem,\n      //     fields,\n      // );\n      // return;\n      this.$store.commit(FORM.SET_EDITED_ITEM, fields)\n\n      this.$store.dispatch(ACTIONS.SAVE_FORM, { item: null, callback, errorCallback })\n    },\n\n    submit () {\n      if (this.async) {\n        this.saveForm()\n      }\n\n      // this.$v.$touch()\n    }\n  }\n\n}\n</script>\n\n<style>\n\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}