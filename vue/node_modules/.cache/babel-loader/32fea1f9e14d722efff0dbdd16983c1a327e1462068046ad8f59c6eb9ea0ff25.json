{"ast":null,"code":"import _slicedToArray from \"/var/www/crm_template/packages/oobook/crm-base/vue/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.string.substr.js\";\nimport \"core-js/modules/es.object.values.js\";\n// Utilities\nimport { consoleWarn } from \"./console.mjs\";\nimport { chunk, padEnd } from \"./helpers.mjs\";\nimport * as sRGB from \"./color/transformSRGB.mjs\";\nimport * as CIELAB from \"./color/transformCIELAB.mjs\"; // Types\nexport function isCssColor(color) {\n  return !!color && /^(#|var\\(--|(rgb|hsl)a?\\()/.test(color);\n}\nexport function parseColor(color) {\n  if (typeof color === 'number') {\n    if (isNaN(color) || color < 0 || color > 0xFFFFFF) {\n      // int can't have opacity\n      consoleWarn(\"'\".concat(color, \"' is not a valid hex color\"));\n    }\n    return {\n      r: (color & 0xFF0000) >> 16,\n      g: (color & 0xFF00) >> 8,\n      b: color & 0xFF\n    };\n  } else if (typeof color === 'string') {\n    var hex = color.startsWith('#') ? color.slice(1) : color;\n    if ([3, 4].includes(hex.length)) {\n      hex = hex.split('').map(function (_char) {\n        return _char + _char;\n      }).join('');\n    } else if (![6, 8].includes(hex.length)) {\n      consoleWarn(\"'\".concat(color, \"' is not a valid hex(a) color\"));\n    }\n    var _int = parseInt(hex, 16);\n    if (isNaN(_int) || _int < 0 || _int > 0xFFFFFFFF) {\n      consoleWarn(\"'\".concat(color, \"' is not a valid hex(a) color\"));\n    }\n    return HexToRGB(hex);\n  } else {\n    throw new TypeError(\"Colors can only be numbers or strings, recieved \".concat(color == null ? color : color.constructor.name, \" instead\"));\n  }\n}\nexport function RGBToInt(color) {\n  return (color.r << 16) + (color.g << 8) + color.b;\n}\nexport function classToHex(color, colors, currentTheme) {\n  var _color$toString$trim$ = color.toString().trim().replace('-', '').split(' ', 2),\n    _color$toString$trim$2 = _slicedToArray(_color$toString$trim$, 2),\n    colorName = _color$toString$trim$2[0],\n    colorModifier = _color$toString$trim$2[1];\n  var hexColor = '';\n  if (colorName && colorName in colors) {\n    if (colorModifier && colorModifier in colors[colorName]) {\n      hexColor = colors[colorName][colorModifier];\n    } else if ('base' in colors[colorName]) {\n      hexColor = colors[colorName].base;\n    }\n  } else if (colorName && colorName in currentTheme) {\n    hexColor = currentTheme[colorName];\n  }\n  return hexColor;\n}\n\n/** Converts HSVA to RGBA. Based on formula from https://en.wikipedia.org/wiki/HSL_and_HSV */\nexport function HSVtoRGB(hsva) {\n  var h = hsva.h,\n    s = hsva.s,\n    v = hsva.v,\n    a = hsva.a;\n  var f = function f(n) {\n    var k = (n + h / 60) % 6;\n    return v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  };\n  var rgb = [f(5), f(3), f(1)].map(function (v) {\n    return Math.round(v * 255);\n  });\n  return {\n    r: rgb[0],\n    g: rgb[1],\n    b: rgb[2],\n    a: a\n  };\n}\n\n/** Converts RGBA to HSVA. Based on formula from https://en.wikipedia.org/wiki/HSL_and_HSV */\nexport function RGBtoHSV(rgba) {\n  if (!rgba) return {\n    h: 0,\n    s: 1,\n    v: 1,\n    a: 1\n  };\n  var r = rgba.r / 255;\n  var g = rgba.g / 255;\n  var b = rgba.b / 255;\n  var max = Math.max(r, g, b);\n  var min = Math.min(r, g, b);\n  var h = 0;\n  if (max !== min) {\n    if (max === r) {\n      h = 60 * (0 + (g - b) / (max - min));\n    } else if (max === g) {\n      h = 60 * (2 + (b - r) / (max - min));\n    } else if (max === b) {\n      h = 60 * (4 + (r - g) / (max - min));\n    }\n  }\n  if (h < 0) h = h + 360;\n  var s = max === 0 ? 0 : (max - min) / max;\n  var hsv = [h, s, max];\n  return {\n    h: hsv[0],\n    s: hsv[1],\n    v: hsv[2],\n    a: rgba.a\n  };\n}\nexport function HSVtoHSL(hsva) {\n  var h = hsva.h,\n    s = hsva.s,\n    v = hsva.v,\n    a = hsva.a;\n  var l = v - v * s / 2;\n  var sprime = l === 1 || l === 0 ? 0 : (v - l) / Math.min(l, 1 - l);\n  return {\n    h: h,\n    s: sprime,\n    l: l,\n    a: a\n  };\n}\nexport function HSLtoHSV(hsl) {\n  var h = hsl.h,\n    s = hsl.s,\n    l = hsl.l,\n    a = hsl.a;\n  var v = l + s * Math.min(l, 1 - l);\n  var sprime = v === 0 ? 0 : 2 - 2 * l / v;\n  return {\n    h: h,\n    s: sprime,\n    v: v,\n    a: a\n  };\n}\nexport function RGBtoCSS(_ref) {\n  var r = _ref.r,\n    g = _ref.g,\n    b = _ref.b,\n    a = _ref.a;\n  return a === undefined ? \"rgb(\".concat(r, \", \").concat(g, \", \").concat(b, \")\") : \"rgba(\".concat(r, \", \").concat(g, \", \").concat(b, \", \").concat(a, \")\");\n}\nexport function HSVtoCSS(hsva) {\n  return RGBtoCSS(HSVtoRGB(hsva));\n}\nfunction toHex(v) {\n  var h = Math.round(v).toString(16);\n  return ('00'.substr(0, 2 - h.length) + h).toUpperCase();\n}\nexport function RGBtoHex(_ref2) {\n  var r = _ref2.r,\n    g = _ref2.g,\n    b = _ref2.b,\n    a = _ref2.a;\n  return \"#\".concat([toHex(r), toHex(g), toHex(b), a !== undefined ? toHex(Math.round(a * 255)) : ''].join(''));\n}\nexport function HexToRGB(hex) {\n  hex = parseHex(hex);\n  var _chunk$map = chunk(hex, 2).map(function (c) {\n      return parseInt(c, 16);\n    }),\n    _chunk$map2 = _slicedToArray(_chunk$map, 4),\n    r = _chunk$map2[0],\n    g = _chunk$map2[1],\n    b = _chunk$map2[2],\n    a = _chunk$map2[3];\n  a = a === undefined ? a : a / 255;\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nexport function HexToHSV(hex) {\n  var rgb = HexToRGB(hex);\n  return RGBtoHSV(rgb);\n}\nexport function HSVtoHex(hsva) {\n  return RGBtoHex(HSVtoRGB(hsva));\n}\nexport function parseHex(hex) {\n  if (hex.startsWith('#')) {\n    hex = hex.slice(1);\n  }\n  hex = hex.replace(/([^0-9a-f])/gi, 'F');\n  if (hex.length === 3 || hex.length === 4) {\n    hex = hex.split('').map(function (x) {\n      return x + x;\n    }).join('');\n  }\n  if (hex.length !== 6) {\n    hex = padEnd(padEnd(hex, 6), 8, 'F');\n  }\n  return hex;\n}\nexport function parseGradient(gradient, colors, currentTheme) {\n  return gradient.replace(/([a-z]+(\\s[a-z]+-[1-5])?)(?=$|,)/gi, function (x) {\n    return classToHex(x, colors, currentTheme) || x;\n  }).replace(/(rgba\\()#[0-9a-f]+(?=,)/gi, function (x) {\n    return 'rgba(' + Object.values(HexToRGB(parseHex(x.replace(/rgba\\(/, '')))).slice(0, 3).join(',');\n  });\n}\nexport function lighten(value, amount) {\n  var lab = CIELAB.fromXYZ(sRGB.toXYZ(value));\n  lab[0] = lab[0] + amount * 10;\n  return sRGB.fromXYZ(CIELAB.toXYZ(lab));\n}\nexport function darken(value, amount) {\n  var lab = CIELAB.fromXYZ(sRGB.toXYZ(value));\n  lab[0] = lab[0] - amount * 10;\n  return sRGB.fromXYZ(CIELAB.toXYZ(lab));\n}\n\n/**\n * Calculate the relative luminance of a given color\n * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n */\nexport function getLuma(color) {\n  var rgb = parseColor(color);\n  return sRGB.toXYZ(rgb)[1];\n}\n\n/**\n * Returns the contrast ratio (1-21) between two colors.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function getContrast(first, second) {\n  var l1 = getLuma(first);\n  var l2 = getLuma(second);\n  var light = Math.max(l1, l2);\n  var dark = Math.min(l1, l2);\n  return (light + 0.05) / (dark + 0.05);\n}","map":{"version":3,"names":["consoleWarn","chunk","padEnd","sRGB","CIELAB","isCssColor","color","test","parseColor","isNaN","concat","r","g","b","hex","startsWith","slice","includes","length","split","map","char","join","int","parseInt","HexToRGB","TypeError","constructor","name","RGBToInt","classToHex","colors","currentTheme","_color$toString$trim$","toString","trim","replace","_color$toString$trim$2","_slicedToArray","colorName","colorModifier","hexColor","base","HSVtoRGB","hsva","h","s","v","a","f","n","k","Math","max","min","rgb","round","RGBtoHSV","rgba","hsv","HSVtoHSL","l","sprime","HSLtoHSV","hsl","RGBtoCSS","_ref","undefined","HSVtoCSS","toHex","substr","toUpperCase","RGBtoHex","_ref2","parseHex","_chunk$map","c","_chunk$map2","HexToHSV","HSVtoHex","x","parseGradient","gradient","Object","values","lighten","value","amount","lab","fromXYZ","toXYZ","darken","getLuma","getContrast","first","second","l1","l2","light","dark"],"sources":["../../src/util/colorUtils.ts"],"sourcesContent":["// Utilities\nimport { consoleWarn } from './console'\nimport { chunk, padEnd } from './helpers'\nimport * as sRGB from '@/util/color/transformSRGB'\nimport * as CIELAB from '@/util/color/transformCIELAB'\n\n// Types\nimport type { Colors } from '@/composables/theme'\n\nexport type XYZ = [number, number, number]\nexport type LAB = [number, number, number]\nexport type HSV = { h: number, s: number, v: number, a?: number }\nexport type RGB = { r: number, g: number, b: number, a?: number }\nexport type HSL = { h: number, s: number, l: number, a?: number }\nexport type Hex = string & { __hexBrand: never }\nexport type Color = string | number | {}\n\nexport function isCssColor (color?: string | null | false): boolean {\n  return !!color && /^(#|var\\(--|(rgb|hsl)a?\\()/.test(color)\n}\n\nexport function parseColor (color: Color): RGB {\n  if (typeof color === 'number') {\n    if (isNaN(color) || color < 0 || color > 0xFFFFFF) { // int can't have opacity\n      consoleWarn(`'${color}' is not a valid hex color`)\n    }\n\n    return {\n      r: (color & 0xFF0000) >> 16,\n      g: (color & 0xFF00) >> 8,\n      b: (color & 0xFF),\n    }\n  } else if (typeof color === 'string') {\n    let hex = color.startsWith('#') ? color.slice(1) : color\n\n    if ([3, 4].includes(hex.length)) {\n      hex = hex.split('').map(char => char + char).join('')\n    } else if (![6, 8].includes(hex.length)) {\n      consoleWarn(`'${color}' is not a valid hex(a) color`)\n    }\n\n    const int = parseInt(hex, 16)\n    if (isNaN(int) || int < 0 || int > 0xFFFFFFFF) {\n      consoleWarn(`'${color}' is not a valid hex(a) color`)\n    }\n\n    return HexToRGB(hex as Hex)\n  } else {\n    throw new TypeError(`Colors can only be numbers or strings, recieved ${color == null ? color : color.constructor.name} instead`)\n  }\n}\n\nexport function RGBToInt (color: RGB) {\n  return (color.r << 16) + (color.g << 8) + color.b\n}\n\nexport function classToHex (\n  color: string,\n  colors: Record<string, Record<string, string>>,\n  currentTheme: Partial<Colors>,\n): string {\n  const [colorName, colorModifier] = color\n    .toString().trim().replace('-', '').split(' ', 2) as (string | undefined)[]\n\n  let hexColor = ''\n  if (colorName && colorName in colors) {\n    if (colorModifier && colorModifier in colors[colorName]) {\n      hexColor = colors[colorName][colorModifier]\n    } else if ('base' in colors[colorName]) {\n      hexColor = colors[colorName].base\n    }\n  } else if (colorName && colorName in currentTheme) {\n    hexColor = currentTheme[colorName] as string\n  }\n\n  return hexColor\n}\n\n/** Converts HSVA to RGBA. Based on formula from https://en.wikipedia.org/wiki/HSL_and_HSV */\nexport function HSVtoRGB (hsva: HSV): RGB {\n  const { h, s, v, a } = hsva\n  const f = (n: number) => {\n    const k = (n + (h / 60)) % 6\n    return v - v * s * Math.max(Math.min(k, 4 - k, 1), 0)\n  }\n\n  const rgb = [f(5), f(3), f(1)].map(v => Math.round(v * 255))\n\n  return { r: rgb[0], g: rgb[1], b: rgb[2], a }\n}\n\n/** Converts RGBA to HSVA. Based on formula from https://en.wikipedia.org/wiki/HSL_and_HSV */\nexport function RGBtoHSV (rgba: RGB): HSV {\n  if (!rgba) return { h: 0, s: 1, v: 1, a: 1 }\n\n  const r = rgba.r / 255\n  const g = rgba.g / 255\n  const b = rgba.b / 255\n  const max = Math.max(r, g, b)\n  const min = Math.min(r, g, b)\n\n  let h = 0\n\n  if (max !== min) {\n    if (max === r) {\n      h = 60 * (0 + ((g - b) / (max - min)))\n    } else if (max === g) {\n      h = 60 * (2 + ((b - r) / (max - min)))\n    } else if (max === b) {\n      h = 60 * (4 + ((r - g) / (max - min)))\n    }\n  }\n\n  if (h < 0) h = h + 360\n\n  const s = max === 0 ? 0 : (max - min) / max\n  const hsv = [h, s, max]\n\n  return { h: hsv[0], s: hsv[1], v: hsv[2], a: rgba.a }\n}\n\nexport function HSVtoHSL (hsva: HSV): HSL {\n  const { h, s, v, a } = hsva\n\n  const l = v - (v * s / 2)\n\n  const sprime = l === 1 || l === 0 ? 0 : (v - l) / Math.min(l, 1 - l)\n\n  return { h, s: sprime, l, a }\n}\n\nexport function HSLtoHSV (hsl: HSL): HSV {\n  const { h, s, l, a } = hsl\n\n  const v = l + s * Math.min(l, 1 - l)\n\n  const sprime = v === 0 ? 0 : 2 - (2 * l / v)\n\n  return { h, s: sprime, v, a }\n}\n\nexport function RGBtoCSS ({ r, g, b, a }: RGB): string {\n  return a === undefined ? `rgb(${r}, ${g}, ${b})` : `rgba(${r}, ${g}, ${b}, ${a})`\n}\n\nexport function HSVtoCSS (hsva: HSV): string {\n  return RGBtoCSS(HSVtoRGB(hsva))\n}\n\nfunction toHex (v: number) {\n  const h = Math.round(v).toString(16)\n  return ('00'.substr(0, 2 - h.length) + h).toUpperCase()\n}\n\nexport function RGBtoHex ({ r, g, b, a }: RGB): Hex {\n  return `#${[\n    toHex(r),\n    toHex(g),\n    toHex(b),\n    a !== undefined ? toHex(Math.round(a * 255)) : '',\n  ].join('')}` as Hex\n}\n\nexport function HexToRGB (hex: Hex): RGB {\n  hex = parseHex(hex)\n  let [r, g, b, a] = chunk(hex, 2).map((c: string) => parseInt(c, 16))\n  a = a === undefined ? a : (a / 255)\n\n  return { r, g, b, a }\n}\n\nexport function HexToHSV (hex: Hex): HSV {\n  const rgb = HexToRGB(hex)\n  return RGBtoHSV(rgb)\n}\n\nexport function HSVtoHex (hsva: HSV): Hex {\n  return RGBtoHex(HSVtoRGB(hsva))\n}\n\nexport function parseHex (hex: string): Hex {\n  if (hex.startsWith('#')) {\n    hex = hex.slice(1)\n  }\n\n  hex = hex.replace(/([^0-9a-f])/gi, 'F')\n\n  if (hex.length === 3 || hex.length === 4) {\n    hex = hex.split('').map(x => x + x).join('')\n  }\n\n  if (hex.length !== 6) {\n    hex = padEnd(padEnd(hex, 6), 8, 'F')\n  }\n\n  return hex as Hex\n}\n\nexport function parseGradient (\n  gradient: string,\n  colors: Record<string, Record<string, string>>,\n  currentTheme: Partial<Colors>,\n) {\n  return gradient.replace(/([a-z]+(\\s[a-z]+-[1-5])?)(?=$|,)/gi, x => {\n    return classToHex(x, colors, currentTheme) || x\n  }).replace(/(rgba\\()#[0-9a-f]+(?=,)/gi, x => {\n    return 'rgba(' + Object.values(HexToRGB(parseHex(x.replace(/rgba\\(/, '')))).slice(0, 3).join(',')\n  })\n}\n\nexport function lighten (value: RGB, amount: number): RGB {\n  const lab = CIELAB.fromXYZ(sRGB.toXYZ(value))\n  lab[0] = lab[0] + amount * 10\n\n  return sRGB.fromXYZ(CIELAB.toXYZ(lab))\n}\n\nexport function darken (value: RGB, amount: number): RGB {\n  const lab = CIELAB.fromXYZ(sRGB.toXYZ(value))\n  lab[0] = lab[0] - amount * 10\n\n  return sRGB.fromXYZ(CIELAB.toXYZ(lab))\n}\n\n/**\n * Calculate the relative luminance of a given color\n * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n */\nexport function getLuma (color: Color) {\n  const rgb = parseColor(color)\n\n  return sRGB.toXYZ(rgb)[1]\n}\n\n/**\n * Returns the contrast ratio (1-21) between two colors.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function getContrast (first: Color, second: Color) {\n  const l1 = getLuma(first)\n  const l2 = getLuma(second)\n\n  const light = Math.max(l1, l2)\n  const dark = Math.min(l1, l2)\n\n  return (light + 0.05) / (dark + 0.05)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}