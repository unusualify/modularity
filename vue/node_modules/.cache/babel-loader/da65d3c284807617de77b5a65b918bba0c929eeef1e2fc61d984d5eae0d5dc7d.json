{"ast":null,"code":"import _slicedToArray from \"/var/www/crm_template/packages/oobook/crm-base/vue/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _toConsumableArray from \"/var/www/crm_template/packages/oobook/crm-base/vue/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"/var/www/crm_template/packages/oobook/crm-base/vue/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport { withDirectives as _withDirectives, resolveDirective as _resolveDirective, mergeProps as _mergeProps, createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VSelectionControl.css\";\n\n// Components\nimport { VIcon } from \"../VIcon/index.mjs\";\nimport { VLabel } from \"../VLabel/index.mjs\";\nimport { makeSelectionControlGroupProps, VSelectionControlGroupSymbol } from \"../VSelectionControlGroup/VSelectionControlGroup.mjs\"; // Directives\nimport { Ripple } from \"../../directives/ripple/index.mjs\"; // Composables\nimport { useDensity } from \"../../composables/density.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\";\nimport { useTextColor } from \"../../composables/color.mjs\"; // Utilities\nimport { computed, inject, nextTick, ref } from 'vue';\nimport { filterInputAttrs, genericComponent, getUid, pick, propsFactory, SUPPORTS_FOCUS_VISIBLE, useRender, wrapInArray } from \"../../util/index.mjs\"; // Types\nexport var makeSelectionControlProps = propsFactory(_objectSpread({\n  label: String,\n  trueValue: null,\n  falseValue: null,\n  value: null\n}, makeSelectionControlGroupProps()), 'v-selection-control');\nexport function useSelectionControl(props) {\n  var group = inject(VSelectionControlGroupSymbol, undefined);\n  var _useDensity = useDensity(props),\n    densityClasses = _useDensity.densityClasses;\n  var modelValue = useProxiedModel(props, 'modelValue');\n  var trueValue = computed(function () {\n    return props.trueValue !== undefined ? props.trueValue : props.value !== undefined ? props.value : true;\n  });\n  var falseValue = computed(function () {\n    return props.falseValue !== undefined ? props.falseValue : false;\n  });\n  var isMultiple = computed(function () {\n    return !!props.multiple || props.multiple == null && Array.isArray(modelValue.value);\n  });\n  var model = computed({\n    get: function get() {\n      var val = group ? group.modelValue.value : modelValue.value;\n      return isMultiple.value ? val.some(function (v) {\n        return props.valueComparator(v, trueValue.value);\n      }) : props.valueComparator(val, trueValue.value);\n    },\n    set: function set(val) {\n      if (props.readonly) return;\n      var currentValue = val ? trueValue.value : falseValue.value;\n      var newVal = currentValue;\n      if (isMultiple.value) {\n        newVal = val ? [].concat(_toConsumableArray(wrapInArray(modelValue.value)), [currentValue]) : wrapInArray(modelValue.value).filter(function (item) {\n          return !props.valueComparator(item, trueValue.value);\n        });\n      }\n      if (group) {\n        group.modelValue.value = newVal;\n      } else {\n        modelValue.value = newVal;\n      }\n    }\n  });\n  var _useTextColor = useTextColor(computed(function () {\n      return model.value && !props.error && !props.disabled ? props.color : undefined;\n    })),\n    textColorClasses = _useTextColor.textColorClasses,\n    textColorStyles = _useTextColor.textColorStyles;\n  var icon = computed(function () {\n    return model.value ? props.trueIcon : props.falseIcon;\n  });\n  return {\n    group: group,\n    densityClasses: densityClasses,\n    trueValue: trueValue,\n    falseValue: falseValue,\n    model: model,\n    textColorClasses: textColorClasses,\n    textColorStyles: textColorStyles,\n    icon: icon\n  };\n}\nexport var VSelectionControl = genericComponent()({\n  name: 'VSelectionControl',\n  directives: {\n    Ripple: Ripple\n  },\n  inheritAttrs: false,\n  props: makeSelectionControlProps(),\n  emits: {\n    'update:modelValue': function updateModelValue(val) {\n      return true;\n    }\n  },\n  setup: function setup(props, _ref) {\n    var attrs = _ref.attrs,\n      slots = _ref.slots;\n    var _useSelectionControl = useSelectionControl(props),\n      group = _useSelectionControl.group,\n      densityClasses = _useSelectionControl.densityClasses,\n      icon = _useSelectionControl.icon,\n      model = _useSelectionControl.model,\n      textColorClasses = _useSelectionControl.textColorClasses,\n      textColorStyles = _useSelectionControl.textColorStyles,\n      trueValue = _useSelectionControl.trueValue;\n    var uid = getUid();\n    var id = computed(function () {\n      return props.id || \"input-\".concat(uid);\n    });\n    var isFocused = ref(false);\n    var isFocusVisible = ref(false);\n    var input = ref();\n    group === null || group === void 0 ? void 0 : group.onForceUpdate(function () {\n      if (input.value) {\n        input.value.checked = model.value;\n      }\n    });\n    function onFocus(e) {\n      isFocused.value = true;\n      if (!SUPPORTS_FOCUS_VISIBLE || SUPPORTS_FOCUS_VISIBLE && e.target.matches(':focus-visible')) {\n        isFocusVisible.value = true;\n      }\n    }\n    function onBlur() {\n      isFocused.value = false;\n      isFocusVisible.value = false;\n    }\n    function onInput(e) {\n      if (props.readonly && group) {\n        nextTick(function () {\n          return group.forceUpdate();\n        });\n      }\n      model.value = e.target.checked;\n    }\n    useRender(function () {\n      var _slots$default, _slots$input;\n      var label = slots.label ? slots.label({\n        label: props.label,\n        props: {\n          \"for\": id.value\n        }\n      }) : props.label;\n      var _filterInputAttrs = filterInputAttrs(attrs),\n        _filterInputAttrs2 = _slicedToArray(_filterInputAttrs, 2),\n        rootAttrs = _filterInputAttrs2[0],\n        inputAttrs = _filterInputAttrs2[1];\n      return _createVNode(\"div\", _mergeProps({\n        \"class\": ['v-selection-control', {\n          'v-selection-control--dirty': model.value,\n          'v-selection-control--disabled': props.disabled,\n          'v-selection-control--error': props.error,\n          'v-selection-control--focused': isFocused.value,\n          'v-selection-control--focus-visible': isFocusVisible.value,\n          'v-selection-control--inline': props.inline\n        }, densityClasses.value]\n      }, rootAttrs), [_createVNode(\"div\", {\n        \"class\": ['v-selection-control__wrapper', textColorClasses.value],\n        \"style\": textColorStyles.value\n      }, [(_slots$default = slots[\"default\"]) === null || _slots$default === void 0 ? void 0 : _slots$default.call(slots), _withDirectives(_createVNode(\"div\", {\n        \"class\": ['v-selection-control__input']\n      }, [icon.value && _createVNode(VIcon, {\n        \"key\": \"icon\",\n        \"icon\": icon.value\n      }, null), _createVNode(\"input\", _mergeProps({\n        \"ref\": input,\n        \"checked\": model.value,\n        \"disabled\": props.disabled,\n        \"id\": id.value,\n        \"onBlur\": onBlur,\n        \"onFocus\": onFocus,\n        \"onInput\": onInput,\n        \"aria-disabled\": props.readonly,\n        \"type\": props.type,\n        \"value\": trueValue.value,\n        \"name\": props.name,\n        \"aria-checked\": props.type === 'checkbox' ? model.value : undefined\n      }, inputAttrs), null), (_slots$input = slots.input) === null || _slots$input === void 0 ? void 0 : _slots$input.call(slots, {\n        model: model,\n        textColorClasses: textColorClasses,\n        textColorStyles: textColorStyles,\n        props: {\n          onFocus: onFocus,\n          onBlur: onBlur,\n          id: id.value\n        }\n      })]), [[_resolveDirective(\"ripple\"), props.ripple && [!props.disabled && !props.readonly, null, ['center', 'circle']]]])]), label && _createVNode(VLabel, {\n        \"for\": id.value,\n        \"clickable\": true\n      }, {\n        \"default\": function _default() {\n          return [label];\n        }\n      })]);\n    });\n    return {\n      isFocused: isFocused,\n      input: input\n    };\n  }\n});\nexport function filterControlProps(props) {\n  return pick(props, Object.keys(VSelectionControl.props));\n}","map":{"version":3,"names":["VIcon","VLabel","makeSelectionControlGroupProps","VSelectionControlGroupSymbol","Ripple","useDensity","useProxiedModel","useTextColor","computed","inject","nextTick","ref","filterInputAttrs","genericComponent","getUid","pick","propsFactory","SUPPORTS_FOCUS_VISIBLE","useRender","wrapInArray","makeSelectionControlProps","_objectSpread","label","String","trueValue","falseValue","value","useSelectionControl","props","group","undefined","_useDensity","densityClasses","modelValue","isMultiple","multiple","Array","isArray","model","get","val","some","v","valueComparator","set","readonly","currentValue","newVal","concat","_toConsumableArray","filter","item","_useTextColor","error","disabled","color","textColorClasses","textColorStyles","icon","trueIcon","falseIcon","VSelectionControl","name","directives","inheritAttrs","emits","updateModelValue","setup","_ref","attrs","slots","_useSelectionControl","uid","id","isFocused","isFocusVisible","input","onForceUpdate","checked","onFocus","e","target","matches","onBlur","onInput","forceUpdate","_slots$default","_slots$input","_filterInputAttrs","_filterInputAttrs2","_slicedToArray","rootAttrs","inputAttrs","_createVNode","_mergeProps","inline","call","_withDirectives","type","_resolveDirective","ripple","_default","filterControlProps","Object","keys"],"sources":["../../../src/components/VSelectionControl/VSelectionControl.tsx"],"sourcesContent":["// Styles\nimport './VSelectionControl.sass'\n\n// Components\nimport { VIcon } from '@/components/VIcon'\nimport { VLabel } from '@/components/VLabel'\nimport { makeSelectionControlGroupProps, VSelectionControlGroupSymbol } from '@/components/VSelectionControlGroup/VSelectionControlGroup'\n\n// Directives\nimport { Ripple } from '@/directives/ripple'\n\n// Composables\nimport { useDensity } from '@/composables/density'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { useTextColor } from '@/composables/color'\n\n// Utilities\nimport { computed, inject, nextTick, ref } from 'vue'\nimport {\n  filterInputAttrs,\n  genericComponent,\n  getUid,\n  pick,\n  propsFactory,\n  SUPPORTS_FOCUS_VISIBLE,\n  useRender,\n  wrapInArray,\n} from '@/util'\n\n// Types\nimport type { CSSProperties, ExtractPropTypes, Ref, WritableComputedRef } from 'vue'\nimport type { MakeSlots, SlotsToProps } from '@/util'\n\nexport type SelectionControlSlot = {\n  model: WritableComputedRef<any>\n  textColorClasses: Ref<string[]>\n  textColorStyles: Ref<CSSProperties>\n  props: {\n    onBlur: (e: Event) => void\n    onFocus: (e: FocusEvent) => void\n    id: string\n  }\n}\n\nexport type VSelectionControlSlots = MakeSlots<{\n  default: []\n  label: [{ label: string | undefined, props: Record<string, unknown> }]\n  input: [SelectionControlSlot]\n}>\n\nexport const makeSelectionControlProps = propsFactory({\n  label: String,\n  trueValue: null,\n  falseValue: null,\n  value: null,\n\n  ...makeSelectionControlGroupProps(),\n}, 'v-selection-control')\n\nexport function useSelectionControl (\n  props: ExtractPropTypes<ReturnType<typeof makeSelectionControlProps>> & {\n    'onUpdate:modelValue': ((val: any) => void) | undefined\n  }\n) {\n  const group = inject(VSelectionControlGroupSymbol, undefined)\n  const { densityClasses } = useDensity(props)\n  const modelValue = useProxiedModel(props, 'modelValue')\n  const trueValue = computed(() => (\n    props.trueValue !== undefined ? props.trueValue\n    : props.value !== undefined ? props.value\n    : true\n  ))\n  const falseValue = computed(() => props.falseValue !== undefined ? props.falseValue : false)\n  const isMultiple = computed(() => (\n    !!props.multiple ||\n    (props.multiple == null && Array.isArray(modelValue.value))\n  ))\n  const model = computed({\n    get () {\n      const val = group ? group.modelValue.value : modelValue.value\n\n      return isMultiple.value\n        ? val.some((v: any) => props.valueComparator(v, trueValue.value))\n        : props.valueComparator(val, trueValue.value)\n    },\n    set (val: boolean) {\n      if (props.readonly) return\n\n      const currentValue = val ? trueValue.value : falseValue.value\n\n      let newVal = currentValue\n\n      if (isMultiple.value) {\n        newVal = val\n          ? [...wrapInArray(modelValue.value), currentValue]\n          : wrapInArray(modelValue.value).filter((item: any) => !props.valueComparator(item, trueValue.value))\n      }\n\n      if (group) {\n        group.modelValue.value = newVal\n      } else {\n        modelValue.value = newVal\n      }\n    },\n  })\n  const { textColorClasses, textColorStyles } = useTextColor(computed(() => {\n    return (\n      model.value &&\n      !props.error &&\n      !props.disabled\n    ) ? props.color : undefined\n  }))\n  const icon = computed(() => model.value ? props.trueIcon : props.falseIcon)\n\n  return {\n    group,\n    densityClasses,\n    trueValue,\n    falseValue,\n    model,\n    textColorClasses,\n    textColorStyles,\n    icon,\n  }\n}\n\nexport const VSelectionControl = genericComponent<new <T>() => {\n  $props: {\n    modelValue?: T\n    'onUpdate:modelValue'?: (val: T) => any\n  } & SlotsToProps<VSelectionControlSlots>\n}>()({\n  name: 'VSelectionControl',\n\n  directives: { Ripple },\n\n  inheritAttrs: false,\n\n  props: makeSelectionControlProps(),\n\n  emits: {\n    'update:modelValue': (val: any) => true,\n  },\n\n  setup (props, { attrs, slots }) {\n    const {\n      group,\n      densityClasses,\n      icon,\n      model,\n      textColorClasses,\n      textColorStyles,\n      trueValue,\n    } = useSelectionControl(props)\n    const uid = getUid()\n    const id = computed(() => props.id || `input-${uid}`)\n    const isFocused = ref(false)\n    const isFocusVisible = ref(false)\n    const input = ref<HTMLInputElement>()\n\n    group?.onForceUpdate(() => {\n      if (input.value) {\n        input.value.checked = model.value\n      }\n    })\n\n    function onFocus (e: FocusEvent) {\n      isFocused.value = true\n      if (\n        !SUPPORTS_FOCUS_VISIBLE ||\n        (SUPPORTS_FOCUS_VISIBLE && (e.target as HTMLElement).matches(':focus-visible'))\n      ) {\n        isFocusVisible.value = true\n      }\n    }\n\n    function onBlur () {\n      isFocused.value = false\n      isFocusVisible.value = false\n    }\n\n    function onInput (e: Event) {\n      if (props.readonly && group) {\n        nextTick(() => group.forceUpdate())\n      }\n      model.value = (e.target as HTMLInputElement).checked\n    }\n\n    useRender(() => {\n      const label = slots.label\n        ? slots.label({\n          label: props.label,\n          props: { for: id.value },\n        })\n        : props.label\n      const [rootAttrs, inputAttrs] = filterInputAttrs(attrs)\n\n      return (\n        <div\n          class={[\n            'v-selection-control',\n            {\n              'v-selection-control--dirty': model.value,\n              'v-selection-control--disabled': props.disabled,\n              'v-selection-control--error': props.error,\n              'v-selection-control--focused': isFocused.value,\n              'v-selection-control--focus-visible': isFocusVisible.value,\n              'v-selection-control--inline': props.inline,\n            },\n            densityClasses.value,\n          ]}\n          { ...rootAttrs }\n        >\n          <div\n            class={[\n              'v-selection-control__wrapper',\n              textColorClasses.value,\n            ]}\n            style={ textColorStyles.value }\n          >\n            { slots.default?.() }\n\n            <div\n              class={[\n                'v-selection-control__input',\n              ]}\n              v-ripple={ props.ripple && [\n                !props.disabled && !props.readonly,\n                null,\n                ['center', 'circle'],\n              ]}\n            >\n              { icon.value && <VIcon key=\"icon\" icon={ icon.value } /> }\n\n              <input\n                ref={ input }\n                checked={ model.value }\n                disabled={ props.disabled }\n                id={ id.value }\n                onBlur={ onBlur }\n                onFocus={ onFocus }\n                onInput={ onInput }\n                aria-disabled={ props.readonly }\n                type={ props.type }\n                value={ trueValue.value }\n                name={ props.name }\n                aria-checked={ props.type === 'checkbox' ? model.value : undefined }\n                { ...inputAttrs }\n              />\n\n              { slots.input?.({\n                model,\n                textColorClasses,\n                textColorStyles,\n                props: {\n                  onFocus,\n                  onBlur,\n                  id: id.value,\n                },\n              } as SelectionControlSlot) }\n            </div>\n          </div>\n\n          { label && (\n            <VLabel for={ id.value } clickable>\n              { label }\n            </VLabel>\n          ) }\n        </div>\n      )\n    })\n\n    return {\n      isFocused,\n      input,\n    }\n  },\n})\n\nexport type VSelectionControl = InstanceType<typeof VSelectionControl>\n\nexport function filterControlProps (props: ExtractPropTypes<ReturnType<typeof makeSelectionControlProps>>) {\n  return pick(props, Object.keys(VSelectionControl.props) as any)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}