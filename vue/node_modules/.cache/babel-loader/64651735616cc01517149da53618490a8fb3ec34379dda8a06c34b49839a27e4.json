{"ast":null,"code":"import { mergeProps as _mergeProps, resolveDirective as _resolveDirective, createVNode as _createVNode, Fragment as _Fragment } from \"vue\";\n// Styles\nimport \"./VRadioGroup.css\";\n\n// Components\nimport { filterControlProps } from \"../VSelectionControl/VSelectionControl.mjs\";\nimport { filterInputProps, makeVInputProps, VInput } from \"../VInput/VInput.mjs\";\nimport { makeSelectionControlGroupProps, VSelectionControlGroup } from \"../VSelectionControlGroup/VSelectionControlGroup.mjs\";\nimport { VLabel } from \"../VLabel/index.mjs\"; // Composables\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\"; // Utilities\nimport { computed } from 'vue';\nimport { filterInputAttrs, genericComponent, getUid, omit, useRender } from \"../../util/index.mjs\"; // Types\nexport const VRadioGroup = genericComponent()({\n  name: 'VRadioGroup',\n  inheritAttrs: false,\n  props: {\n    height: {\n      type: [Number, String],\n      default: 'auto'\n    },\n    ...makeVInputProps(),\n    ...omit(makeSelectionControlGroupProps(), ['multiple']),\n    trueIcon: {\n      type: IconValue,\n      default: '$radioOn'\n    },\n    falseIcon: {\n      type: IconValue,\n      default: '$radioOff'\n    },\n    type: {\n      type: String,\n      default: 'radio'\n    }\n  },\n  emits: {\n    'update:modelValue': val => true\n  },\n  setup(props, _ref) {\n    let {\n      attrs,\n      slots\n    } = _ref;\n    const uid = getUid();\n    const id = computed(() => props.id || `radio-group-${uid}`);\n    const model = useProxiedModel(props, 'modelValue');\n    useRender(() => {\n      const [inputAttrs, controlAttrs] = filterInputAttrs(attrs);\n      const [inputProps, _1] = filterInputProps(props);\n      const [controlProps, _2] = filterControlProps({\n        ...props,\n        multiple: false\n      });\n      const label = slots.label ? slots.label({\n        label: props.label,\n        props: {\n          for: id.value\n        }\n      }) : props.label;\n      return _createVNode(VInput, _mergeProps({\n        \"class\": \"v-radio-group\"\n      }, inputAttrs, inputProps, {\n        \"modelValue\": model.value,\n        \"onUpdate:modelValue\": $event => model.value = $event,\n        \"id\": id.value\n      }), {\n        ...slots,\n        default: _ref2 => {\n          let {\n            id,\n            messagesId,\n            isDisabled,\n            isReadonly\n          } = _ref2;\n          return _createVNode(_Fragment, null, [label && _createVNode(VLabel, {\n            \"id\": id.value\n          }, {\n            default: () => [label]\n          }), _createVNode(VSelectionControlGroup, _mergeProps(controlProps, {\n            \"id\": id.value,\n            \"aria-describedby\": messagesId.value,\n            \"defaultsTarget\": \"VRadio\",\n            \"trueIcon\": props.trueIcon,\n            \"falseIcon\": props.falseIcon,\n            \"type\": props.type,\n            \"disabled\": isDisabled.value,\n            \"readonly\": isReadonly.value,\n            \"aria-labelledby\": label ? id.value : undefined\n          }, controlAttrs, {\n            \"modelValue\": model.value,\n            \"onUpdate:modelValue\": $event => model.value = $event\n          }), slots)]);\n        }\n      });\n    });\n    return {};\n  }\n});","map":{"version":3,"names":["filterControlProps","filterInputProps","makeVInputProps","VInput","makeSelectionControlGroupProps","VSelectionControlGroup","VLabel","IconValue","useProxiedModel","computed","filterInputAttrs","genericComponent","getUid","omit","useRender","VRadioGroup","name","inheritAttrs","props","height","type","Number","String","default","trueIcon","falseIcon","emits","val","setup","_ref","attrs","slots","uid","id","model","inputAttrs","controlAttrs","inputProps","_1","controlProps","_2","multiple","label","for","value","_createVNode","_mergeProps","$event","_ref2","messagesId","isDisabled","isReadonly","_Fragment","undefined"],"sources":["../../../src/components/VRadioGroup/VRadioGroup.tsx"],"sourcesContent":["// Styles\nimport './VRadioGroup.sass'\n\n// Components\nimport { filterControlProps } from '@/components/VSelectionControl/VSelectionControl'\nimport { filterInputProps, makeVInputProps, VInput } from '@/components/VInput/VInput'\nimport { makeSelectionControlGroupProps, VSelectionControlGroup } from '@/components/VSelectionControlGroup/VSelectionControlGroup'\nimport { VLabel } from '@/components/VLabel'\n\n// Composables\nimport { IconValue } from '@/composables/icons'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed } from 'vue'\nimport { filterInputAttrs, genericComponent, getUid, omit, useRender } from '@/util'\n\n// Types\nimport type { VInputSlots } from '@/components/VInput/VInput'\nimport type { VSelectionControlSlots } from '@/components/VSelectionControl/VSelectionControl'\n\nexport type VRadioGroupSlots = VInputSlots & VSelectionControlSlots\n\nexport const VRadioGroup = genericComponent<VRadioGroupSlots>()({\n  name: 'VRadioGroup',\n\n  inheritAttrs: false,\n\n  props: {\n    height: {\n      type: [Number, String],\n      default: 'auto',\n    },\n\n    ...makeVInputProps(),\n    ...omit(makeSelectionControlGroupProps(), ['multiple']),\n\n    trueIcon: {\n      type: IconValue,\n      default: '$radioOn',\n    },\n    falseIcon: {\n      type: IconValue,\n      default: '$radioOff',\n    },\n    type: {\n      type: String,\n      default: 'radio',\n    },\n  },\n\n  emits: {\n    'update:modelValue': (val: any) => true,\n  },\n\n  setup (props, { attrs, slots }) {\n    const uid = getUid()\n    const id = computed(() => props.id || `radio-group-${uid}`)\n    const model = useProxiedModel(props, 'modelValue')\n\n    useRender(() => {\n      const [inputAttrs, controlAttrs] = filterInputAttrs(attrs)\n      const [inputProps, _1] = filterInputProps(props)\n      const [controlProps, _2] = filterControlProps({\n        ...props,\n        multiple: false as const,\n      })\n      const label = slots.label\n        ? slots.label({\n          label: props.label,\n          props: { for: id.value },\n        })\n        : props.label\n\n      return (\n        <VInput\n          class=\"v-radio-group\"\n          { ...inputAttrs }\n          { ...inputProps }\n          v-model={ model.value }\n          id={ id.value }\n        >\n          {{\n            ...slots,\n            default: ({\n              id,\n              messagesId,\n              isDisabled,\n              isReadonly,\n            }) => (\n              <>\n                { label && (\n                  <VLabel id={ id.value }>\n                    { label }\n                  </VLabel>\n                ) }\n\n                <VSelectionControlGroup\n                  { ...controlProps }\n                  id={ id.value }\n                  aria-describedby={ messagesId.value }\n                  defaultsTarget=\"VRadio\"\n                  trueIcon={ props.trueIcon }\n                  falseIcon={ props.falseIcon }\n                  type={ props.type }\n                  disabled={ isDisabled.value }\n                  readonly={ isReadonly.value }\n                  aria-labelledby={ label ? id.value : undefined }\n                  { ...controlAttrs }\n                  v-model={ model.value }\n                  v-slots={ slots }\n                />\n              </>\n            ),\n          }}\n        </VInput>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VRadioGroup = InstanceType<typeof VRadioGroup>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}