{"ast":null,"code":"import { mergeProps as _mergeProps, createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VDialog.css\";\n\n// Components\nimport { VDialogTransition } from \"../transitions/index.mjs\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\";\nimport { VOverlay } from \"../VOverlay/index.mjs\"; // Composables\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\";\nimport { useScopeId } from \"../../composables/scopeId.mjs\";\nimport { forwardRefs } from \"../../composables/forwardRefs.mjs\"; // Utilities\nimport { computed, mergeProps, nextTick, ref, watch } from 'vue';\nimport { genericComponent, IN_BROWSER, useRender } from \"../../util/index.mjs\";\nimport { filterVOverlayProps, makeVOverlayProps } from \"../VOverlay/VOverlay.mjs\"; // Types\nexport const VDialog = genericComponent()({\n  name: 'VDialog',\n  props: {\n    fullscreen: Boolean,\n    retainFocus: {\n      type: Boolean,\n      default: true\n    },\n    scrollable: Boolean,\n    ...makeVOverlayProps({\n      origin: 'center center',\n      scrollStrategy: 'block',\n      transition: {\n        component: VDialogTransition\n      },\n      zIndex: 2400\n    })\n  },\n  emits: {\n    'update:modelValue': value => true\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const isActive = useProxiedModel(props, 'modelValue');\n    const {\n      scopeId\n    } = useScopeId();\n    const overlay = ref();\n    function onFocusin(e) {\n      const before = e.relatedTarget;\n      const after = e.target;\n      if (before !== after && overlay.value?.contentEl &&\n      // We're the topmost dialog\n      overlay.value?.globalTop &&\n      // It isn't the document or the dialog body\n      ![document, overlay.value.contentEl].includes(after) &&\n      // It isn't inside the dialog body\n      !overlay.value.contentEl.contains(after)) {\n        const focusable = [...overlay.value.contentEl.querySelectorAll('button, [href], input:not([type=\"hidden\"]), select, textarea, [tabindex]:not([tabindex=\"-1\"])')].filter(el => !el.hasAttribute('disabled') && !el.matches('[tabindex=\"-1\"]'));\n        if (!focusable.length) return;\n        const firstElement = focusable[0];\n        const lastElement = focusable[focusable.length - 1];\n        if (before === firstElement) {\n          lastElement.focus();\n        } else {\n          firstElement.focus();\n        }\n      }\n    }\n    if (IN_BROWSER) {\n      watch(() => isActive.value && props.retainFocus, val => {\n        val ? document.addEventListener('focusin', onFocusin) : document.removeEventListener('focusin', onFocusin);\n      }, {\n        immediate: true\n      });\n    }\n    watch(isActive, async val => {\n      await nextTick();\n      if (val) {\n        overlay.value.contentEl?.focus({\n          preventScroll: true\n        });\n      } else {\n        overlay.value.activatorEl?.focus({\n          preventScroll: true\n        });\n      }\n    });\n    const activatorProps = computed(() => mergeProps({\n      'aria-haspopup': 'dialog',\n      'aria-expanded': String(isActive.value)\n    }, props.activatorProps));\n    useRender(() => {\n      const [overlayProps] = filterVOverlayProps(props);\n      return _createVNode(VOverlay, _mergeProps({\n        \"ref\": overlay,\n        \"class\": ['v-dialog', {\n          'v-dialog--fullscreen': props.fullscreen,\n          'v-dialog--scrollable': props.scrollable\n        }]\n      }, overlayProps, {\n        \"modelValue\": isActive.value,\n        \"onUpdate:modelValue\": $event => isActive.value = $event,\n        \"aria-role\": \"dialog\",\n        \"aria-modal\": \"true\",\n        \"activatorProps\": activatorProps.value\n      }, scopeId), {\n        activator: slots.activator,\n        default: function () {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n          return _createVNode(VDefaultsProvider, {\n            \"root\": true\n          }, {\n            default: () => [slots.default?.(...args)]\n          });\n        }\n      });\n    });\n    return forwardRefs({}, overlay);\n  }\n});","map":{"version":3,"names":["VDialogTransition","VDefaultsProvider","VOverlay","useProxiedModel","useScopeId","forwardRefs","computed","mergeProps","nextTick","ref","watch","genericComponent","IN_BROWSER","useRender","filterVOverlayProps","makeVOverlayProps","VDialog","name","props","fullscreen","Boolean","retainFocus","type","default","scrollable","origin","scrollStrategy","transition","component","zIndex","emits","value","setup","_ref","slots","isActive","scopeId","overlay","onFocusin","e","before","relatedTarget","after","target","contentEl","globalTop","document","includes","contains","focusable","querySelectorAll","filter","el","hasAttribute","matches","length","firstElement","lastElement","focus","val","addEventListener","removeEventListener","immediate","preventScroll","activatorEl","activatorProps","String","overlayProps","_createVNode","_mergeProps","$event","activator","_len","arguments","args","Array","_key"],"sources":["../../../src/components/VDialog/VDialog.tsx"],"sourcesContent":["// Styles\nimport './VDialog.sass'\n\n// Components\nimport { VDialogTransition } from '@/components/transitions'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VOverlay } from '@/components/VOverlay'\n\n// Composables\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { useScopeId } from '@/composables/scopeId'\nimport { forwardRefs } from '@/composables/forwardRefs'\n\n// Utilities\nimport { computed, mergeProps, nextTick, ref, watch } from 'vue'\nimport { genericComponent, IN_BROWSER, useRender } from '@/util'\nimport { filterVOverlayProps, makeVOverlayProps } from '@/components/VOverlay/VOverlay'\n\n// Types\nimport type { OverlaySlots } from '@/components/VOverlay/VOverlay'\n\nexport const VDialog = genericComponent<OverlaySlots>()({\n  name: 'VDialog',\n\n  props: {\n    fullscreen: Boolean,\n    retainFocus: {\n      type: Boolean,\n      default: true,\n    },\n    scrollable: Boolean,\n\n    ...makeVOverlayProps({\n      origin: 'center center' as const,\n      scrollStrategy: 'block' as const,\n      transition: { component: VDialogTransition },\n      zIndex: 2400,\n    }),\n  },\n\n  emits: {\n    'update:modelValue': (value: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const isActive = useProxiedModel(props, 'modelValue')\n    const { scopeId } = useScopeId()\n\n    const overlay = ref<VOverlay>()\n    function onFocusin (e: FocusEvent) {\n      const before = e.relatedTarget as HTMLElement | null\n      const after = e.target as HTMLElement | null\n\n      if (\n        before !== after &&\n        overlay.value?.contentEl &&\n        // We're the topmost dialog\n        overlay.value?.globalTop &&\n        // It isn't the document or the dialog body\n        ![document, overlay.value.contentEl].includes(after!) &&\n        // It isn't inside the dialog body\n        !overlay.value.contentEl.contains(after)\n      ) {\n        const focusable = [...overlay.value.contentEl.querySelectorAll(\n          'button, [href], input:not([type=\"hidden\"]), select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n        )].filter(el => !el.hasAttribute('disabled') && !el.matches('[tabindex=\"-1\"]')) as HTMLElement[]\n\n        if (!focusable.length) return\n\n        const firstElement = focusable[0]\n        const lastElement = focusable[focusable.length - 1]\n\n        if (before === firstElement) {\n          lastElement.focus()\n        } else {\n          firstElement.focus()\n        }\n      }\n    }\n\n    if (IN_BROWSER) {\n      watch(() => isActive.value && props.retainFocus, val => {\n        val\n          ? document.addEventListener('focusin', onFocusin)\n          : document.removeEventListener('focusin', onFocusin)\n      }, { immediate: true })\n    }\n\n    watch(isActive, async val => {\n      await nextTick()\n      if (val) {\n        overlay.value!.contentEl?.focus({ preventScroll: true })\n      } else {\n        overlay.value!.activatorEl?.focus({ preventScroll: true })\n      }\n    })\n\n    const activatorProps = computed(() =>\n      mergeProps({\n        'aria-haspopup': 'dialog',\n        'aria-expanded': String(isActive.value),\n      }, props.activatorProps)\n    )\n\n    useRender(() => {\n      const [overlayProps] = filterVOverlayProps(props)\n\n      return (\n        <VOverlay\n          ref={ overlay }\n          class={[\n            'v-dialog',\n            {\n              'v-dialog--fullscreen': props.fullscreen,\n              'v-dialog--scrollable': props.scrollable,\n            },\n          ]}\n          { ...overlayProps }\n          v-model={ isActive.value }\n          aria-role=\"dialog\"\n          aria-modal=\"true\"\n          activatorProps={ activatorProps.value }\n          { ...scopeId }\n        >\n          {{\n            activator: slots.activator,\n            default: (...args) => (\n              <VDefaultsProvider root>\n                { slots.default?.(...args) }\n              </VDefaultsProvider>\n            ),\n          }}\n        </VOverlay>\n      )\n    })\n\n    return forwardRefs({}, overlay)\n  },\n})\n\nexport type VDialog = InstanceType<typeof VDialog>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}