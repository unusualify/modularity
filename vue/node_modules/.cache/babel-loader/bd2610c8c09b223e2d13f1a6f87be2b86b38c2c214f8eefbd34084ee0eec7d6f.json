{"ast":null,"code":"import htmlClasses from '@/utils/htmlClasses';\nimport { h } from 'vue';\nexport default {\n  render() {\n    return h('v-dialog', {\n      modelValue: this.dialog,\n      'onUpdate:modelValue': value => this.$emit('update:modelValue', value)\n    }, {\n      activator: (on, attrs) => {\n        h('slot', {\n          name: 'activator',\n          attrs: this.$attrs\n        });\n      }\n    });\n  },\n  props: {\n    value: {\n      type: Boolean\n    },\n    name: {\n      type: String,\n      default: \"Item\"\n    },\n    transition: {\n      type: String,\n      default: \"bottom\"\n    },\n    fullScreen: {\n      type: Boolean,\n      default: false\n    },\n    persistent: {\n      type: Boolean,\n      default: false\n    },\n    scrollable: {\n      type: Boolean,\n      default: false\n    },\n    widthType: {\n      type: String,\n      default: \"md\"\n    }\n  },\n  data() {\n    return {\n      // dialog: this.value,\n      widths: {\n        sm: \"300px\",\n        md: \"500px\",\n        lg: \"750px\"\n      },\n      width: this.widthType,\n      modalClass: htmlClasses.modal,\n      firstFocusableEl: null,\n      lastFocusableEl: null\n    };\n  },\n  computed: {\n    dialog: {\n      get() {\n        return this.value;\n      },\n      set(value) {\n        __log('modal->dialog->setter', value);\n        this.$emit('input', value);\n      }\n    },\n    full: {\n      get() {\n        return this.fullScreen;\n      },\n      set(value) {\n        this.$emit('screenListener', this.fullScreen);\n      }\n    },\n    togglePersistent() {\n      return this.persistent;\n    },\n    toggleFullScreen() {\n      return this.full;\n    },\n    toggleScrollable() {\n      return this.scrollable;\n    },\n    modalWidth() {\n      return this.widths[this.width];\n    }\n  },\n  watch: {},\n  methods: {\n    toggle() {\n      this.dialog = !this.dialog;\n    },\n    close() {\n      this.dialog = false;\n    },\n    open() {\n      this.dialog = true;\n    },\n    confirm() {\n      this.dialog = false;\n    },\n    attrs(attrs) {\n      __log(attrs);\n      return attrs;\n    }\n  },\n  beforeDestroy: function () {},\n  created() {\n    // setInterval((self) => {\n    //     __log(self.dialog)\n    // }, 1000, this)\n  }\n};","map":{"version":3,"names":["htmlClasses","h","render","modelValue","dialog","value","$emit","activator","on","attrs","name","$attrs","props","type","Boolean","String","default","transition","fullScreen","persistent","scrollable","widthType","data","widths","sm","md","lg","width","modalClass","modal","firstFocusableEl","lastFocusableEl","computed","get","set","__log","full","togglePersistent","toggleFullScreen","toggleScrollable","modalWidth","watch","methods","toggle","close","open","confirm","beforeDestroy","created"],"sources":["/var/www/crm_template/packages/oobook/crm-base/vue/src/js/components/modals/Modal_.vue"],"sourcesContent":["<!-- <template>\n\n    <v-dialog\n        v-model=\"dialog\"\n        :fullscreen=\"toggleFullScreen\"\n        :persistent=\"togglePersistent\"\n        :scrollable=\"toggleScrollable\"\n        :width=\"modalWidth\"\n\n        v-bind=\"attrs({...$props, ...$attrs})\"\n\n    >\n\n        <template v-slot:activator=\"{ on, attrs }\">\n            <slot \n                name=\"activator\"\n                :attrs=\"{\n                    ...attrs\n                }\"\n                :on=\"{\n                    ...on\n                }\"\n                >\n            </slot>\n        </template>\n        \n        <slot \n            name=\"body\"\n            :attrs=\"{\n            }\"\n            :on=\"{\n                openDialog: this.open,\n                closeDialog: this.close,\n                confirmDialog: this.confirm\n            }\"\n            :closeDialog=\"close\"\n            >\n        \n        </slot>\n    </v-dialog>\n</template> -->\n\n<script>\nimport htmlClasses from '@/utils/htmlClasses'\nimport { h } from 'vue'\n\nexport default {\n    render() {\n        return h(\n            'v-dialog', \n            {\n                modelValue: this.dialog,\n                'onUpdate:modelValue': (value) => this.$emit('update:modelValue', value)\n                \n            },\n            {\n                activator: (on, attrs) => {\n                    h('slot', {name: 'activator', attrs: this.$attrs })\n                }\n            }\n\n        )\n    },\n    props: {\n        value: {\n            type: Boolean\n        },\n        name: {\n            type: String,\n            default: \"Item\"\n        },\n        transition: {\n            type: String,\n            default: \"bottom\"\n        },\n        fullScreen: {\n            type: Boolean,\n            default: false\n        },\n        persistent: {\n            type: Boolean,\n            default: false\n        },\n        scrollable: {\n            type: Boolean,\n            default: false\n        },\n        widthType: {\n            type: String,\n            default: \"md\",\n        }\n    },\n    data() {\n        return {\n            // dialog: this.value,\n            widths: {\n                sm: \"300px\",\n                md: \"500px\",\n                lg: \"750px\",\n            },\n            width: this.widthType,\n\n            modalClass: htmlClasses.modal,\n            firstFocusableEl: null,\n            lastFocusableEl: null,\n\n        }\n    },\n    computed: {\n        dialog: {\n            get () {\n                return this.value\n            },\n            set (value) {\n                __log('modal->dialog->setter', value)\n                this.$emit('input', value)\n            }\n        },\n        full: {\n            get () {\n                return this.fullScreen\n            },\n            set (value) {\n                this.$emit('screenListener', this.fullScreen)\n            }\n        },\n        togglePersistent() {\n            return this.persistent;\n        },\n        toggleFullScreen() {\n            return this.full;\n        },\n        toggleScrollable() {\n            return this.scrollable;\n        },\n        modalWidth() {\n            return this.widths[this.width];\n        },\n    },\n\n    watch: {\n\n    },\n\n    methods: {\n        toggle() {\n            this.dialog = !this.dialog\n        },\n        close() {\n            this.dialog = false\n        },\n        open() {\n            this.dialog = true\n        },\n        confirm() {\n            this.dialog = false\n        },\n\n        attrs(attrs) {\n            __log(attrs)\n            return attrs;\n        }\n    },\n    beforeDestroy: function () {\n\n    },\n    created() {\n        // setInterval((self) => {\n        //     __log(self.dialog)\n        // }, 1000, this)\n    }\n}\n</script>\n\n<style>\n\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}