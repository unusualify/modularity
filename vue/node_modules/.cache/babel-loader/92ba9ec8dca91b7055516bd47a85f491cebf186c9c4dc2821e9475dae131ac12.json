{"ast":null,"code":"import { renderSlot as _renderSlot, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, createBlock as _createBlock, createElementVNode as _createElementVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-1f9cceb8\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"medialibrary\"\n};\nconst _hoisted_2 = {\n  class: \"medialibrary__frame\"\n};\nconst _hoisted_3 = {\n  class: \"medialibrary__header\",\n  ref: \"form\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"secondarynav secondarynav--desktop py\",\n  slot: \"navigation\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"secondarynav__number\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  slot: \"hidden-filters\"\n}, [/*#__PURE__*/_createCommentVNode(\" <a17-vselect class=\\\"medialibrary__filter-item\\\" ref=\\\"filter\\\" name=\\\"tag\\\" :options=\\\"tags\\\"\\n                              :placeholder=\\\"$trans('media-library.filter-select-label', 'Filter by tag')\\\" :searchable=\\\"true\\\" maxHeight=\\\"175px\\\"/>\\n                  <a17-checkbox class=\\\"medialibrary__filter-item\\\" ref=\\\"unused\\\" name=\\\"unused\\\" :initial-value=\\\"0\\\" :value=\\\"1\\\" :label=\\\"$trans('media-library.unused-filter-label', 'Show unused only')\\\"/> \")], -1 /* HOISTED */));\nconst _hoisted_7 = {\n  class: \"medialibrary__inner\"\n};\nconst _hoisted_8 = {\n  class: \"medialibrary__grid\"\n};\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"aside\", {\n  class: \"medialibrary__sidebar\"\n}, \" Side \", -1 /* HOISTED */));\nconst _hoisted_10 = {\n  key: 0,\n  class: \"medialibrary__footer\"\n};\nconst _hoisted_11 = {\n  class: \"medialibrary__list\",\n  ref: \"list\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_toolbar_title = _resolveComponent(\"v-toolbar-title\");\n  const _component_v_spacer = _resolveComponent(\"v-spacer\");\n  const _component_v_icon = _resolveComponent(\"v-icon\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_toolbar_items = _resolveComponent(\"v-toolbar-items\");\n  const _component_v_toolbar = _resolveComponent(\"v-toolbar\");\n  const _component_v_chip = _resolveComponent(\"v-chip\");\n  const _component_ue_filter = _resolveComponent(\"ue-filter\");\n  const _component_ue_btn = _resolveComponent(\"ue-btn\");\n  const _component_ue_uploader = _resolveComponent(\"ue-uploader\");\n  const _component_ue_modal = _resolveComponent(\"ue-modal\");\n  return _openBlock(), _createBlock(_component_ue_modal, {\n    modelValue: _ctx.show,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.show = $event),\n    id: \"modalMedia\",\n    ref: \"modalMedia\",\n    fullscreen: \"\",\n    \"content-class\": \"bg-primary\"\n  }, {\n    activator: _withCtx(({\n      on,\n      attrs\n    }) => [_renderSlot(_ctx.$slots, \"activator\", {\n      attrs: {\n        ...attrs\n      },\n      on: {\n        ...on\n      }\n    }, undefined, true)]),\n    body: _withCtx(({\n      on,\n      attrs\n    }) => [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_v_toolbar, {\n      dark: \"\",\n      color: \"primary\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_toolbar_title, null, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($options.modalTitle), 1 /* TEXT */)]),\n\n        _: 1 /* STABLE */\n      }), _createVNode(_component_v_spacer), _createVNode(_component_v_toolbar_items, null, {\n        default: _withCtx(() => [_createVNode(_component_v_btn, {\n          icon: \"\",\n          dark: \"\",\n          onClick: _ctx.closeModal\n        }, {\n          default: _withCtx(() => [_createVNode(_component_v_icon, null, {\n            default: _withCtx(() => [_createTextVNode(\"mdi-close\")]),\n            _: 1 /* STABLE */\n          })]),\n\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onClick\"])]),\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_ue_filter, {\n      onSubmit: $options.submitFilter,\n      clearOption: true,\n      onClear: $options.clearFilters\n    }, {\n      default: _withCtx(() => [_ctx.types.length ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.types, navType => {\n        return _openBlock(), _createBlock(_component_v_chip, {\n          key: navType.value,\n          class: \"ma-2\",\n          onClick: _withModifiers($event => $options.updateType(navType.value), [\"prevent\"])\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString(navType.text) + \" \", 1 /* TEXT */), navType.total > 0 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_5, \" (\" + _toDisplayString(navType.total) + \") \", 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]);\n      }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\" <li \\n                    class=\\\"secondarynav__item\\\" \\n                    v-for=\\\"navType in types\\\" \\n                    :key=\\\"navType.value\\\"\\n                    :class=\\\"{ 's--on': type === navType.value, 's--disabled' : type !== navType.value && strict }\\\"\\n                    >\\n                    <a href=\\\"#\\\" @click.prevent=\\\"updateType(navType.value)\\\">\\n                      <span class=\\\"secondarynav__link\\\">{{ navType.text }}</span>\\n                      <span\\n                        v-if=\\\"navType.total > 0\\\" class=\\\"secondarynav__number\\\"\\n                        >\\n                        ({{ navType.total }})\\n                      </span>\\n                    </a>\\n                  </li> \")])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" <div class=\\\"secondarynav secondarynav--mobile secondarynav--dropdown\\\" slot=\\\"navigation\\\">\\n                  <a17-dropdown ref=\\\"secondaryNavDropdown\\\" position=\\\"bottom-left\\\" width=\\\"full\\\" :offset=\\\"0\\\">\\n                    <a17-button class=\\\"secondarynav__button\\\" variant=\\\"dropdown-transparent\\\" size=\\\"small\\\"\\n                                @click=\\\"$refs.secondaryNavDropdown.toggle()\\\" v-if=\\\"selectedType\\\">\\n                      <span class=\\\"secondarynav__link\\\">{{ selectedType.text }}</span><span class=\\\"secondarynav__number\\\">{{ selectedType.total }}</span>\\n                    </a17-button>\\n                    <div slot=\\\"dropdown__content\\\">\\n                      <ul>\\n                        <li v-for=\\\"navType in types\\\" :key=\\\"navType.value\\\" class=\\\"secondarynav__item\\\">\\n                          <a href=\\\"#\\\" v-on:click.prevent=\\\"updateType(navType.value)\\\"><span class=\\\"secondarynav__link\\\">{{ navType.text }}</span><span\\n                            class=\\\"secondarynav__number\\\">{{ navType.total }}</span></a>\\n                        </li>\\n                      </ul>\\n                    </div>\\n                  </a17-dropdown>\\n                </div> \"), _hoisted_6]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onSubmit\", \"onClear\"])], 512 /* NEED_PATCH */), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [_hoisted_9, _ctx.selectedMedias.length && $props.showInsert && _ctx.connector ? (_openBlock(), _createElementBlock(\"footer\", _hoisted_10, [_createCommentVNode(\" <a17-button v-if=\\\"canInsert\\\" variant=\\\"action\\\" @click=\\\"saveAndClose\\\">{{ btnLabel }}</a17-button>\\n                  <a17-button v-else variant=\\\"action\\\" :disabled=\\\"true\\\">{{ btnLabel }}</a17-button> \"), $options.canInsert ? (_openBlock(), _createBlock(_component_ue_btn, {\n      key: 0,\n      onClick: _ctx.saveAndClose\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($options.btnLabel), 1 /* TEXT */)]),\n\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"])) : (_openBlock(), _createBlock(_component_ue_btn, {\n      key: 1,\n      disabled: true\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($options.btnLabel), 1 /* TEXT */)]),\n\n      _: 1 /* STABLE */\n    }))])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_11, [$props.authorized ? (_openBlock(), _createBlock(_component_ue_uploader, {\n      key: 0,\n      ref: \"uploader\",\n      onLoaded: $options.addMedia,\n      onClear: $options.clearSelectedMedias,\n      type: $options.currentTypeObject\n    }, null, 8 /* PROPS */, [\"onLoaded\", \"onClear\", \"type\"])) : _createCommentVNode(\"v-if\", true)], 512 /* NEED_PATCH */)])])])])]),\n\n    _: 3 /* FORWARDED */\n  }, 8 /* PROPS */, [\"modelValue\"]);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}