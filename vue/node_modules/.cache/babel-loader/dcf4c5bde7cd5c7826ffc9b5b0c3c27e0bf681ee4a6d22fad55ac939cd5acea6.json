{"ast":null,"code":"import _objectSpread from \"/var/www/crm_template/packages/oobook/crm-base/vue/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _defineProperty from \"/var/www/crm_template/packages/oobook/crm-base/vue/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport { createCommentVNode as _createCommentVNode, renderSlot as _renderSlot, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeProps as _normalizeProps, guardReactiveProps as _guardReactiveProps, resolveComponent as _resolveComponent, mergeProps as _mergeProps, withCtx as _withCtx, createSlots as _createSlots, createBlock as _createBlock, toHandlers as _toHandlers, toHandlerKey as _toHandlerKey, createVNode as _createVNode, resolveDynamicComponent as _resolveDynamicComponent, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveDirective as _resolveDirective, withDirectives as _withDirectives, vShow as _vShow, createElementVNode as _createElementVNode } from \"vue\";\nvar _hoisted_1 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_v_radio = _resolveComponent(\"v-radio\");\n  var _component_v_radio_group = _resolveComponent(\"v-radio-group\");\n  var _component_v_text_field = _resolveComponent(\"v-text-field\");\n  var _component_v_menu = _resolveComponent(\"v-menu\");\n  var _component_v_custom_form_base = _resolveComponent(\"v-custom-form-base\");\n  var _component_v_card_title = _resolveComponent(\"v-card-title\");\n  var _component_v_card_subtitle = _resolveComponent(\"v-card-subtitle\");\n  var _component_v_form_base = _resolveComponent(\"v-form-base\");\n  var _component_v_treeview = _resolveComponent(\"v-treeview\");\n  var _component_v_toolbar_title = _resolveComponent(\"v-toolbar-title\");\n  var _component_v_toolbar = _resolveComponent(\"v-toolbar\");\n  var _component_v_icon = _resolveComponent(\"v-icon\");\n  var _component_v_list_item_icon = _resolveComponent(\"v-list-item-icon\");\n  var _component_v_list_item_title = _resolveComponent(\"v-list-item-title\");\n  var _component_v_list_item_content = _resolveComponent(\"v-list-item-content\");\n  var _component_v_list_item = _resolveComponent(\"v-list-item\");\n  var _component_v_list_item_group = _resolveComponent(\"v-list-item-group\");\n  var _component_v_list = _resolveComponent(\"v-list\");\n  var _component_v_file_input = _resolveComponent(\"v-file-input\");\n  var _component_v_slider = _resolveComponent(\"v-slider\");\n  var _component_v_img = _resolveComponent(\"v-img\");\n  var _component_v_btn = _resolveComponent(\"v-btn\");\n  var _component_v_btn_toggle = _resolveComponent(\"v-btn-toggle\");\n  var _component_v_col = _resolveComponent(\"v-col\");\n  var _component_v_spacer = _resolveComponent(\"v-spacer\");\n  var _component_v_tooltip = _resolveComponent(\"v-tooltip\");\n  var _component_v_row = _resolveComponent(\"v-row\");\n  var _directive_mask = _resolveDirective(\"mask\");\n  var _directive_intersect = _resolveDirective(\"intersect\");\n  var _directive_touch = _resolveDirective(\"touch\");\n  var _directive_click_outside = _resolveDirective(\"click-outside\");\n  var _directive_resize = _resolveDirective(\"resize\");\n  return _withDirectives((_openBlock(), _createBlock(_component_v_row, _mergeProps({\n    id: $props.id\n  }, $options.getRow), {\n    \"default\": _withCtx(function () {\n      return [_createCommentVNode(\" FORM-BASE TOP SLOT \"), _renderSlot(_ctx.$slots, $options.getFormTopSlot(), {\n        id: $props.id\n      }), _createCommentVNode(\" main loop over components/controls \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.flatCombinedArraySorted, function (obj, index) {\n        return _openBlock(), _createElementBlock(_Fragment, {\n          key: index\n        }, [_createCommentVNode(\" Tooltip Wrapper \"), _createVNode(_component_v_tooltip, _mergeProps({\n          disabled: !obj.schema.tooltip\n        }, $options.getShorthandTooltip(obj.schema.tooltip)), {\n          activator: _withCtx(function (_ref) {\n            var on = _ref.on;\n            return [_withDirectives((_openBlock(), _createBlock(_component_v_col, _mergeProps({\n              key: index\n            }, $options.getGridAttributes(obj), {\n              \"class\": $options.getClassName(obj),\n              draggable: obj.schema.drag,\n              onMouseenter: function onMouseenter($event) {\n                return $options.onEvent($event, obj);\n              },\n              onMouseleave: function onMouseleave($event) {\n                return $options.onEvent($event, obj);\n              }\n            }, _toHandlers(on), {\n              onDragstart: function onDragstart($event) {\n                return $options.dragstart($event, obj);\n              },\n              onDragover: function onDragover($event) {\n                return $options.dragover($event, obj);\n              },\n              onDrop: function onDrop($event) {\n                return $options.drop($event, obj);\n              }\n            }), {\n              \"default\": _withCtx(function () {\n                return [_createCommentVNode(\" slot on top of type  -> <div slot=\\\"slot-bottom-type-[propertyName]\\\"> \"), _renderSlot(_ctx.$slots, $options.getTypeTopSlot(obj), _normalizeProps(_guardReactiveProps({\n                  obj: obj,\n                  index: index,\n                  id: $props.id\n                }))), _createCommentVNode(\" slot on top of key  -> <v-btn slot=\\\"slot-bottom-key-[propertyName]\\\"> \"), _renderSlot(_ctx.$slots, $options.getKeyTopSlot(obj), _normalizeProps(_guardReactiveProps({\n                  obj: obj,\n                  index: index,\n                  id: $props.id\n                }))), _createCommentVNode(\" slot replaces complete item of defined TYPE -> <v-btn slot=\\\"slot-item-type-[propertyName]\\\">\"), _renderSlot(_ctx.$slots, $options.getTypeItemSlot(obj), _normalizeProps(_guardReactiveProps({\n                  obj: obj,\n                  index: index,\n                  id: $props.id\n                })), function () {\n                  return [_createCommentVNode(\" slot replaces complete item of defined KEY -> <div slot=\\\"slot-item-key-[propertyName]\\\">\"), _renderSlot(_ctx.$slots, $options.getKeyItemSlot(obj), _normalizeProps(_guardReactiveProps({\n                    obj: obj,\n                    index: index,\n                    id: $props.id\n                  })), function () {\n                    var _mergeProps3, _mergeProps5;\n                    return [_createCommentVNode(\" <div class=\\\"caption\\\">\\n                      OBJ:{{obj}}\\n                      <br>\\n                      FORM:{{getFormTopSlot()}}\\n                      <br>\\n                      INJECT:{{getKeyInjectSlot(obj)}}\\n                      <br>\\n                      ARRAY:{{getArrayItemSlot(obj)}}\\n                      <br>\\n                      TYPE:{{getTypeItemSlot(obj)}}\\n                      <br>\\n                      KEY:{{getKeyItemSlot(obj)}}\\n                      <br>\\n                      CLASS:{{getClassName(obj)}}\\n                      <br>\\n                      Slots: {{getInjectedScopedSlots(id, obj)}}\\n                      <br>\\n                      VAL:{{setValue(obj)}}\\n                    </div> \"), _createCommentVNode(\" RADIO \"), obj.schema.type === 'radio' ? (_openBlock(), _createBlock(_component_v_radio_group, _mergeProps({\n                      key: 0\n                    }, $options.bindSchema(obj), {\n                      value: $options.setValue(obj),\n                      onChange: function onChange($event) {\n                        return $options.onInput($event, obj);\n                      }\n                    }), {\n                      \"default\": _withCtx(function () {\n                        return [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(obj.schema.options, function (option, idx) {\n                          return _openBlock(), _createBlock(_component_v_radio, _mergeProps({\n                            key: idx\n                          }, $options.bindOptions(option)), _createSlots({\n                            _: 2 /* DYNAMIC */\n                          }, [_renderList($options.getInjectedScopedSlots($props.id, obj), function (s) {\n                            return {\n                              name: s,\n                              fn: _withCtx(function () {\n                                return [_renderSlot(_ctx.$slots, $options.getKeyInjectSlot(obj, s), _normalizeProps(_guardReactiveProps({\n                                  id: $props.id,\n                                  obj: obj,\n                                  index: index,\n                                  idx: idx,\n                                  option: option\n                                })))];\n                              })\n                            };\n                          })]), 1040 /* FULL_PROPS, DYNAMIC_SLOTS */);\n                        }), 128 /* KEYED_FRAGMENT */))];\n                      }),\n\n                      _: 2 /* DYNAMIC */\n                    }, 1040 /* FULL_PROPS, DYNAMIC_SLOTS */, [\"value\", \"onChange\"])) : $options.isDateTimeColorTypeAndExtensionText(obj) ? (_openBlock(), _createElementBlock(_Fragment, {\n                      key: 1\n                    }, [_createCommentVNode(\" END RADIO \"), _createCommentVNode(\" DATE, TIME, COLOR TEXT-MENU \"), _createVNode(_component_v_menu, _normalizeProps(_guardReactiveProps($options.bindSchemaMenu(obj))), {\n                      activator: _withCtx(function (_ref2) {\n                        var on = _ref2.on;\n                        return [_createVNode(_component_v_text_field, _mergeProps(_toHandlers(on), $options.bindSchemaText(obj), {\n                          value: $options.setValue(obj)\n                        }, _defineProperty({}, _toHandlerKey($options.suspendClickAppend(obj)), function ($event) {\n                          return $options.onEvent($event, obj, $data.append);\n                        }), {\n                          \"onClick:appendOuter\": function onClickAppendOuter($event) {\n                            return $options.onEvent($event, obj, $data.appendOuter);\n                          },\n                          \"onClick:prepend\": function onClickPrepend($event) {\n                            return $options.onEvent($event, obj, $data.prepend);\n                          },\n                          \"onClick:prependInner\": function onClickPrependInner($event) {\n                            return $options.onEvent($event, obj, $data.prependInner);\n                          }\n                        }), null, 16 /* FULL_PROPS */, [\"value\", \"onClick:appendOuter\", \"onClick:prepend\", \"onClick:prependInner\"]), _createCommentVNode(\" SLOTS append|prepend|message for picker not avilable, try custom component \")];\n                      }),\n                      \"default\": _withCtx(function () {\n                        return [(_openBlock(), _createBlock(_resolveDynamicComponent($options.mapTypeToComponent(obj.schema.type)), _mergeProps($options.bindSchema(obj), {\n                          type: $options.checkInternType(obj),\n                          value: $options.setValue(obj),\n                          onInput: function onInput($event) {\n                            return $options.onInput($event, obj);\n                          },\n                          \"onClick:hour\": function onClickHour($event) {\n                            return $options.onEvent({\n                              type: 'click'\n                            }, obj, $data.hour);\n                          },\n                          \"onClick:minute\": function onClickMinute($event) {\n                            return $options.onEvent({\n                              type: 'click'\n                            }, obj, $data.minute);\n                          },\n                          \"onClick:second\": function onClickSecond($event) {\n                            return $options.onEvent({\n                              type: 'click'\n                            }, obj, $data.second);\n                          }\n                        }), null, 16 /* FULL_PROPS */, [\"type\", \"value\", \"onInput\", \"onClick:hour\", \"onClick:minute\", \"onClick:second\"]))];\n                      }),\n                      _: 2 /* DYNAMIC */\n                    }, 1040 /* FULL_PROPS, DYNAMIC_SLOTS */)], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)) : obj.schema.type === 'array' ? (_openBlock(), _createElementBlock(_Fragment, {\n                      key: 2\n                    }, [_createCommentVNode(\" END DATE, TIME, COLOR TEXT-MENU \"), _createCommentVNode(\" ARRAY \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.setValue(obj), function (item, idx) {\n                      return _openBlock(), _createElementBlock(\"div\", _mergeProps({\n                        key: $options.getKeyForArray($props.id, obj, item, idx)\n                      }, $options.bindSchema(obj), {\n                        value: $options.setValue(obj)\n                      }), [_renderSlot(_ctx.$slots, $options.getArrayTopSlot(obj), _normalizeProps(_guardReactiveProps({\n                        obj: obj,\n                        id: $props.id,\n                        index: index,\n                        idx: idx,\n                        item: item\n                      }))), _renderSlot(_ctx.$slots, $options.getArrayItemSlot(obj), _normalizeProps(_guardReactiveProps({\n                        obj: obj,\n                        id: $props.id,\n                        index: index,\n                        idx: idx,\n                        item: item\n                      })), function () {\n                        return [_createVNode(_component_v_custom_form_base, _mergeProps({\n                          id: \"\".concat($props.id, \"-\").concat(obj.key, \"-\").concat(idx),\n                          model: item,\n                          schema: obj.schema.schema,\n                          row: $options.getRowGroupOrArray(obj),\n                          col: $options.getColGroupOrArray(obj),\n                          \"class\": \"\".concat($props.id, \"-\").concat(obj.key)\n                        }, _toHandlers(_ctx.$listeners)), _createSlots({\n                          _: 2 /* DYNAMIC */\n                        }, [_renderList(_ctx.$scopedSlots, function (_, name) {\n                          return {\n                            name: name,\n                            fn: _withCtx(function (slotData) {\n                              return [_renderSlot(_ctx.$slots, name, _normalizeProps(_guardReactiveProps(_objectSpread({\n                                id: $props.id,\n                                obj: obj,\n                                index: index,\n                                idx: idx,\n                                item: item\n                              }, slotData))))];\n                            })\n                          };\n                        })]), 1040 /* FULL_PROPS, DYNAMIC_SLOTS */, [\"id\", \"model\", \"schema\", \"row\", \"col\", \"class\"])];\n                      }), _renderSlot(_ctx.$slots, $options.getArrayBottomSlot(obj), _normalizeProps(_guardReactiveProps({\n                        obj: obj,\n                        id: $props.id,\n                        index: index,\n                        idx: idx,\n                        item: item\n                      })))], 16 /* FULL_PROPS */, _hoisted_1);\n                    }), 128 /* KEYED_FRAGMENT */))], 64 /* STABLE_FRAGMENT */)) : /(wrap|group)/.test(obj.schema.type) ? (_openBlock(), _createElementBlock(_Fragment, {\n                      key: 3\n                    }, [_createCommentVNode(\" END ARRAY \"), _createCommentVNode(\" GROUP | WRAP\"), (_openBlock(), _createBlock(_resolveDynamicComponent($options.checkInternGroupType(obj)), _mergeProps($options.bindSchema(obj), {\n                      onClick: function onClick($event) {\n                        return $options.onEvent($event, obj);\n                      }\n                    }), {\n                      \"default\": _withCtx(function () {\n                        return [obj.schema.title ? (_openBlock(), _createBlock(_component_v_card_title, {\n                          key: 0\n                        }, {\n                          \"default\": _withCtx(function () {\n                            return [_createTextVNode(_toDisplayString(obj.schema.title), 1 /* TEXT */)];\n                          }),\n\n                          _: 2 /* DYNAMIC */\n                        }, 1024 /* DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true), obj.schema.subtitle ? (_openBlock(), _createBlock(_component_v_card_subtitle, {\n                          key: 1\n                        }, {\n                          \"default\": _withCtx(function () {\n                            return [_createTextVNode(_toDisplayString(obj.schema.subtitle), 1 /* TEXT */)];\n                          }),\n\n                          _: 2 /* DYNAMIC */\n                        }, 1024 /* DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true), _createVNode(_component_v_form_base, _mergeProps({\n                          id: \"\".concat($props.id, \"-\").concat(obj.key),\n                          model: $options.setValue(obj),\n                          schema: obj.schema.schema,\n                          row: $options.getRowGroupOrArray(obj),\n                          col: $options.getColGroupOrArray(obj),\n                          \"class\": \"\".concat($props.id, \"-\").concat(obj.key)\n                        }, _toHandlers(_ctx.$listeners)), _createSlots({\n                          _: 2 /* DYNAMIC */\n                        }, [_renderList(_ctx.$scopedSlots, function (_, name) {\n                          return {\n                            name: name,\n                            fn: _withCtx(function (slotData) {\n                              return [_renderSlot(_ctx.$slots, name, _normalizeProps(_guardReactiveProps(_objectSpread({\n                                id: $props.id,\n                                obj: obj,\n                                index: index\n                              }, slotData))))];\n                            })\n                          };\n                        })]), 1040 /* FULL_PROPS, DYNAMIC_SLOTS */, [\"id\", \"model\", \"schema\", \"row\", \"col\", \"class\"])];\n                      }),\n                      _: 2 /* DYNAMIC */\n                    }, 1040 /* FULL_PROPS, DYNAMIC_SLOTS */, [\"onClick\"]))], 64 /* STABLE_FRAGMENT */)) : obj.schema.type === $data.treeview ? (_openBlock(), _createElementBlock(_Fragment, {\n                      key: 4\n                    }, [_createCommentVNode(\" END GROUP | WRAP \"), _createCommentVNode(\" TREEVIEW \"), _createVNode(_component_v_treeview, _mergeProps({\n                      open: obj.schema.open\n                    }, $options.bindSchema(obj), {\n                      \"onUpdate:open\": function onUpdateOpen($event) {\n                        return $options.onEvent({\n                          type: 'click'\n                        }, obj, 'open');\n                      },\n                      \"onUpdate:active\": function onUpdateActive($event) {\n                        return $options.onEvent({\n                          type: 'click'\n                        }, obj, 'selected');\n                      },\n                      items: obj.schema.items,\n                      value: $options.setValue(obj),\n                      onInput: function onInput($event) {\n                        return $options.onInput($event, obj);\n                      }\n                    }), _createSlots({\n                      _: 2 /* DYNAMIC */\n                    }, [_renderList($options.getInjectedScopedSlots($props.id, obj), function (s) {\n                      return {\n                        name: s,\n                        fn: _withCtx(function (slotData) {\n                          return [_renderSlot(_ctx.$slots, $options.getKeyInjectSlot(obj, s), _normalizeProps(_guardReactiveProps(_objectSpread({\n                            id: $props.id,\n                            obj: obj,\n                            index: index\n                          }, slotData))))];\n                        })\n                      };\n                    })]), 1040 /* FULL_PROPS, DYNAMIC_SLOTS */, [\"open\", \"onUpdate:open\", \"onUpdate:active\", \"items\", \"value\", \"onInput\"])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)) : obj.schema.type === $data.list ? (_openBlock(), _createElementBlock(_Fragment, {\n                      key: 5\n                    }, [_createCommentVNode(\" END TREEVIEW \"), _createCommentVNode(\" LIST \"), _createVNode(_component_v_list, null, {\n                      \"default\": _withCtx(function () {\n                        return [_renderSlot(_ctx.$slots, $options.getKeyInjectSlot(obj, 'label'), _normalizeProps(_guardReactiveProps({\n                          id: $props.id,\n                          obj: obj,\n                          index: index\n                        })), function () {\n                          return [obj.schema.label ? (_openBlock(), _createBlock(_component_v_toolbar, _mergeProps({\n                            key: 0\n                          }, $options.bindSchema(obj), {\n                            dark: \"\"\n                          }), {\n                            \"default\": _withCtx(function () {\n                              return [_createVNode(_component_v_toolbar_title, null, {\n                                \"default\": _withCtx(function () {\n                                  return [_createTextVNode(_toDisplayString(obj.schema.label), 1 /* TEXT */)];\n                                }),\n\n                                _: 2 /* DYNAMIC */\n                              }, 1024 /* DYNAMIC_SLOTS */)];\n                            }),\n\n                            _: 2 /* DYNAMIC */\n                          }, 1040 /* FULL_PROPS, DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true)];\n                        }), _createVNode(_component_v_list_item_group, _mergeProps({\n                          modelValue: obj.schema.model,\n                          \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n                            return obj.schema.model = $event;\n                          }\n                        }, $options.bindSchema(obj), {\n                          light: \"\"\n                        }), {\n                          \"default\": _withCtx(function () {\n                            return [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.setValue(obj), function (item, idx) {\n                              return _openBlock(), _createBlock(_component_v_list_item, {\n                                key: idx,\n                                onClick: function onClick($event) {\n                                  return $options.onEvent($event, obj, $data.list);\n                                }\n                              }, {\n                                \"default\": _withCtx(function () {\n                                  return [_renderSlot(_ctx.$slots, $options.getArrayItemSlot(obj), _normalizeProps(_guardReactiveProps({\n                                    obj: obj,\n                                    id: $props.id,\n                                    index: index,\n                                    idx: idx,\n                                    item: item\n                                  })), function () {\n                                    return [_createVNode(_component_v_list_item_icon, null, {\n                                      \"default\": _withCtx(function () {\n                                        return [_createVNode(_component_v_icon, {\n                                          textContent: _toDisplayString(obj.schema.icon)\n                                        }, null, 8 /* PROPS */, [\"textContent\"])];\n                                      }),\n                                      _: 2 /* DYNAMIC */\n                                    }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_v_list_item_content, null, {\n                                      \"default\": _withCtx(function () {\n                                        return [_createVNode(_component_v_list_item_title, {\n                                          textContent: _toDisplayString(obj.schema.item ? item[obj.schema.item] : item)\n                                        }, null, 8 /* PROPS */, [\"textContent\"])];\n                                      }),\n                                      _: 2 /* DYNAMIC */\n                                    }, 1024 /* DYNAMIC_SLOTS */)];\n                                  })];\n                                }),\n\n                                _: 2 /* DYNAMIC */\n                              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]);\n                            }), 128 /* KEYED_FRAGMENT */))];\n                          }),\n\n                          _: 2 /* DYNAMIC */\n                        }, 1040 /* FULL_PROPS, DYNAMIC_SLOTS */, [\"modelValue\", \"onUpdate:modelValue\"])];\n                      }),\n                      _: 2 /* DYNAMIC */\n                    }, 1024 /* DYNAMIC_SLOTS */)], 64 /* STABLE_FRAGMENT */)) : /(switch|checkbox)/.test(obj.schema.type) ? (_openBlock(), _createElementBlock(_Fragment, {\n                      key: 6\n                    }, [_createCommentVNode(\" END LIST \"), _createCommentVNode(\" CHECKBOX | SWITCH \"), (_openBlock(), _createBlock(_resolveDynamicComponent($options.mapTypeToComponent(obj.schema.type)), _mergeProps({\n                      \"input-value\": $options.setValue(obj)\n                    }, $options.bindSchema(obj), {\n                      onChange: function onChange($event) {\n                        return $options.onInput($event, obj);\n                      }\n                    }), _createSlots({\n                      _: 2 /* DYNAMIC */\n                    }, [_renderList($options.getInjectedScopedSlots($props.id, obj), function (s) {\n                      return {\n                        name: s,\n                        fn: _withCtx(function () {\n                          return [_renderSlot(_ctx.$slots, $options.getKeyInjectSlot(obj, s), _normalizeProps(_guardReactiveProps({\n                            id: $props.id,\n                            obj: obj,\n                            index: index\n                          })))];\n                        })\n                      };\n                    })]), 1040 /* FULL_PROPS, DYNAMIC_SLOTS */, [\"input-value\", \"onChange\"]))], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)) : obj.schema.type === 'file' ? (_openBlock(), _createElementBlock(_Fragment, {\n                      key: 7\n                    }, [_createCommentVNode(\" END CHECKBOX | SWITCH \"), _createCommentVNode(\" FILE \"), _createVNode(_component_v_file_input, _mergeProps($options.bindSchema(obj), {\n                      value: $options.setValue(obj),\n                      onFocus: function onFocus($event) {\n                        return $options.onEvent($event, obj);\n                      },\n                      onBlur: function onBlur($event) {\n                        return $options.onEvent($event, obj);\n                      },\n                      onChange: function onChange($event) {\n                        return $options.onInput($event, obj);\n                      }\n                    }), _createSlots({\n                      _: 2 /* DYNAMIC */\n                    }, [_renderList($options.getInjectedScopedSlots($props.id, obj), function (s) {\n                      return {\n                        name: s,\n                        fn: _withCtx(function (scopeData) {\n                          return [_renderSlot(_ctx.$slots, $options.getKeyInjectSlot(obj, s), _normalizeProps(_guardReactiveProps(_objectSpread({\n                            id: $props.id,\n                            obj: obj,\n                            index: index\n                          }, scopeData))))];\n                        })\n                      };\n                    })]), 1040 /* FULL_PROPS, DYNAMIC_SLOTS */, [\"value\", \"onFocus\", \"onBlur\", \"onChange\"])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)) : obj.schema.type === 'icon' ? (_openBlock(), _createElementBlock(_Fragment, {\n                      key: 8\n                    }, [_createCommentVNode(\" END FILE \"), _createCommentVNode(\" ICON \"), _createVNode(_component_v_icon, _mergeProps($options.bindSchema(obj), {\n                      textContent: _toDisplayString($options.getIconValue(obj)),\n                      onClick: function onClick($event) {\n                        return $options.onEvent($event, obj);\n                      }\n                    }), null, 16 /* FULL_PROPS */, [\"textContent\", \"onClick\"])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)) : obj.schema.type === 'slider' ? (_openBlock(), _createElementBlock(_Fragment, {\n                      key: 9\n                    }, [_createCommentVNode(\" END ICON \"), _createCommentVNode(\" SLIDER \"), _createVNode(_component_v_slider, _mergeProps($options.bindSchema(obj), {\n                      onInput: function onInput($event) {\n                        return $options.onInput($event, obj);\n                      }\n                    }), _createSlots({\n                      _: 2 /* DYNAMIC */\n                    }, [_renderList($options.getInjectedScopedSlots($props.id, obj), function (s) {\n                      return {\n                        name: s,\n                        fn: _withCtx(function () {\n                          return [_renderSlot(_ctx.$slots, $options.getKeyInjectSlot(obj, s), _normalizeProps(_guardReactiveProps({\n                            id: $props.id,\n                            obj: obj,\n                            index: index\n                          })))];\n                        })\n                      };\n                    })]), 1040 /* FULL_PROPS, DYNAMIC_SLOTS */, [\"onInput\"])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)) : obj.schema.type === 'img' ? (_openBlock(), _createElementBlock(_Fragment, {\n                      key: 10\n                    }, [_createCommentVNode(\" END SLIDER \"), _createCommentVNode(\" IMG \"), _createVNode(_component_v_img, _mergeProps({\n                      src: $options.getImageSource(obj)\n                    }, $options.bindSchema(obj), {\n                      onClick: function onClick($event) {\n                        return $options.onEvent($event, obj);\n                      }\n                    }), _createSlots({\n                      _: 2 /* DYNAMIC */\n                    }, [_renderList($options.getInjectedScopedSlots($props.id, obj), function (s) {\n                      return {\n                        name: s,\n                        fn: _withCtx(function () {\n                          return [_renderSlot(_ctx.$slots, $options.getKeyInjectSlot(obj, s), _normalizeProps(_guardReactiveProps({\n                            id: $props.id,\n                            obj: obj,\n                            index: index\n                          })))];\n                        })\n                      };\n                    })]), 1040 /* FULL_PROPS, DYNAMIC_SLOTS */, [\"src\", \"onClick\"])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)) : obj.schema.type === 'btn-toggle' ? (_openBlock(), _createElementBlock(_Fragment, {\n                      key: 11\n                    }, [_createCommentVNode(\" END IMG \"), _createCommentVNode(\" BTN-TOGGLE \"), _createVNode(_component_v_btn_toggle, _mergeProps($options.bindSchema(obj), {\n                      value: $options.setValue(obj),\n                      onChange: function onChange($event) {\n                        return $options.onInput($event, obj);\n                      }\n                    }), {\n                      \"default\": _withCtx(function () {\n                        return [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(obj.schema.options, function (option, idx) {\n                          return _openBlock(), _createBlock(_component_v_btn, _mergeProps({\n                            key: idx\n                          }, $options.bindOptions(option), {\n                            icon: option.icon ? true : false\n                          }), {\n                            \"default\": _withCtx(function () {\n                              return [_createVNode(_component_v_icon, {\n                                dark: obj.schema.dark\n                              }, {\n                                \"default\": _withCtx(function () {\n                                  return [_createTextVNode(_toDisplayString($options.bindOptions(option).icon), 1 /* TEXT */)];\n                                }),\n\n                                _: 2 /* DYNAMIC */\n                              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"dark\"]), _createTextVNode(\" \" + _toDisplayString($options.bindOptions(option).label), 1 /* TEXT */)];\n                            }),\n\n                            _: 2 /* DYNAMIC */\n                          }, 1040 /* FULL_PROPS, DYNAMIC_SLOTS */, [\"icon\"]);\n                        }), 128 /* KEYED_FRAGMENT */))];\n                      }),\n\n                      _: 2 /* DYNAMIC */\n                    }, 1040 /* FULL_PROPS, DYNAMIC_SLOTS */, [\"value\", \"onChange\"])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)) : obj.schema.type === 'btn' ? (_openBlock(), _createElementBlock(_Fragment, {\n                      key: 12\n                    }, [_createCommentVNode(\" END BTN-TOGGLE \"), _createCommentVNode(\" BTN \"), _createVNode(_component_v_btn, _mergeProps($options.bindSchema(obj), {\n                      onClick: function onClick($event) {\n                        return $options.onEvent($event, obj, $data.button);\n                      }\n                    }), {\n                      \"default\": _withCtx(function () {\n                        return [obj.schema.iconLeft ? (_openBlock(), _createBlock(_component_v_icon, {\n                          key: 0,\n                          left: \"\",\n                          dark: obj.schema.dark\n                        }, {\n                          \"default\": _withCtx(function () {\n                            return [_createTextVNode(_toDisplayString(obj.schema.iconLeft), 1 /* TEXT */)];\n                          }),\n\n                          _: 2 /* DYNAMIC */\n                        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"dark\"])) : _createCommentVNode(\"v-if\", true), _createTextVNode(\" \" + _toDisplayString($options.setValue(obj)) + \" \", 1 /* TEXT */), obj.schema.iconCenter ? (_openBlock(), _createBlock(_component_v_icon, {\n                          key: 1,\n                          dark: obj.schema.dark\n                        }, {\n                          \"default\": _withCtx(function () {\n                            return [_createTextVNode(_toDisplayString(obj.schema.iconCenter), 1 /* TEXT */)];\n                          }),\n\n                          _: 2 /* DYNAMIC */\n                        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"dark\"])) : _createCommentVNode(\"v-if\", true), _createTextVNode(\" \" + _toDisplayString(obj.schema.label) + \" \", 1 /* TEXT */), obj.schema.iconRight ? (_openBlock(), _createBlock(_component_v_icon, {\n                          key: 2,\n                          right: \"\",\n                          dark: obj.schema.dark\n                        }, {\n                          \"default\": _withCtx(function () {\n                            return [_createTextVNode(_toDisplayString(obj.schema.iconRight), 1 /* TEXT */)];\n                          }),\n\n                          _: 2 /* DYNAMIC */\n                        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"dark\"])) : _createCommentVNode(\"v-if\", true)];\n                      }),\n                      _: 2 /* DYNAMIC */\n                    }, 1040 /* FULL_PROPS, DYNAMIC_SLOTS */, [\"onClick\"])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)) : obj.schema.mask ? (_openBlock(), _createElementBlock(_Fragment, {\n                      key: 13\n                    }, [_createCommentVNode(\" END BTN \"), _createCommentVNode(\" MASK  \"), _withDirectives((_openBlock(), _createBlock(_resolveDynamicComponent($options.mapTypeToComponent(obj.schema.type)), _mergeProps($options.bindSchema(obj), (_mergeProps3 = {\n                      type: $options.checkExtensionType(obj),\n                      value: $options.setValue(obj),\n                      obj: obj\n                    }, _defineProperty(_mergeProps3, $options.searchInputSync(obj) || \"\", obj.schema.searchInput), _defineProperty(_mergeProps3, \"onFocus\", function onFocus($event) {\n                      return $options.onEvent($event, obj);\n                    }), _defineProperty(_mergeProps3, \"onBlur\", function onBlur($event) {\n                      return $options.onEvent($event, obj);\n                    }), _mergeProps3), _defineProperty({}, _toHandlerKey($options.suspendClickAppend(obj)), function ($event) {\n                      return $options.onEvent($event, obj, $data.append);\n                    }), {\n                      \"onClick:appendOuter\": function onClickAppendOuter($event) {\n                        return $options.onEvent($event, obj, $data.appendOuter);\n                      },\n                      \"onClick:prepend\": function onClickPrepend($event) {\n                        return $options.onEvent($event, obj, $data.prepend);\n                      },\n                      \"onClick:prependInner\": function onClickPrependInner($event) {\n                        return $options.onEvent($event, obj, $data.prependInner);\n                      },\n                      \"onClick:clear\": function onClickClear($event) {\n                        return $options.onEvent($event, obj, $data.clear);\n                      },\n                      \"onClick:hour\": function onClickHour($event) {\n                        return $options.onEvent({\n                          type: 'click'\n                        }, obj, $data.hour);\n                      },\n                      \"onClick:minute\": function onClickMinute($event) {\n                        return $options.onEvent({\n                          type: 'click'\n                        }, obj, $data.minute);\n                      },\n                      \"onClick:second\": function onClickSecond($event) {\n                        return $options.onEvent({\n                          type: 'click'\n                        }, obj, $data.second);\n                      },\n                      onInput: function onInput($event) {\n                        return $options.onInput($event, obj);\n                      }\n                    }), _createSlots({\n                      _: 2 /* DYNAMIC */\n                    }, [_renderList($options.getInjectedScopedSlots($props.id, obj), function (s) {\n                      return {\n                        name: s,\n                        fn: _withCtx(function () {\n                          return [_renderSlot(_ctx.$slots, $options.getKeyInjectSlot(obj, s), _normalizeProps(_guardReactiveProps({\n                            id: $props.id,\n                            obj: obj,\n                            index: index\n                          })))];\n                        })\n                      };\n                    })]), 1040 /* FULL_PROPS, DYNAMIC_SLOTS */, [\"type\", \"value\", \"obj\", \"onFocus\", \"onBlur\", \"onClick:appendOuter\", \"onClick:prepend\", \"onClick:prependInner\", \"onClick:clear\", \"onClick:hour\", \"onClick:minute\", \"onClick:second\", \"onInput\"])), [[_directive_mask, obj.schema.mask]])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)) : (_openBlock(), _createElementBlock(_Fragment, {\n                      key: 14\n                    }, [_createCommentVNode(\" END MASK \"), _createCommentVNode(\" DEFAULT all other Types -> typeToComponent \"), (_openBlock(), _createBlock(_resolveDynamicComponent($options.mapTypeToComponent(obj.schema.type)), _mergeProps($options.bindSchema(obj), (_mergeProps5 = {\n                      type: $options.checkExtensionType(obj),\n                      value: $options.setValue(obj),\n                      obj: obj\n                    }, _defineProperty(_mergeProps5, $options.searchInputSync(obj) || \"\", obj.schema.searchInput), _defineProperty(_mergeProps5, \"onFocus\", function onFocus($event) {\n                      return $options.onEvent($event, obj);\n                    }), _defineProperty(_mergeProps5, \"onBlur\", function onBlur($event) {\n                      return $options.onEvent($event, obj);\n                    }), _mergeProps5), _defineProperty({}, _toHandlerKey($options.suspendClickAppend(obj)), function ($event) {\n                      return $options.onEvent($event, obj, $data.append);\n                    }), {\n                      \"onClick:appendOuter\": function onClickAppendOuter($event) {\n                        return $options.onEvent($event, obj, $data.appendOuter);\n                      },\n                      \"onClick:prepend\": function onClickPrepend($event) {\n                        return $options.onEvent($event, obj, $data.prepend);\n                      },\n                      \"onClick:prependInner\": function onClickPrependInner($event) {\n                        return $options.onEvent($event, obj, $data.prependInner);\n                      },\n                      \"onClick:clear\": function onClickClear($event) {\n                        return $options.onEvent($event, obj, $data.clear);\n                      },\n                      \"onClick:hour\": function onClickHour($event) {\n                        return $options.onEvent({\n                          type: 'click'\n                        }, obj, $data.hour);\n                      },\n                      \"onClick:minute\": function onClickMinute($event) {\n                        return $options.onEvent({\n                          type: 'click'\n                        }, obj, $data.minute);\n                      },\n                      \"onClick:second\": function onClickSecond($event) {\n                        return $options.onEvent({\n                          type: 'click'\n                        }, obj, $data.second);\n                      },\n                      onInput: function onInput($event) {\n                        return $options.onInput($event, obj);\n                      }\n                    }), _createSlots({\n                      _: 2 /* DYNAMIC */\n                    }, [_renderList($options.getInjectedScopedSlots($props.id, obj), function (s) {\n                      return {\n                        name: s,\n                        fn: _withCtx(function () {\n                          return [_renderSlot(_ctx.$slots, $options.getKeyInjectSlot(obj, s), _normalizeProps(_guardReactiveProps({\n                            id: $props.id,\n                            obj: obj,\n                            index: index\n                          })))];\n                        })\n                      };\n                    })]), 1040 /* FULL_PROPS, DYNAMIC_SLOTS */, [\"type\", \"value\", \"obj\", \"onFocus\", \"onBlur\", \"onClick:appendOuter\", \"onClick:prepend\", \"onClick:prependInner\", \"onClick:clear\", \"onClick:hour\", \"onClick:minute\", \"onClick:second\", \"onInput\"]))], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)), _createCommentVNode(\" END DEFAULT \")];\n                  })];\n                }), _createCommentVNode(\" slot at bottom of item  -> <div slot=\\\"slot-bottom-key-[deep-nested-key-name]\\\"> \"), _renderSlot(_ctx.$slots, $options.getTypeBottomSlot(obj), _normalizeProps(_guardReactiveProps({\n                  obj: obj,\n                  index: index,\n                  id: $props.id\n                }))), _renderSlot(_ctx.$slots, $options.getKeyBottomSlot(obj), _normalizeProps(_guardReactiveProps({\n                  obj: obj,\n                  index: index,\n                  id: $props.id\n                })))];\n              }),\n              _: 2 /* DYNAMIC */\n            }, 1040 /* FULL_PROPS, DYNAMIC_SLOTS */, [\"class\", \"draggable\", \"onMouseenter\", \"onMouseleave\", \"onDragstart\", \"onDragover\", \"onDrop\"])), [[_vShow, !obj.schema.hidden], [_directive_intersect, function (entries, observer) {\n              return $options.onIntersect(entries, observer, obj);\n            }], [_directive_touch, {\n              left: function left() {\n                return $options.onSwipe('left', obj);\n              },\n              right: function right() {\n                return $options.onSwipe('right', obj);\n              },\n              up: function up() {\n                return $options.onSwipe('up', obj);\n              },\n              down: function down() {\n                return $options.onSwipe('down', obj);\n              }\n            }], [_directive_click_outside, function (event) {\n              return $options.onClickOutside(event, obj);\n            }]]), _createCommentVNode(\" schema.spacer:true - push next item to the right and fill space between items \"), obj.schema.spacer ? (_openBlock(), _createBlock(_component_v_spacer, {\n              key: \"s-\".concat(index)\n            })) : _createCommentVNode(\"v-if\", true)];\n          }),\n          \"default\": _withCtx(function () {\n            return [_renderSlot(_ctx.$slots, $options.getTooltipSlot(obj), _normalizeProps(_guardReactiveProps({\n              obj: obj,\n              index: index,\n              id: $props.id\n            })), function () {\n              return [_createElementVNode(\"span\", null, _toDisplayString($options.getShorthandTooltipLabel(obj.schema.tooltip)), 1 /* TEXT */)];\n            }), _renderSlot(_ctx.$slots, $options.getKeyTooltipSlot(obj), _normalizeProps(_guardReactiveProps({\n              obj: obj,\n              index: index,\n              id: $props.id\n            })))];\n          }),\n          _: 2 /* DYNAMIC */\n        }, 1040 /* FULL_PROPS, DYNAMIC_SLOTS */, [\"disabled\"])], 64 /* STABLE_FRAGMENT */);\n      }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\" FORM-BASE BOTTOM SLOT \"), _renderSlot(_ctx.$slots, $options.getFormBottomSlot(), {\n        id: $props.id\n      })];\n    }),\n    _: 3 /* FORWARDED */\n  }, 16 /* FULL_PROPS */, [\"id\"])), [[_directive_resize, $options.onResize, void 0, {\n    quiet: true\n  }]]);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}