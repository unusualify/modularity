{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.push.js\";\nexport var singleOpenStrategy = {\n  open: function open(_ref) {\n    var id = _ref.id,\n      value = _ref.value,\n      opened = _ref.opened,\n      parents = _ref.parents;\n    if (value) {\n      var newOpened = new Set();\n      newOpened.add(id);\n      var parent = parents.get(id);\n      while (parent != null) {\n        newOpened.add(parent);\n        parent = parents.get(parent);\n      }\n      return newOpened;\n    } else {\n      opened[\"delete\"](id);\n      return opened;\n    }\n  },\n  select: function select() {\n    return null;\n  }\n};\nexport var multipleOpenStrategy = {\n  open: function open(_ref2) {\n    var id = _ref2.id,\n      value = _ref2.value,\n      opened = _ref2.opened,\n      parents = _ref2.parents;\n    if (value) {\n      var parent = parents.get(id);\n      opened.add(id);\n      while (parent != null && parent !== id) {\n        opened.add(parent);\n        parent = parents.get(parent);\n      }\n      return opened;\n    } else {\n      opened[\"delete\"](id);\n    }\n    return opened;\n  },\n  select: function select() {\n    return null;\n  }\n};\nexport var listOpenStrategy = {\n  open: multipleOpenStrategy.open,\n  select: function select(_ref3) {\n    var id = _ref3.id,\n      value = _ref3.value,\n      opened = _ref3.opened,\n      parents = _ref3.parents;\n    if (!value) return opened;\n    var path = [];\n    var parent = parents.get(id);\n    while (parent != null) {\n      path.push(parent);\n      parent = parents.get(parent);\n    }\n    return new Set(path);\n  }\n};","map":{"version":3,"names":["singleOpenStrategy","open","_ref","id","value","opened","parents","newOpened","Set","add","parent","get","select","multipleOpenStrategy","_ref2","listOpenStrategy","_ref3","path","push"],"sources":["../../../src/composables/nested/openStrategies.ts"],"sourcesContent":["export type OpenStrategyFn = (data: {\n  id: unknown\n  value: boolean\n  opened: Set<unknown>\n  children: Map<unknown, unknown[]>\n  parents: Map<unknown, unknown>\n  event?: Event\n}) => Set<unknown>\n\nexport type OpenSelectStrategyFn = (data: {\n  id: unknown\n  value: boolean\n  opened: Set<unknown>\n  selected: Map<unknown, 'on' | 'off' | 'indeterminate'>\n  children: Map<unknown, unknown[]>\n  parents: Map<unknown, unknown>\n  event?: Event\n}) => Set<unknown> | null\n\nexport type OpenStrategy = {\n  open: OpenStrategyFn\n  select: OpenSelectStrategyFn\n}\n\nexport const singleOpenStrategy: OpenStrategy = {\n  open: ({ id, value, opened, parents }) => {\n    if (value) {\n      const newOpened = new Set<unknown>()\n      newOpened.add(id)\n\n      let parent = parents.get(id)\n\n      while (parent != null) {\n        newOpened.add(parent)\n        parent = parents.get(parent)\n      }\n\n      return newOpened\n    } else {\n      opened.delete(id)\n      return opened\n    }\n  },\n  select: () => null,\n}\n\nexport const multipleOpenStrategy: OpenStrategy = {\n  open: ({ id, value, opened, parents }) => {\n    if (value) {\n      let parent = parents.get(id)\n      opened.add(id)\n\n      while (parent != null && parent !== id) {\n        opened.add(parent)\n        parent = parents.get(parent)\n      }\n\n      return opened\n    } else {\n      opened.delete(id)\n    }\n    return opened\n  },\n  select: () => null,\n}\n\nexport const listOpenStrategy: OpenStrategy = {\n  open: multipleOpenStrategy.open,\n  select: ({ id, value, opened, parents }) => {\n    if (!value) return opened\n\n    const path: unknown[] = []\n\n    let parent = parents.get(id)\n\n    while (parent != null) {\n      path.push(parent)\n      parent = parents.get(parent)\n    }\n\n    return new Set(path)\n  },\n}\n"],"mappings":";;;;;AAwBA,OAAO,IAAMA,kBAAgC,GAAG;EAC9CC,IAAI,EAAE,SAAAA,KAAAC,IAAA,EAAoC;IAAA,IAAjCC,EAAE,GAA0BD,IAAA,CAA5BC,EAAE;MAAEC,KAAK,GAAmBF,IAAA,CAAxBE,KAAK;MAAEC,MAAM,GAAWH,IAAA,CAAjBG,MAAM;MAAEC,OAAA,GAASJ,IAAA,CAATI,OAAA;IAC1B,IAAIF,KAAK,EAAE;MACT,IAAMG,SAAS,GAAG,IAAIC,GAAG,EAAW;MACpCD,SAAS,CAACE,GAAG,CAACN,EAAE,CAAC;MAEjB,IAAIO,MAAM,GAAGJ,OAAO,CAACK,GAAG,CAACR,EAAE,CAAC;MAE5B,OAAOO,MAAM,IAAI,IAAI,EAAE;QACrBH,SAAS,CAACE,GAAG,CAACC,MAAM,CAAC;QACrBA,MAAM,GAAGJ,OAAO,CAACK,GAAG,CAACD,MAAM,CAAC;MAC9B;MAEA,OAAOH,SAAS;IAClB,CAAC,MAAM;MACLF,MAAM,UAAO,CAACF,EAAE,CAAC;MACjB,OAAOE,MAAM;IACf;EACF,CAAC;EACDO,MAAM,EAAE,SAAAA,OAAA;IAAA,OAAM;EAAA;AAChB,CAAC;AAED,OAAO,IAAMC,oBAAkC,GAAG;EAChDZ,IAAI,EAAE,SAAAA,KAAAa,KAAA,EAAoC;IAAA,IAAjCX,EAAE,GAA0BW,KAAA,CAA5BX,EAAE;MAAEC,KAAK,GAAmBU,KAAA,CAAxBV,KAAK;MAAEC,MAAM,GAAWS,KAAA,CAAjBT,MAAM;MAAEC,OAAA,GAASQ,KAAA,CAATR,OAAA;IAC1B,IAAIF,KAAK,EAAE;MACT,IAAIM,MAAM,GAAGJ,OAAO,CAACK,GAAG,CAACR,EAAE,CAAC;MAC5BE,MAAM,CAACI,GAAG,CAACN,EAAE,CAAC;MAEd,OAAOO,MAAM,IAAI,IAAI,IAAIA,MAAM,KAAKP,EAAE,EAAE;QACtCE,MAAM,CAACI,GAAG,CAACC,MAAM,CAAC;QAClBA,MAAM,GAAGJ,OAAO,CAACK,GAAG,CAACD,MAAM,CAAC;MAC9B;MAEA,OAAOL,MAAM;IACf,CAAC,MAAM;MACLA,MAAM,UAAO,CAACF,EAAE,CAAC;IACnB;IACA,OAAOE,MAAM;EACf,CAAC;EACDO,MAAM,EAAE,SAAAA,OAAA;IAAA,OAAM;EAAA;AAChB,CAAC;AAED,OAAO,IAAMG,gBAA8B,GAAG;EAC5Cd,IAAI,EAAEY,oBAAoB,CAACZ,IAAI;EAC/BW,MAAM,EAAE,SAAAA,OAAAI,KAAA,EAAoC;IAAA,IAAjCb,EAAE,GAA0Ba,KAAA,CAA5Bb,EAAE;MAAEC,KAAK,GAAmBY,KAAA,CAAxBZ,KAAK;MAAEC,MAAM,GAAWW,KAAA,CAAjBX,MAAM;MAAEC,OAAA,GAASU,KAAA,CAATV,OAAA;IAC5B,IAAI,CAACF,KAAK,EAAE,OAAOC,MAAM;IAEzB,IAAMY,IAAe,GAAG,EAAE;IAE1B,IAAIP,MAAM,GAAGJ,OAAO,CAACK,GAAG,CAACR,EAAE,CAAC;IAE5B,OAAOO,MAAM,IAAI,IAAI,EAAE;MACrBO,IAAI,CAACC,IAAI,CAACR,MAAM,CAAC;MACjBA,MAAM,GAAGJ,OAAO,CAACK,GAAG,CAACD,MAAM,CAAC;IAC9B;IAEA,OAAO,IAAIF,GAAG,CAACS,IAAI,CAAC;EACtB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}