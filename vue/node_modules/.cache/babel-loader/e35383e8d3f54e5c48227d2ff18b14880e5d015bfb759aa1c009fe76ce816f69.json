{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, mergeProps as _mergeProps, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_v_btn = _resolveComponent(\"v-btn\");\n  var _component_v_snackbar = _resolveComponent(\"v-snackbar\");\n  return _openBlock(), _createBlock(_component_v_snackbar, {\n    modelValue: _ctx.show,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n      return _ctx.show = $event;\n    }),\n    timeout: _ctx.timeout,\n    color: _ctx.type,\n    absolute: \"\",\n    top: \"\",\n    right: \"\"\n  }, {\n    action: _withCtx(function (_ref) {\n      var attrs = _ref.attrs;\n      return [_createVNode(_component_v_btn, _mergeProps(attrs, {\n        text: \"\",\n        onClick: _cache[0] || (_cache[0] = function ($event) {\n          return _ctx.show = false;\n        })\n      }), {\n        \"default\": _withCtx(function () {\n          return [_createTextVNode(_toDisplayString(_ctx.$tc('close')), 1 /* TEXT */)];\n        }),\n\n        _: 2 /* DYNAMIC */\n      }, 1040 /* FULL_PROPS, DYNAMIC_SLOTS */)];\n    }),\n\n    \"default\": _withCtx(function () {\n      return [_createTextVNode(_toDisplayString($options.text) + \" \", 1 /* TEXT */)];\n    }),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\", \"timeout\", \"color\"]);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}