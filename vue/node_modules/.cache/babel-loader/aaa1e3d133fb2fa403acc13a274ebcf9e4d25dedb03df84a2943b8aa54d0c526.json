{"ast":null,"code":"import { renderSlot as _renderSlot, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveDynamicComponent as _resolveDynamicComponent, createBlock as _createBlock, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"d-flex flex-column align-items-center\",\n  style: {\n    \"position\": \"sticky\",\n    \"top\": \"100px\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ue_btn = _resolveComponent(\"ue-btn\");\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n  const _component_v_form = _resolveComponent(\"v-form\");\n  return _openBlock(), _createBlock(_component_v_form, {\n    modelValue: $data.valid,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.valid = $event),\n    onSubmit: _withModifiers($options.submit, [\"prevent\"]),\n    id: $data.id\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_container, null, {\n      default: _withCtx(() => [_createVNode(_component_v_row, null, {\n        default: _withCtx(() => [_createVNode(_component_v_col, {\n          cols: 12,\n          sm: 12,\n          md: 12,\n          lg: 4,\n          xl: 6,\n          \"order-lg\": 1,\n          \"order-xl\": 1,\n          class: \"d-flex flex-column\",\n          style: {\n            \"position\": \"sticky\"\n          }\n        }, {\n          default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [$props.stickyButton && $props.hasSubmit ? _renderSlot(_ctx.$slots, \"submitButton\", {\n            key: 0,\n            attrs: {},\n            on: {}\n          }, () => [_createVNode(_component_ue_btn, {\n            form: $data.id,\n            type: \"submit\",\n            width: \"60%\",\n            class: \"mb-6\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$tc('submit')), 1)]),\n            _: 1\n          }, 8, [\"form\"])]) : _createCommentVNode(\"\", true)])]),\n          _: 3\n        }), _createVNode(_component_v_col, {\n          cols: 12,\n          sm: 12,\n          md: 12,\n          lg: 8,\n          xl: 6,\n          \"order-lg\": 0,\n          \"order-xl\": 0\n        }, {\n          default: _withCtx(() => [_renderSlot(_ctx.$slots, \"body\", {\n            attrs: {\n              // inputs: this.formInputs,\n              // item: this.editedItem\n            }\n          }, () => [_createVNode(_component_v_row, null, {\n            default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.formInputs, (input, i) => {\n              return _openBlock(), _createBlock(_component_v_col, {\n                key: i,\n                index: i,\n                cols: input.cols,\n                sm: input.sm,\n                md: input.md,\n                lg: input.lg,\n                xl: input.xl\n              }, {\n                default: _withCtx(() => [(_openBlock(), _createBlock(_resolveDynamicComponent(`ue-input-${input.type}`), {\n                  modelValue: $options.model[input.name],\n                  \"onUpdate:modelValue\": $event => $options.model[input.name] = $event,\n                  attributes: input\n                }, null, 8, [\"modelValue\", \"onUpdate:modelValue\", \"attributes\"]))]),\n                _: 2\n              }, 1032, [\"index\", \"cols\", \"sm\", \"md\", \"lg\", \"xl\"]);\n            }), 128))]),\n            _: 1\n          })])]),\n          _: 3\n        })]),\n        _: 3\n      })]),\n      _: 3\n    }), !$props.stickyButton && $props.hasSubmit ? (_openBlock(), _createBlock(_component_v_container, {\n      key: 0\n    }, {\n      default: _withCtx(() => [_renderSlot(_ctx.$slots, \"submitButton\", {\n        attrs: {},\n        on: {}\n      }, () => [_createVNode(_component_ue_btn, {\n        form: $data.id,\n        type: \"submit\",\n        right: \"\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$tc('submit')), 1)]),\n        _: 1\n      }, 8, [\"form\"])])]),\n      _: 3\n    })) : _createCommentVNode(\"\", true), _createVNode(_component_v_container, null, {\n      default: _withCtx(() => [_ctx.loading ? (_openBlock(), _createBlock(_component_v_text_field, {\n        key: 0,\n        color: \"success\",\n        loading: \"\",\n        disabled: \"\"\n      })) : _createCommentVNode(\"\", true)]),\n      _: 1\n    })]),\n    _: 3\n  }, 8, [\"modelValue\", \"onSubmit\", \"id\"]);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}