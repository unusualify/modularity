{"ast":null,"code":"export function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return \"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, toHandlers as _toHandlers, mergeProps as _mergeProps, withCtx as _withCtx, createVNode as _createVNode, renderSlot as _renderSlot, openBlock as _openBlock, createBlock as _createBlock } from \\\"vue\\\" export function render(_ctx, _cache, $props, $setup, $data, $options) { const _component_v_btn = _resolveComponent(\\\"v-btn\\\") const _component_v_card_title = _resolveComponent(\\\"v-card-title\\\") const _component_v_card_text = _resolveComponent(\\\"v-card-text\\\") const _component_v_card_actions = _resolveComponent(\\\"v-card-actions\\\") const _component_v_card = _resolveComponent(\\\"v-card\\\") const _component_v_dialog = _resolveComponent(\\\"v-dialog\\\") return (_openBlock(), _createBlock(_component_v_dialog, { modelValue: $options.show, \\\"onUpdate:modelValue\\\": _cache[0] || (_cache[0] = $event => (($options.show) = $event)), \\\"max-width\\\": \\\"500px\\\" }, { activator: _withCtx(({ on, attrs }) => [ _createVNode(_component_v_btn, _mergeProps({ color: \\\"primary\\\", dark: \\\"\\\", class: \\\"mb-2\\\" }, attrs, _toHandlers(on)), { default: _withCtx(() => [ _createTextVNode(_toDisplayString(_ctx.$t('new-item', {'item': $props.name} )), 1 /* TEXT */) ]), _: 2 /* DYNAMIC */ }, 1040 /* FULL_PROPS, DYNAMIC_SLOTS */) ]), default: _withCtx(() => [ _createVNode(_component_v_card, null, { default: _withCtx(() => [ _createVNode(_component_v_card_title, null, { default: _withCtx(() => [ _renderSlot(_ctx.$slots, \\\"title\\\") ]), _: 3 /* FORWARDED */ }), _createVNode(_component_v_card_text, null, { default: _withCtx(() => [ _renderSlot(_ctx.$slots, \\\"middle\\\") ]), _: 3 /* FORWARDED */ }), _createVNode(_component_v_card_actions, null, { default: _withCtx(() => [ _renderSlot(_ctx.$slots, \\\"actions\\\") ]), _: 3 /* FORWARDED */ }) ]), _: 3 /* FORWARDED */ }) ]), _: 3 /* FORWARDED */ }, 8 /* PROPS */, [\\\"modelValue\\\"])) }\";\n}","map":{"version":3,"names":[],"sources":["/var/www/crm_template/packages/oobook/crm-base/vue/src/js/components/FormDialog.vue"],"sourcesContent":["<template>\n    <v-dialog\n      v-model=\"show\"\n      max-width=\"500px\"\n    >\n      <template v-slot:activator=\"{ on, attrs }\">\n        <v-btn\n          color=\"primary\"\n          dark\n          class=\"mb-2\"\n          v-bind=\"attrs\"\n          v-on=\"on\"\n        >\n          {{ $t('new-item', {'item': name} ) }}\n        </v-btn>\n      </template>\n      <v-card>\n        <v-card-title>\n          <slot name=\"title\"></slot>\n          \n        </v-card-title>\n\n        <v-card-text>\n          \n          <slot name=\"middle\"></slot>\n\n        </v-card-text>\n\n        <v-card-actions>\n\n          <slot name=\"actions\"></slot>\n          \n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n</template>\n\n<script>\nimport Form from './Form';\n\nexport default {\n    components: { \n        'ue-form': Form\n    },\n    name: 'ue-form-dialog',\n    props: {\n      value: {\n        type: Boolean,\n        default: false\n      },\n      name: {\n        type: String,\n        default: \"Item\"\n      }\n    },\n    data() {\n      return {\n        // show: this.dialog,\n      }\n    },\n\n    computed: {\n      show: {\n        get () {\n          __log(this.value)\n          return this.value\n        },\n        set (value) {\n          this.$emit('input', value)\n        }\n      }\n    },\n\n    methods: {\n      close() {\n        this.dialog = false\n        this.$nextTick(() => {\n          this.editedItem = Object.assign({}, this.defaultItem)\n          this.editedIndex = -1\n        })\n      }\n    }\n}\n</script>\n\n<style>\n\n</style>"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}