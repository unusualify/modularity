{"ast":null,"code":"import _objectSpread from \"/var/www/crm_template/packages/oobook/crm-base/vue/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport { withDirectives as _withDirectives, vShow as _vShow, createVNode as _createVNode } from \"vue\";\n// Components\nimport { VExpandTransition } from \"../transitions/index.mjs\";\nimport { VExpansionPanelSymbol } from \"./VExpansionPanels.mjs\"; // Composables\nimport { makeLazyProps, useLazy } from \"../../composables/lazy.mjs\"; // Utilities\nimport { inject } from 'vue';\nimport { genericComponent, useRender } from \"../../util/index.mjs\";\nexport var VExpansionPanelText = genericComponent()({\n  name: 'VExpansionPanelText',\n  props: _objectSpread({}, makeLazyProps()),\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n    var expansionPanel = inject(VExpansionPanelSymbol);\n    if (!expansionPanel) throw new Error('[Vuetify] v-expansion-panel-text needs to be placed inside v-expansion-panel');\n    var _useLazy = useLazy(props, expansionPanel.isSelected),\n      hasContent = _useLazy.hasContent,\n      onAfterLeave = _useLazy.onAfterLeave;\n    useRender(function () {\n      return _createVNode(VExpandTransition, {\n        \"onAfterLeave\": onAfterLeave\n      }, {\n        \"default\": function _default() {\n          var _slots$default;\n          return [_withDirectives(_createVNode(\"div\", {\n            \"class\": \"v-expansion-panel-text\"\n          }, [slots[\"default\"] && hasContent.value && _createVNode(\"div\", {\n            \"class\": \"v-expansion-panel-text__wrapper\"\n          }, [(_slots$default = slots[\"default\"]) === null || _slots$default === void 0 ? void 0 : _slots$default.call(slots)])]), [[_vShow, expansionPanel.isSelected.value]])];\n        }\n      });\n    });\n    return {};\n  }\n});","map":{"version":3,"names":["VExpandTransition","VExpansionPanelSymbol","makeLazyProps","useLazy","inject","genericComponent","useRender","VExpansionPanelText","name","props","_objectSpread","setup","_ref","slots","expansionPanel","Error","_useLazy","isSelected","hasContent","onAfterLeave","_createVNode","_default","_slots$default","_withDirectives","value","call","_vShow"],"sources":["../../../src/components/VExpansionPanel/VExpansionPanelText.tsx"],"sourcesContent":["// Components\nimport { VExpandTransition } from '@/components/transitions'\nimport { VExpansionPanelSymbol } from './VExpansionPanels'\n\n// Composables\nimport { makeLazyProps, useLazy } from '@/composables/lazy'\n\n// Utilities\nimport { inject } from 'vue'\nimport { genericComponent, useRender } from '@/util'\n\nexport const VExpansionPanelText = genericComponent()({\n  name: 'VExpansionPanelText',\n\n  props: {\n    ...makeLazyProps(),\n  },\n\n  setup (props, { slots }) {\n    const expansionPanel = inject(VExpansionPanelSymbol)\n\n    if (!expansionPanel) throw new Error('[Vuetify] v-expansion-panel-text needs to be placed inside v-expansion-panel')\n\n    const { hasContent, onAfterLeave } = useLazy(props, expansionPanel.isSelected)\n\n    useRender(() => (\n      <VExpandTransition onAfterLeave={ onAfterLeave }>\n        <div\n          class=\"v-expansion-panel-text\"\n          v-show={ expansionPanel.isSelected.value }\n        >\n          { slots.default && hasContent.value && (\n            <div class=\"v-expansion-panel-text__wrapper\">\n              { slots.default?.() }\n            </div>\n          ) }\n        </div>\n      </VExpandTransition>\n    ))\n\n    return {}\n  },\n})\n\nexport type VExpansionPanelText = InstanceType<typeof VExpansionPanelText>\n"],"mappings":";;;;AAAA;AAAA,SACSA,iBAAiB;AAAA,SACjBC,qBAAqB,kCAE9B;AAAA,SACSC,aAAa,EAAEC,OAAO,sCAE/B;AACA,SAASC,MAAM,QAAQ,KAAK;AAAA,SACnBC,gBAAgB,EAAEC,SAAS;AAEpC,OAAO,IAAMC,mBAAmB,GAAGF,gBAAgB,EAAE,CAAC;EACpDG,IAAI,EAAE,qBAAqB;EAE3BC,KAAK,EAAAC,aAAA,KACAR,aAAa,GACjB;EAEDS,KAAK,WAAAA,MAAEF,KAAK,EAAAG,IAAA,EAAa;IAAA,IAATC,KAAA,GAAOD,IAAA,CAAPC,KAAA;IACd,IAAMC,cAAc,GAAGV,MAAM,CAACH,qBAAqB,CAAC;IAEpD,IAAI,CAACa,cAAc,EAAE,MAAM,IAAIC,KAAK,CAAC,8EAA8E,CAAC;IAEpH,IAAAC,QAAA,GAAqCb,OAAO,CAACM,KAAK,EAAEK,cAAc,CAACG,UAAU,CAAC;MAAtEC,UAAU,GAAAF,QAAA,CAAVE,UAAU;MAAEC,YAAA,GAAAH,QAAA,CAAAG,YAAA;IAEpBb,SAAS,CAAC;MAAA,OAAAc,YAAA,CAAApB,iBAAA;QAAA,gBAC0BmB;MAAY;QAAA,oBAAAE,SAAA;UAAA,IAAAC,cAAA;UAAA,QAAAC,eAAA,CAAAH,YAAA;YAAA,SAEpC;UAAwB,IAG5BP,KAAK,WAAQ,IAAIK,UAAU,CAACM,KAAK,IAAAJ,YAAA;YAAA,SACtB;UAAiC,KAAAE,cAAA,GACxCT,KAAK,WAAQ,cAAAS,cAAA,uBAAbA,cAAA,CAAAG,IAAA,CAAAZ,KAAK,CAAY,EAEtB,MAAAa,MAAA,EANQZ,cAAc,CAACG,UAAU,CAACO,KAAK;QAAA;MAAA,EAS7C;IAAA,EAAC;IAEF,OAAO,CAAC,CAAC;EACX;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}