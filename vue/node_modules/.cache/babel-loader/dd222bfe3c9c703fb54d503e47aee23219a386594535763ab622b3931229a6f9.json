{"ast":null,"code":"export function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return \"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withModifiers as _withModifiers, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \\\"vue\\\" export function render(_ctx, _cache, $props, $setup, $data, $options) { const _component_v_btn = _resolveComponent(\\\"v-btn\\\") const _component_v_card_title = _resolveComponent(\\\"v-card-title\\\") const _component_v_card_text = _resolveComponent(\\\"v-card-text\\\") const _component_v_spacer = _resolveComponent(\\\"v-spacer\\\") const _component_v_card_actions = _resolveComponent(\\\"v-card-actions\\\") const _component_v_card = _resolveComponent(\\\"v-card\\\") const _component_v_dialog = _resolveComponent(\\\"v-dialog\\\") const _component_v_row = _resolveComponent(\\\"v-row\\\") return (_openBlock(), _createBlock(_component_v_row, { justify: \\\"center\\\" }, { default: _withCtx(() => [ _createVNode(_component_v_btn, { color: \\\"primary\\\", dark: \\\"\\\", onClick: _cache[0] || (_cache[0] = _withModifiers($event => ($data.dialog = true), [\\\"stop\\\"])) }, { default: _withCtx(() => [ _createTextVNode(\\\" Open Dialog \\\") ]), _: 1 /* STABLE */ }), _createVNode(_component_v_dialog, { modelValue: $data.dialog, \\\"onUpdate:modelValue\\\": _cache[3] || (_cache[3] = $event => (($data.dialog) = $event)), \\\"max-width\\\": \\\"290\\\" }, { default: _withCtx(() => [ _createVNode(_component_v_card, null, { default: _withCtx(() => [ _createVNode(_component_v_card_title, { class: \\\"text-h5\\\" }, { default: _withCtx(() => [ _createTextVNode(\\\" Use Google's location service? \\\") ]), _: 1 /* STABLE */ }), _createVNode(_component_v_card_text, null, { default: _withCtx(() => [ _createTextVNode(\\\" Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running. \\\") ]), _: 1 /* STABLE */ }), _createVNode(_component_v_card_actions, null, { default: _withCtx(() => [ _createVNode(_component_v_spacer), _createVNode(_component_v_btn, { color: \\\"green darken-1\\\", text: \\\"\\\", onClick: _cache[1] || (_cache[1] = $event => ($data.dialog = false)) }, { default: _withCtx(() => [ _createTextVNode(\\\" Disagree \\\") ]), _: 1 /* STABLE */ }), _createVNode(_component_v_btn, { color: \\\"green darken-1\\\", text: \\\"\\\", onClick: _cache[2] || (_cache[2] = $event => ($data.dialog = false)) }, { default: _withCtx(() => [ _createTextVNode(\\\" Agree \\\") ]), _: 1 /* STABLE */ }) ]), _: 1 /* STABLE */ }) ]), _: 1 /* STABLE */ }) ]), _: 1 /* STABLE */ }, 8 /* PROPS */, [\\\"modelValue\\\"]) ]), _: 1 /* STABLE */ })) }\";\n}","map":{"version":3,"names":[],"sources":["/var/www/crm_template/packages/oobook/crm-base/vue/src/js/components/modals/ModalTest.vue"],"sourcesContent":["<template>\n  <v-row justify=\"center\">\n    <v-btn\n      color=\"primary\"\n      dark\n      @click.stop=\"dialog = true\"\n    >\n      Open Dialog\n    </v-btn>\n\n    <v-dialog\n      v-model=\"dialog\"\n      max-width=\"290\"\n    >\n      <v-card>\n        <v-card-title class=\"text-h5\">\n          Use Google's location service?\n        </v-card-title>\n\n        <v-card-text>\n          Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\n        </v-card-text>\n\n        <v-card-actions>\n          <v-spacer></v-spacer>\n\n          <v-btn\n            color=\"green darken-1\"\n            text\n            @click=\"dialog = false\"\n          >\n            Disagree\n          </v-btn>\n\n          <v-btn\n            color=\"green darken-1\"\n            text\n            @click=\"dialog = false\"\n          >\n            Agree\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </v-row>\n</template>\n\n\n<script>\n  export default {\n    data () {\n      return {\n        dialog: false,\n      }\n    },\n  }\n</script>"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}