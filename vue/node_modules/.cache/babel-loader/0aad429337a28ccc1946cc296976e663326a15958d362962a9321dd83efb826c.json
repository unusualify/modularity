{"ast":null,"code":"import _objectSpread from \"/var/www/crm_template/packages/oobook/crm-base/vue/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VChipGroup.css\";\n\n// Composables\nimport { makeGroupProps, useGroup } from \"../../composables/group.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { makeVariantProps } from \"../../composables/variant.mjs\";\nimport { provideDefaults } from \"../../composables/defaults.mjs\"; // Utilities\nimport { deepEqual, genericComponent, useRender } from \"../../util/index.mjs\";\nimport { toRef } from 'vue';\n\n// Types\n\nexport var VChipGroupSymbol = Symbol[\"for\"]('vuetify:v-chip-group');\nexport var VChipGroup = genericComponent()({\n  name: 'VChipGroup',\n  props: _objectSpread(_objectSpread(_objectSpread(_objectSpread({\n    column: Boolean,\n    filter: Boolean,\n    valueComparator: {\n      type: Function,\n      \"default\": deepEqual\n    }\n  }, makeGroupProps({\n    selectedClass: 'v-chip--selected'\n  })), makeTagProps()), makeThemeProps()), makeVariantProps({\n    variant: 'tonal'\n  })),\n  emits: {\n    'update:modelValue': function updateModelValue(value) {\n      return true;\n    }\n  },\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n    var _provideTheme = provideTheme(props),\n      themeClasses = _provideTheme.themeClasses;\n    var _useGroup = useGroup(props, VChipGroupSymbol),\n      isSelected = _useGroup.isSelected,\n      select = _useGroup.select,\n      next = _useGroup.next,\n      prev = _useGroup.prev,\n      selected = _useGroup.selected;\n    provideDefaults({\n      VChip: {\n        color: toRef(props, 'color'),\n        disabled: toRef(props, 'disabled'),\n        filter: toRef(props, 'filter'),\n        variant: toRef(props, 'variant')\n      }\n    });\n    useRender(function () {\n      return _createVNode(props.tag, {\n        \"class\": ['v-chip-group', {\n          'v-chip-group--column': props.column\n        }, themeClasses.value]\n      }, {\n        \"default\": function _default() {\n          var _slots$default;\n          return [(_slots$default = slots[\"default\"]) === null || _slots$default === void 0 ? void 0 : _slots$default.call(slots, {\n            isSelected: isSelected,\n            select: select,\n            next: next,\n            prev: prev,\n            selected: selected.value\n          })];\n        }\n      });\n    });\n    return {};\n  }\n});","map":{"version":3,"names":["makeGroupProps","useGroup","makeTagProps","makeThemeProps","provideTheme","makeVariantProps","provideDefaults","deepEqual","genericComponent","useRender","toRef","VChipGroupSymbol","Symbol","VChipGroup","name","props","_objectSpread","column","Boolean","filter","valueComparator","type","Function","selectedClass","variant","emits","updateModelValue","value","setup","_ref","slots","_provideTheme","themeClasses","_useGroup","isSelected","select","next","prev","selected","VChip","color","disabled","_createVNode","tag","_default","_slots$default","call"],"sources":["../../../src/components/VChipGroup/VChipGroup.tsx"],"sourcesContent":["// Styles\nimport './VChipGroup.sass'\n\n// Composables\nimport { makeGroupProps, useGroup } from '@/composables/group'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { makeVariantProps } from '@/composables/variant'\nimport { provideDefaults } from '@/composables/defaults'\n\n// Utilities\nimport { deepEqual, genericComponent, useRender } from '@/util'\nimport { toRef } from 'vue'\n\n// Types\nimport type { PropType } from 'vue'\n\nexport const VChipGroupSymbol = Symbol.for('vuetify:v-chip-group')\n\nexport const VChipGroup = genericComponent()({\n  name: 'VChipGroup',\n\n  props: {\n    column: Boolean,\n    filter: Boolean,\n    valueComparator: {\n      type: Function as PropType<typeof deepEqual>,\n      default: deepEqual,\n    },\n\n    ...makeGroupProps({ selectedClass: 'v-chip--selected' }),\n    ...makeTagProps(),\n    ...makeThemeProps(),\n    ...makeVariantProps({ variant: 'tonal' } as const),\n  },\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { isSelected, select, next, prev, selected } = useGroup(props, VChipGroupSymbol)\n\n    provideDefaults({\n      VChip: {\n        color: toRef(props, 'color'),\n        disabled: toRef(props, 'disabled'),\n        filter: toRef(props, 'filter'),\n        variant: toRef(props, 'variant'),\n      },\n    })\n\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-chip-group',\n          {\n            'v-chip-group--column': props.column,\n          },\n          themeClasses.value,\n        ]}\n      >\n        { slots.default?.({\n          isSelected,\n          select,\n          next,\n          prev,\n          selected: selected.value,\n        }) }\n      </props.tag>\n    ))\n\n    return {}\n  },\n})\n\nexport type VChipGroup = InstanceType<typeof VChipGroup>\n"],"mappings":";;;;;AAAA;AACA;;AAEA;AAAA,SACSA,cAAc,EAAEC,QAAQ;AAAA,SACxBC,YAAY;AAAA,SACZC,cAAc,EAAEC,YAAY;AAAA,SAC5BC,gBAAgB;AAAA,SAChBC,eAAe,0CAExB;AAAA,SACSC,SAAS,EAAEC,gBAAgB,EAAEC,SAAS;AAC/C,SAASC,KAAK,QAAQ,KAAK;;AAE3B;;AAGA,OAAO,IAAMC,gBAAgB,GAAGC,MAAM,OAAI,CAAC,sBAAsB,CAAC;AAElE,OAAO,IAAMC,UAAU,GAAGL,gBAAgB,EAAE,CAAC;EAC3CM,IAAI,EAAE,YAAY;EAElBC,KAAK,EAAAC,aAAA,CAAAA,aAAA,CAAAA,aAAA,CAAAA,aAAA;IACHC,MAAM,EAAEC,OAAO;IACfC,MAAM,EAAED,OAAO;IACfE,eAAe,EAAE;MACfC,IAAI,EAAEC,QAAsC;MAC5C,WAASf;IACX;EAAC,GAEEP,cAAc,CAAC;IAAEuB,aAAa,EAAE;EAAmB,CAAC,CAAC,GACrDrB,YAAY,EAAE,GACdC,cAAc,EAAE,GAChBE,gBAAgB,CAAC;IAAEmB,OAAO,EAAE;EAAQ,CAAC,EACzC;EAEDC,KAAK,EAAE;IACL,mBAAmB,EAAG,SAAAC,iBAAAC,KAAU;MAAA,OAAK;IAAA;EACvC,CAAC;EAEDC,KAAK,WAAAA,MAAEb,KAAK,EAAAc,IAAA,EAAa;IAAA,IAATC,KAAA,GAAOD,IAAA,CAAPC,KAAA;IACd,IAAAC,aAAA,GAAyB3B,YAAY,CAACW,KAAK,CAAC;MAApCiB,YAAA,GAAAD,aAAA,CAAAC,YAAA;IACR,IAAAC,SAAA,GAAqDhC,QAAQ,CAACc,KAAK,EAAEJ,gBAAgB,CAAC;MAA9EuB,UAAU,GAAAD,SAAA,CAAVC,UAAU;MAAEC,MAAM,GAAAF,SAAA,CAANE,MAAM;MAAEC,IAAI,GAAAH,SAAA,CAAJG,IAAI;MAAEC,IAAI,GAAAJ,SAAA,CAAJI,IAAI;MAAEC,QAAA,GAAAL,SAAA,CAAAK,QAAA;IAExChC,eAAe,CAAC;MACdiC,KAAK,EAAE;QACLC,KAAK,EAAE9B,KAAK,CAACK,KAAK,EAAE,OAAO,CAAC;QAC5B0B,QAAQ,EAAE/B,KAAK,CAACK,KAAK,EAAE,UAAU,CAAC;QAClCI,MAAM,EAAET,KAAK,CAACK,KAAK,EAAE,QAAQ,CAAC;QAC9BS,OAAO,EAAEd,KAAK,CAACK,KAAK,EAAE,SAAS;MACjC;IACF,CAAC,CAAC;IAEFN,SAAS,CAAC;MAAA,OAAAiC,YAAA,CAAA3B,KAAA,CAAA4B,GAAA;QAAA,SAEC,CACL,cAAc,EACd;UACE,sBAAsB,EAAE5B,KAAK,CAACE;QAChC,CAAC,EACDe,YAAY,CAACL,KAAK;MACnB;QAAA,oBAAAiB,SAAA;UAAA,IAAAC,cAAA;UAAA,SAAAA,cAAA,GAECf,KAAK,WAAQ,cAAAe,cAAA,uBAAbA,cAAA,CAAAC,IAAA,CAAAhB,KAAK,EAAW;YAChBI,UAAU,EAAVA,UAAU;YACVC,MAAM,EAANA,MAAM;YACNC,IAAI,EAAJA,IAAI;YACJC,IAAI,EAAJA,IAAI;YACJC,QAAQ,EAAEA,QAAQ,CAACX;UACrB,CAAC,CAAC;QAAA;MAAA,EAEL;IAAA,EAAC;IAEF,OAAO,CAAC,CAAC;EACX;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}