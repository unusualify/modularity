{"ast":null,"code":"import { getCurrentInstance } from \"./getCurrentInstance.mjs\";\nexport function injectSelf(key) {\n  var _getCurrentInstance = getCurrentInstance('injectSelf'),\n    provides = _getCurrentInstance.provides;\n  if (provides && key in provides) {\n    // TS doesn't allow symbol as index type\n    return provides[key];\n  }\n}","map":{"version":3,"names":["getCurrentInstance","injectSelf","key","_getCurrentInstance","provides"],"sources":["../../src/util/injectSelf.ts"],"sourcesContent":["import { getCurrentInstance } from '@/util/getCurrentInstance'\nimport type { InjectionKey } from 'vue'\n\nexport function injectSelf<T>(key: InjectionKey<T> | string): T | undefined\nexport function injectSelf (key: InjectionKey<any> | string) {\n  const { provides } = getCurrentInstance('injectSelf')\n\n  if (provides && (key as string | symbol) in provides) {\n    // TS doesn't allow symbol as index type\n    return provides[key as string]\n  }\n}\n"],"mappings":"SAASA,kBAAkB;AAI3B,OAAO,SAASC,UAAUA,CAAEC,GAA+B,EAAE;EAC3D,IAAAC,mBAAA,GAAqBH,kBAAkB,CAAC,YAAY,CAAC;IAA7CI,QAAA,GAAAD,mBAAA,CAAAC,QAAA;EAER,IAAIA,QAAQ,IAAKF,GAAG,IAAwBE,QAAQ,EAAE;IACpD;IACA,OAAOA,QAAQ,CAACF,GAAG,CAAW;EAChC;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}