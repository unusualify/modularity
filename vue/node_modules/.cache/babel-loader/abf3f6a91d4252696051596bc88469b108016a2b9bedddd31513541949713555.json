{"ast":null,"code":"import htmlClasses from '@/utils/htmlClasses';\nexport default {\n  emits: ['dialog'],\n  props: {\n    modelValue: {\n      type: Boolean\n    },\n    name: {\n      type: String,\n      \"default\": 'Item'\n    },\n    transition: {\n      type: String,\n      \"default\": 'bottom'\n    },\n    widthType: {\n      type: String\n    },\n    systembar: {\n      type: Boolean,\n      \"default\": false\n    },\n    fullscreen: {\n      type: Boolean,\n      \"default\": false\n    }\n  },\n  data: function data() {\n    return {\n      // dialog: this.value,\n      widths: {\n        sm: '300px',\n        md: '500px',\n        lg: '750px'\n      },\n      width: this.widthType,\n      modalClass: htmlClasses.modal,\n      firstFocusableEl: null,\n      lastFocusableEl: null,\n      full: this.fullscreen\n      //   dialog: false\n    };\n  },\n\n  computed: {\n    dialog: {\n      get: function get() {\n        return this.value;\n      },\n      set: function set(value) {\n        this.$emit('update:input', value);\n      }\n    },\n    // full: {\n    //     get () {\n    //         return this.fullscreen\n    //         return this.fullScreen\n    //     },\n    //     set (value) {\n    //         // this.$emit('screenListener', this.full)\n    //     }\n    // },\n    togglePersistent: function togglePersistent() {\n      return this.persistent;\n    },\n    toggleScrollable: function toggleScrollable() {\n      return this.scrollable;\n    },\n    modalWidth: function modalWidth() {\n      return this.width ? this.widths[this.width] : null;\n    }\n  },\n  watch: {\n    dialog: function dialog(newVal, oldVal) {\n      __log('modal vue watcher dialog', newVal, oldVal);\n    }\n  },\n  methods: {\n    toggle: function toggle() {\n      this.dialog = !this.dialog;\n    },\n    close: function close() {\n      this.dialog = false;\n    },\n    open: function open() {\n      this.dialog = true;\n    },\n    confirm: function confirm() {\n      this.dialog = false;\n    },\n    attrs: function attrs(_attrs) {\n      return _attrs;\n    },\n    toggleFullScreen: function toggleFullScreen() {\n      return this.full = !this.full;\n    },\n    screenListener: function screenListener(e) {\n      this.full = e.target.fullScreen;\n    }\n  },\n  beforeUnmount: function beforeUnmount() {},\n  created: function created() {\n    // setInterval((self) => {\n    //   __log('dialog', self.dialog)\n    // }, 5000, this)\n  }\n};","map":{"version":3,"names":["htmlClasses","emits","props","modelValue","type","Boolean","name","String","transition","widthType","systembar","fullscreen","data","widths","sm","md","lg","width","modalClass","modal","firstFocusableEl","lastFocusableEl","full","computed","dialog","get","value","set","$emit","togglePersistent","persistent","toggleScrollable","scrollable","modalWidth","watch","newVal","oldVal","__log","methods","toggle","close","open","confirm","attrs","toggleFullScreen","screenListener","e","target","fullScreen","beforeUnmount","created"],"sources":["/var/www/crm_template/packages/oobook/crm-base/vue/src/js/components/modals/Modal.vue"],"sourcesContent":["<template>\n\n    <v-dialog\n        v-model=\"dialog\"\n        v-bind=\"{\n            ...bindProps()\n        }\"\n        :fullscreen=\"full\"\n        :width=\"modalWidth\"\n    >\n\n        <template v-slot:activator=\"{ props }\">\n            <slot\n                name=\"activator\"\n                :props=\"{\n                    ...props\n                }\"\n                >\n\n            </slot>\n        </template>\n\n        <v-card>\n            <slot v-if=\"systembar\" name=\"systembar\">\n                <v-layout style=\"height: 40px\">\n                    <v-system-bar dark>\n                        <v-icon @click=\"toggleFullScreen()\" :x-small=\"full\">\n                            mdi-checkbox-blank-outline\n                        </v-icon>\n                        <!-- <v-icon @click=\"cancelModal(on.closeDialog)\" >mdi-close</v-icon> -->\n                        <v-icon @click=\"close()\">mdi-close</v-icon>\n                    </v-system-bar>\n                </v-layout>\n            </slot>\n            <slot\n                name=\"body\"\n                :props=\"{\n                    onOpen: this.open,\n                    onClose: this.close,\n                    onConfirm: this.confirm\n                }\"\n\n                :closeDialog=\"close\"\n                >\n\n            </slot>\n        </v-card>\n    </v-dialog>\n</template>\n\n<script>\nimport htmlClasses from '@/utils/htmlClasses'\n\nexport default {\n  emits: ['dialog'],\n  props: {\n    modelValue: {\n      type: Boolean\n    },\n    name: {\n      type: String,\n      default: 'Item'\n    },\n    transition: {\n      type: String,\n      default: 'bottom'\n    },\n\n    widthType: {\n      type: String\n    },\n    systembar: {\n      type: Boolean,\n      default: false\n    },\n    fullscreen: {\n      type: Boolean,\n      default: false\n    }\n\n  },\n  data () {\n    return {\n      // dialog: this.value,\n      widths: {\n        sm: '300px',\n        md: '500px',\n        lg: '750px'\n      },\n      width: this.widthType,\n\n      modalClass: htmlClasses.modal,\n      firstFocusableEl: null,\n      lastFocusableEl: null,\n\n      full: this.fullscreen\n    //   dialog: false\n    }\n  },\n\n  computed: {\n    dialog: {\n      get () {\n        return this.value\n      },\n      set (value) {\n        this.$emit('update:input', value)\n      }\n    },\n    // full: {\n    //     get () {\n    //         return this.fullscreen\n    //         return this.fullScreen\n    //     },\n    //     set (value) {\n    //         // this.$emit('screenListener', this.full)\n    //     }\n    // },\n    togglePersistent () {\n      return this.persistent\n    },\n\n    toggleScrollable () {\n      return this.scrollable\n    },\n    modalWidth () {\n      return this.width ? this.widths[this.width] : null\n    }\n  },\n\n  watch: {\n    dialog (newVal, oldVal) {\n      __log('modal vue watcher dialog', newVal, oldVal)\n    }\n  },\n\n  methods: {\n    toggle () {\n      this.dialog = !this.dialog\n    },\n    close () {\n      this.dialog = false\n    },\n    open () {\n      this.dialog = true\n    },\n    confirm () {\n      this.dialog = false\n    },\n    attrs (attrs) {\n      return attrs\n    },\n    toggleFullScreen () {\n      return this.full = !this.full\n    },\n    screenListener (e) {\n      this.full = e.target.fullScreen\n    }\n  },\n  beforeUnmount: function () {\n\n  },\n  created () {\n    // setInterval((self) => {\n    //   __log('dialog', self.dialog)\n    // }, 5000, this)\n  }\n}\n</script>\n\n<style>\n\n</style>\n"],"mappings":"AAmDA,OAAOA,WAAU,MAAO,qBAAoB;AAE5C,eAAe;EACbC,KAAK,EAAE,CAAC,QAAQ,CAAC;EACjBC,KAAK,EAAE;IACLC,UAAU,EAAE;MACVC,IAAI,EAAEC;IACR,CAAC;IACDC,IAAI,EAAE;MACJF,IAAI,EAAEG,MAAM;MACZ,WAAS;IACX,CAAC;IACDC,UAAU,EAAE;MACVJ,IAAI,EAAEG,MAAM;MACZ,WAAS;IACX,CAAC;IAEDE,SAAS,EAAE;MACTL,IAAI,EAAEG;IACR,CAAC;IACDG,SAAS,EAAE;MACTN,IAAI,EAAEC,OAAO;MACb,WAAS;IACX,CAAC;IACDM,UAAU,EAAE;MACVP,IAAI,EAAEC,OAAO;MACb,WAAS;IACX;EAEF,CAAC;EACDO,IAAG,WAAAA,KAAA,EAAK;IACN,OAAO;MACL;MACAC,MAAM,EAAE;QACNC,EAAE,EAAE,OAAO;QACXC,EAAE,EAAE,OAAO;QACXC,EAAE,EAAE;MACN,CAAC;MACDC,KAAK,EAAE,IAAI,CAACR,SAAS;MAErBS,UAAU,EAAElB,WAAW,CAACmB,KAAK;MAC7BC,gBAAgB,EAAE,IAAI;MACtBC,eAAe,EAAE,IAAI;MAErBC,IAAI,EAAE,IAAI,CAACX;MACb;IACA;EACF,CAAC;;EAEDY,QAAQ,EAAE;IACRC,MAAM,EAAE;MACNC,GAAE,WAAAA,IAAA,EAAK;QACL,OAAO,IAAI,CAACC,KAAI;MAClB,CAAC;MACDC,GAAE,WAAAA,IAAGD,KAAK,EAAE;QACV,IAAI,CAACE,KAAK,CAAC,cAAc,EAAEF,KAAK;MAClC;IACF,CAAC;IACD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAG,gBAAe,WAAAA,iBAAA,EAAK;MAClB,OAAO,IAAI,CAACC,UAAS;IACvB,CAAC;IAEDC,gBAAe,WAAAA,iBAAA,EAAK;MAClB,OAAO,IAAI,CAACC,UAAS;IACvB,CAAC;IACDC,UAAS,WAAAA,WAAA,EAAK;MACZ,OAAO,IAAI,CAAChB,KAAI,GAAI,IAAI,CAACJ,MAAM,CAAC,IAAI,CAACI,KAAK,IAAI,IAAG;IACnD;EACF,CAAC;EAEDiB,KAAK,EAAE;IACLV,MAAK,WAAAA,OAAGW,MAAM,EAAEC,MAAM,EAAE;MACtBC,KAAK,CAAC,0BAA0B,EAAEF,MAAM,EAAEC,MAAM;IAClD;EACF,CAAC;EAEDE,OAAO,EAAE;IACPC,MAAK,WAAAA,OAAA,EAAK;MACR,IAAI,CAACf,MAAK,GAAI,CAAC,IAAI,CAACA,MAAK;IAC3B,CAAC;IACDgB,KAAI,WAAAA,MAAA,EAAK;MACP,IAAI,CAAChB,MAAK,GAAI,KAAI;IACpB,CAAC;IACDiB,IAAG,WAAAA,KAAA,EAAK;MACN,IAAI,CAACjB,MAAK,GAAI,IAAG;IACnB,CAAC;IACDkB,OAAM,WAAAA,QAAA,EAAK;MACT,IAAI,CAAClB,MAAK,GAAI,KAAI;IACpB,CAAC;IACDmB,KAAI,WAAAA,MAAGA,MAAK,EAAE;MACZ,OAAOA,MAAI;IACb,CAAC;IACDC,gBAAe,WAAAA,iBAAA,EAAK;MAClB,OAAO,IAAI,CAACtB,IAAG,GAAI,CAAC,IAAI,CAACA,IAAG;IAC9B,CAAC;IACDuB,cAAa,WAAAA,eAAGC,CAAC,EAAE;MACjB,IAAI,CAACxB,IAAG,GAAIwB,CAAC,CAACC,MAAM,CAACC,UAAS;IAChC;EACF,CAAC;EACDC,aAAa,EAAE,SAAAA,cAAA,EAAY,CAE3B,CAAC;EACDC,OAAM,WAAAA,QAAA,EAAK;IACT;IACA;IACA;EAAA;AAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}