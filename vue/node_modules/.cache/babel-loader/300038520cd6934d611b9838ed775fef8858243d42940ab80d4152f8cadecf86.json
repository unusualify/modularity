{"ast":null,"code":"import _objectWithoutProperties from \"/var/www/crm_template/packages/oobook/crm-base/vue/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _slicedToArray from \"/var/www/crm_template/packages/oobook/crm-base/vue/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectSpread from \"/var/www/crm_template/packages/oobook/crm-base/vue/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _excluded = [\"modelValue\"],\n  _excluded2 = [\"class\"];\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.parse-float.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { vModelText as _vModelText, withDirectives as _withDirectives, mergeProps as _mergeProps, resolveDirective as _resolveDirective, createVNode as _createVNode, Fragment as _Fragment } from \"vue\";\n// Styles\nimport \"./VTextarea.css\";\nimport \"../VTextField/VTextField.css\";\n\n// Components\nimport { filterFieldProps, makeVFieldProps } from \"../VField/VField.mjs\";\nimport { filterInputProps, makeVInputProps, VInput } from \"../VInput/VInput.mjs\";\nimport { VCounter } from \"../VCounter/index.mjs\";\nimport { VField } from \"../VField/index.mjs\"; // Directives\nimport Intersect from \"../../directives/intersect/index.mjs\"; // Composables\nimport { forwardRefs } from \"../../composables/forwardRefs.mjs\";\nimport { useFocus } from \"../../composables/focus.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\"; // Utilities\nimport { computed, nextTick, onBeforeUnmount, onMounted, ref, watch } from 'vue';\nimport { callEvent, clamp, convertToUnit, filterInputAttrs, genericComponent, useRender } from \"../../util/index.mjs\"; // Types\nexport var VTextarea = genericComponent()({\n  name: 'VTextarea',\n  directives: {\n    Intersect: Intersect\n  },\n  inheritAttrs: false,\n  props: _objectSpread(_objectSpread({\n    autoGrow: Boolean,\n    autofocus: Boolean,\n    counter: [Boolean, Number, String],\n    counterValue: Function,\n    hint: String,\n    persistentHint: Boolean,\n    prefix: String,\n    placeholder: String,\n    persistentPlaceholder: Boolean,\n    persistentCounter: Boolean,\n    noResize: Boolean,\n    rows: {\n      type: [Number, String],\n      \"default\": 5,\n      validator: function validator(v) {\n        return !isNaN(parseFloat(v));\n      }\n    },\n    maxRows: {\n      type: [Number, String],\n      validator: function validator(v) {\n        return !isNaN(parseFloat(v));\n      }\n    },\n    suffix: String\n  }, makeVInputProps()), makeVFieldProps()),\n  emits: {\n    'click:control': function clickControl(e) {\n      return true;\n    },\n    'mousedown:control': function mousedownControl(e) {\n      return true;\n    },\n    'update:focused': function updateFocused(focused) {\n      return true;\n    },\n    'update:modelValue': function updateModelValue(val) {\n      return true;\n    }\n  },\n  setup: function setup(props, _ref) {\n    var attrs = _ref.attrs,\n      emit = _ref.emit,\n      slots = _ref.slots;\n    var model = useProxiedModel(props, 'modelValue');\n    var _useFocus = useFocus(props),\n      isFocused = _useFocus.isFocused,\n      focus = _useFocus.focus,\n      blur = _useFocus.blur;\n    var counterValue = computed(function () {\n      return typeof props.counterValue === 'function' ? props.counterValue(model.value) : (model.value || '').toString().length;\n    });\n    var max = computed(function () {\n      if (attrs.maxlength) return attrs.maxlength;\n      if (!props.counter || typeof props.counter !== 'number' && typeof props.counter !== 'string') return undefined;\n      return props.counter;\n    });\n    function onIntersect(isIntersecting, entries) {\n      var _entries$0$target, _entries$0$target$foc;\n      if (!props.autofocus || !isIntersecting) return;\n      (_entries$0$target = entries[0].target) === null || _entries$0$target === void 0 ? void 0 : (_entries$0$target$foc = _entries$0$target.focus) === null || _entries$0$target$foc === void 0 ? void 0 : _entries$0$target$foc.call(_entries$0$target);\n    }\n    var vInputRef = ref();\n    var vFieldRef = ref();\n    var controlHeight = ref('');\n    var textareaRef = ref();\n    var isActive = computed(function () {\n      return isFocused.value || props.persistentPlaceholder;\n    });\n    var messages = computed(function () {\n      return props.messages.length ? props.messages : isActive.value || props.persistentHint ? props.hint : '';\n    });\n    function onFocus() {\n      if (textareaRef.value !== document.activeElement) {\n        var _textareaRef$value;\n        (_textareaRef$value = textareaRef.value) === null || _textareaRef$value === void 0 ? void 0 : _textareaRef$value.focus();\n      }\n      if (!isFocused.value) focus();\n    }\n    function onControlClick(e) {\n      onFocus();\n      emit('click:control', e);\n    }\n    function onControlMousedown(e) {\n      emit('mousedown:control', e);\n    }\n    function onClear(e) {\n      e.stopPropagation();\n      onFocus();\n      nextTick(function () {\n        model.value = '';\n        callEvent(props['onClick:clear'], e);\n      });\n    }\n    function onInput(e) {\n      model.value = e.target.value;\n    }\n    var sizerRef = ref();\n    function calculateInputHeight() {\n      if (!props.autoGrow) return;\n      nextTick(function () {\n        if (!sizerRef.value || !vFieldRef.value) return;\n        var style = getComputedStyle(sizerRef.value);\n        var fieldStyle = getComputedStyle(vFieldRef.value.$el);\n        var padding = parseFloat(style.getPropertyValue('--v-field-padding-top')) + parseFloat(style.getPropertyValue('--v-input-padding-top')) + parseFloat(style.getPropertyValue('--v-field-padding-bottom'));\n        var height = sizerRef.value.scrollHeight;\n        var lineHeight = parseFloat(style.lineHeight);\n        var minHeight = Math.max(parseFloat(props.rows) * lineHeight + padding, parseFloat(fieldStyle.getPropertyValue('--v-input-control-height')));\n        var maxHeight = parseFloat(props.maxRows) * lineHeight + padding || Infinity;\n        controlHeight.value = convertToUnit(clamp(height !== null && height !== void 0 ? height : 0, minHeight, maxHeight));\n      });\n    }\n    onMounted(calculateInputHeight);\n    watch(model, calculateInputHeight);\n    watch(function () {\n      return props.rows;\n    }, calculateInputHeight);\n    watch(function () {\n      return props.maxRows;\n    }, calculateInputHeight);\n    watch(function () {\n      return props.density;\n    }, calculateInputHeight);\n    var observer;\n    watch(sizerRef, function (val) {\n      if (val) {\n        observer = new ResizeObserver(calculateInputHeight);\n        observer.observe(sizerRef.value);\n      } else {\n        var _observer;\n        (_observer = observer) === null || _observer === void 0 ? void 0 : _observer.disconnect();\n      }\n    });\n    onBeforeUnmount(function () {\n      var _observer2;\n      (_observer2 = observer) === null || _observer2 === void 0 ? void 0 : _observer2.disconnect();\n    });\n    useRender(function () {\n      var hasCounter = !!(slots.counter || props.counter || props.counterValue);\n      var hasDetails = !!(hasCounter || slots.details);\n      var _filterInputAttrs = filterInputAttrs(attrs),\n        _filterInputAttrs2 = _slicedToArray(_filterInputAttrs, 2),\n        rootAttrs = _filterInputAttrs2[0],\n        inputAttrs = _filterInputAttrs2[1];\n      var _filterInputProps = filterInputProps(props),\n        _filterInputProps2 = _slicedToArray(_filterInputProps, 1),\n        _filterInputProps2$ = _filterInputProps2[0],\n        _ = _filterInputProps2$.modelValue,\n        inputProps = _objectWithoutProperties(_filterInputProps2$, _excluded);\n      var _filterFieldProps = filterFieldProps(props),\n        _filterFieldProps2 = _slicedToArray(_filterFieldProps, 1),\n        fieldProps = _filterFieldProps2[0];\n      return _createVNode(VInput, _mergeProps({\n        \"ref\": vInputRef,\n        \"modelValue\": model.value,\n        \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n          return model.value = $event;\n        },\n        \"class\": ['v-textarea v-text-field', {\n          'v-textarea--prefixed': props.prefix,\n          'v-textarea--suffixed': props.suffix,\n          'v-text-field--prefixed': props.prefix,\n          'v-text-field--suffixed': props.suffix,\n          'v-textarea--auto-grow': props.autoGrow,\n          'v-textarea--no-resize': props.noResize || props.autoGrow,\n          'v-text-field--flush-details': ['plain', 'underlined'].includes(props.variant)\n        }],\n        \"onClick:prepend\": props['onClick:prepend'],\n        \"onClick:append\": props['onClick:append']\n      }, rootAttrs, inputProps, {\n        \"focused\": isFocused.value,\n        \"messages\": messages.value\n      }), _objectSpread(_objectSpread({}, slots), {}, {\n        \"default\": function _default(_ref2) {\n          var isDisabled = _ref2.isDisabled,\n            isDirty = _ref2.isDirty,\n            isReadonly = _ref2.isReadonly,\n            isValid = _ref2.isValid;\n          return _createVNode(VField, _mergeProps({\n            \"ref\": vFieldRef,\n            \"style\": {\n              '--v-textarea-control-height': controlHeight.value\n            },\n            \"onClick\": onControlClick,\n            \"onMousedown\": onControlMousedown,\n            \"onClick:clear\": onClear,\n            \"onClick:prependInner\": props['onClick:prependInner'],\n            \"onClick:appendInner\": props['onClick:appendInner'],\n            \"role\": \"textbox\"\n          }, fieldProps, {\n            \"active\": isActive.value || isDirty.value,\n            \"dirty\": isDirty.value || props.dirty,\n            \"focused\": isFocused.value,\n            \"error\": isValid.value === false\n          }), _objectSpread(_objectSpread({}, slots), {}, {\n            \"default\": function _default(_ref3) {\n              var _ref3$props = _ref3.props,\n                fieldClass = _ref3$props[\"class\"],\n                slotProps = _objectWithoutProperties(_ref3$props, _excluded2);\n              return _createVNode(_Fragment, null, [props.prefix && _createVNode(\"span\", {\n                \"class\": \"v-text-field__prefix\"\n              }, [props.prefix]), _withDirectives(_createVNode(\"textarea\", _mergeProps({\n                \"ref\": textareaRef,\n                \"class\": fieldClass,\n                \"value\": model.value,\n                \"onInput\": onInput,\n                \"autofocus\": props.autofocus,\n                \"readonly\": isReadonly.value,\n                \"disabled\": isDisabled.value,\n                \"placeholder\": props.placeholder,\n                \"rows\": props.rows,\n                \"name\": props.name,\n                \"onFocus\": onFocus,\n                \"onBlur\": blur\n              }, slotProps, inputAttrs), null), [[_resolveDirective(\"intersect\"), {\n                handler: onIntersect\n              }, null, {\n                once: true\n              }]]), props.autoGrow && _withDirectives(_createVNode(\"textarea\", {\n                \"class\": [fieldClass, 'v-textarea__sizer'],\n                \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n                  return model.value = $event;\n                },\n                \"ref\": sizerRef,\n                \"readonly\": true,\n                \"aria-hidden\": \"true\"\n              }, null), [[_vModelText, model.value]]), props.suffix && _createVNode(\"span\", {\n                \"class\": \"v-text-field__suffix\"\n              }, [props.suffix])]);\n            }\n          }));\n        },\n        details: hasDetails ? function (slotProps) {\n          var _slots$details;\n          return _createVNode(_Fragment, null, [(_slots$details = slots.details) === null || _slots$details === void 0 ? void 0 : _slots$details.call(slots, slotProps), hasCounter && _createVNode(_Fragment, null, [_createVNode(\"span\", null, null), _createVNode(VCounter, {\n            \"active\": props.persistentCounter || isFocused.value,\n            \"value\": counterValue.value,\n            \"max\": max.value\n          }, slots.counter)])]);\n        } : undefined\n      }));\n    });\n    return forwardRefs({}, vInputRef, vFieldRef, textareaRef);\n  }\n});","map":{"version":3,"names":["filterFieldProps","makeVFieldProps","filterInputProps","makeVInputProps","VInput","VCounter","VField","Intersect","forwardRefs","useFocus","useProxiedModel","computed","nextTick","onBeforeUnmount","onMounted","ref","watch","callEvent","clamp","convertToUnit","filterInputAttrs","genericComponent","useRender","VTextarea","name","directives","inheritAttrs","props","_objectSpread","autoGrow","Boolean","autofocus","counter","Number","String","counterValue","Function","hint","persistentHint","prefix","placeholder","persistentPlaceholder","persistentCounter","noResize","rows","type","validator","v","isNaN","parseFloat","maxRows","suffix","emits","clickControl","e","mousedownControl","updateFocused","focused","updateModelValue","val","setup","_ref","attrs","emit","slots","model","_useFocus","isFocused","focus","blur","value","toString","length","max","maxlength","undefined","onIntersect","isIntersecting","entries","_entries$0$target","_entries$0$target$foc","target","call","vInputRef","vFieldRef","controlHeight","textareaRef","isActive","messages","onFocus","document","activeElement","_textareaRef$value","onControlClick","onControlMousedown","onClear","stopPropagation","onInput","sizerRef","calculateInputHeight","style","getComputedStyle","fieldStyle","$el","padding","getPropertyValue","height","scrollHeight","lineHeight","minHeight","Math","maxHeight","Infinity","density","observer","ResizeObserver","observe","_observer","disconnect","_observer2","hasCounter","hasDetails","details","_filterInputAttrs","_filterInputAttrs2","_slicedToArray","rootAttrs","inputAttrs","_filterInputProps","_filterInputProps2","_filterInputProps2$","_","modelValue","inputProps","_objectWithoutProperties","_excluded","_filterFieldProps","_filterFieldProps2","fieldProps","_createVNode","_mergeProps","onUpdateModelValue","$event","includes","variant","_default","_ref2","isDisabled","isDirty","isReadonly","isValid","dirty","_ref3","_ref3$props","fieldClass","slotProps","_excluded2","_Fragment","_withDirectives","_resolveDirective","handler","once","_vModelText","_slots$details"],"sources":["../../../src/components/VTextarea/VTextarea.tsx"],"sourcesContent":["// Styles\nimport './VTextarea.sass'\nimport '../VTextField/VTextField.sass'\n\n// Components\nimport { filterFieldProps, makeVFieldProps } from '@/components/VField/VField'\nimport { filterInputProps, makeVInputProps, VInput } from '@/components/VInput/VInput'\nimport { VCounter } from '@/components/VCounter'\nimport { VField } from '@/components/VField'\n\n// Directives\nimport Intersect from '@/directives/intersect'\n\n// Composables\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { useFocus } from '@/composables/focus'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed, nextTick, onBeforeUnmount, onMounted, ref, watch } from 'vue'\nimport { callEvent, clamp, convertToUnit, filterInputAttrs, genericComponent, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { VFieldSlots } from '@/components/VField/VField'\nimport type { VInputSlots } from '@/components/VInput/VInput'\n\nexport const VTextarea = genericComponent<Omit<VInputSlots & VFieldSlots, 'default'>>()({\n  name: 'VTextarea',\n\n  directives: { Intersect },\n\n  inheritAttrs: false,\n\n  props: {\n    autoGrow: Boolean,\n    autofocus: Boolean,\n    counter: [Boolean, Number, String] as PropType<true | number | string>,\n    counterValue: Function as PropType<(value: any) => number>,\n    hint: String,\n    persistentHint: Boolean,\n    prefix: String,\n    placeholder: String,\n    persistentPlaceholder: Boolean,\n    persistentCounter: Boolean,\n    noResize: Boolean,\n    rows: {\n      type: [Number, String],\n      default: 5,\n      validator: (v: any) => !isNaN(parseFloat(v)),\n    },\n    maxRows: {\n      type: [Number, String],\n      validator: (v: any) => !isNaN(parseFloat(v)),\n    },\n    suffix: String,\n\n    ...makeVInputProps(),\n    ...makeVFieldProps(),\n  },\n\n  emits: {\n    'click:control': (e: MouseEvent) => true,\n    'mousedown:control': (e: MouseEvent) => true,\n    'update:focused': (focused: boolean) => true,\n    'update:modelValue': (val: string) => true,\n  },\n\n  setup (props, { attrs, emit, slots }) {\n    const model = useProxiedModel(props, 'modelValue')\n    const { isFocused, focus, blur } = useFocus(props)\n    const counterValue = computed(() => {\n      return typeof props.counterValue === 'function'\n        ? props.counterValue(model.value)\n        : (model.value || '').toString().length\n    })\n    const max = computed(() => {\n      if (attrs.maxlength) return attrs.maxlength as string | number\n\n      if (\n        !props.counter ||\n        (typeof props.counter !== 'number' &&\n        typeof props.counter !== 'string')\n      ) return undefined\n\n      return props.counter\n    })\n\n    function onIntersect (\n      isIntersecting: boolean,\n      entries: IntersectionObserverEntry[]\n    ) {\n      if (!props.autofocus || !isIntersecting) return\n\n      (entries[0].target as HTMLInputElement)?.focus?.()\n    }\n\n    const vInputRef = ref<VInput>()\n    const vFieldRef = ref<VInput>()\n    const controlHeight = ref('')\n    const textareaRef = ref<HTMLInputElement>()\n    const isActive = computed(() => (\n      isFocused.value ||\n      props.persistentPlaceholder\n    ))\n\n    const messages = computed(() => {\n      return props.messages.length\n        ? props.messages\n        : (isActive.value || props.persistentHint) ? props.hint : ''\n    })\n\n    function onFocus () {\n      if (textareaRef.value !== document.activeElement) {\n        textareaRef.value?.focus()\n      }\n\n      if (!isFocused.value) focus()\n    }\n    function onControlClick (e: MouseEvent) {\n      onFocus()\n\n      emit('click:control', e)\n    }\n    function onControlMousedown (e: MouseEvent) {\n      emit('mousedown:control', e)\n    }\n    function onClear (e: MouseEvent) {\n      e.stopPropagation()\n\n      onFocus()\n\n      nextTick(() => {\n        model.value = ''\n\n        callEvent(props['onClick:clear'], e)\n      })\n    }\n    function onInput (e: Event) {\n      model.value = (e.target as HTMLTextAreaElement).value\n    }\n\n    const sizerRef = ref<HTMLTextAreaElement>()\n    function calculateInputHeight () {\n      if (!props.autoGrow) return\n\n      nextTick(() => {\n        if (!sizerRef.value || !vFieldRef.value) return\n\n        const style = getComputedStyle(sizerRef.value)\n        const fieldStyle = getComputedStyle(vFieldRef.value.$el)\n\n        const padding = parseFloat(style.getPropertyValue('--v-field-padding-top')) +\n          parseFloat(style.getPropertyValue('--v-input-padding-top')) +\n          parseFloat(style.getPropertyValue('--v-field-padding-bottom'))\n\n        const height = sizerRef.value.scrollHeight\n        const lineHeight = parseFloat(style.lineHeight)\n        const minHeight = Math.max(\n          parseFloat(props.rows) * lineHeight + padding,\n          parseFloat(fieldStyle.getPropertyValue('--v-input-control-height'))\n        )\n        const maxHeight = parseFloat(props.maxRows!) * lineHeight + padding || Infinity\n\n        controlHeight.value = convertToUnit(clamp(height ?? 0, minHeight, maxHeight))\n      })\n    }\n\n    onMounted(calculateInputHeight)\n    watch(model, calculateInputHeight)\n    watch(() => props.rows, calculateInputHeight)\n    watch(() => props.maxRows, calculateInputHeight)\n    watch(() => props.density, calculateInputHeight)\n\n    let observer: ResizeObserver | undefined\n    watch(sizerRef, val => {\n      if (val) {\n        observer = new ResizeObserver(calculateInputHeight)\n        observer.observe(sizerRef.value!)\n      } else {\n        observer?.disconnect()\n      }\n    })\n    onBeforeUnmount(() => {\n      observer?.disconnect()\n    })\n\n    useRender(() => {\n      const hasCounter = !!(slots.counter || props.counter || props.counterValue)\n      const hasDetails = !!(hasCounter || slots.details)\n      const [rootAttrs, inputAttrs] = filterInputAttrs(attrs)\n      const [{ modelValue: _, ...inputProps }] = filterInputProps(props)\n      const [fieldProps] = filterFieldProps(props)\n\n      return (\n        <VInput\n          ref={ vInputRef }\n          v-model={ model.value }\n          class={[\n            'v-textarea v-text-field',\n            {\n              'v-textarea--prefixed': props.prefix,\n              'v-textarea--suffixed': props.suffix,\n              'v-text-field--prefixed': props.prefix,\n              'v-text-field--suffixed': props.suffix,\n              'v-textarea--auto-grow': props.autoGrow,\n              'v-textarea--no-resize': props.noResize || props.autoGrow,\n              'v-text-field--flush-details': ['plain', 'underlined'].includes(props.variant),\n            },\n          ]}\n          onClick:prepend={ props['onClick:prepend'] }\n          onClick:append={ props['onClick:append'] }\n          { ...rootAttrs }\n          { ...inputProps }\n          focused={ isFocused.value }\n          messages={ messages.value }\n        >\n          {{\n            ...slots,\n            default: ({\n              isDisabled,\n              isDirty,\n              isReadonly,\n              isValid,\n            }) => (\n              <VField\n                ref={ vFieldRef }\n                style={{\n                  '--v-textarea-control-height': controlHeight.value,\n                }}\n                onClick={ onControlClick }\n                onMousedown={ onControlMousedown }\n                onClick:clear={ onClear }\n                onClick:prependInner={ props['onClick:prependInner'] }\n                onClick:appendInner={ props['onClick:appendInner'] }\n                role=\"textbox\"\n                { ...fieldProps }\n                active={ isActive.value || isDirty.value }\n                dirty={ isDirty.value || props.dirty }\n                focused={ isFocused.value }\n                error={ isValid.value === false }\n              >\n                {{\n                  ...slots,\n                  default: ({\n                    props: { class: fieldClass, ...slotProps },\n                  }) => (\n                    <>\n                      { props.prefix && (\n                        <span class=\"v-text-field__prefix\">\n                          { props.prefix }\n                        </span>\n                      ) }\n\n                      <textarea\n                        ref={ textareaRef }\n                        class={ fieldClass }\n                        value={ model.value }\n                        onInput={ onInput }\n                        v-intersect={[{\n                          handler: onIntersect,\n                        }, null, ['once']]}\n                        autofocus={ props.autofocus }\n                        readonly={ isReadonly.value }\n                        disabled={ isDisabled.value }\n                        placeholder={ props.placeholder }\n                        rows={ props.rows }\n                        name={ props.name }\n                        onFocus={ onFocus }\n                        onBlur={ blur }\n                        { ...slotProps }\n                        { ...inputAttrs }\n                      />\n\n                      { props.autoGrow && (\n                        <textarea\n                          class={[\n                            fieldClass,\n                            'v-textarea__sizer',\n                          ]}\n                          v-model={ model.value }\n                          ref={ sizerRef }\n                          readonly\n                          aria-hidden=\"true\"\n                        />\n                      )}\n\n                      { props.suffix && (\n                        <span class=\"v-text-field__suffix\">\n                          { props.suffix }\n                        </span>\n                      ) }\n                    </>\n                  ),\n                }}\n              </VField>\n            ),\n            details: hasDetails ? slotProps => (\n              <>\n                { slots.details?.(slotProps) }\n\n                { hasCounter && (\n                  <>\n                    <span />\n\n                    <VCounter\n                      active={ props.persistentCounter || isFocused.value }\n                      value={ counterValue.value }\n                      max={ max.value }\n                      v-slots:default={ slots.counter }\n                    />\n                  </>\n                ) }\n              </>\n            ) : undefined,\n          }}\n        </VInput>\n      )\n    })\n\n    return forwardRefs({}, vInputRef, vFieldRef, textareaRef)\n  },\n})\n\nexport type VTextarea = InstanceType<typeof VTextarea>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}