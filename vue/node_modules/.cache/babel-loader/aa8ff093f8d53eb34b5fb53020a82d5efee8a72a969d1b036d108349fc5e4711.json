{"ast":null,"code":"import { mapState, mapGetters } from 'vuex';\nimport { ALERT } from '@/store/mutations/index';\nimport ACTIONS from '@/store/actions';\nimport openMediaLibrary from '@/behaviors/openMediaLibrary';\nexport default {\n  props: {},\n  data() {\n    return {\n      csrf: document.querySelector('meta[name=\"csrf-token\"]').getAttribute('content'),\n      sidebarToggle: false,\n      miniStatus: false\n    };\n  },\n  computed: {\n    isHoverable() {\n      return this.$store.state.config.isMiniSidebar && this.isLgAndUp;\n    },\n    isMini: {\n      get() {\n        return this.miniStatus = this.$store.state.config.isMiniSidebar && this.isLgAndUp;\n      },\n      set(val) {\n        this.miniStatus = val;\n        // __log('miniStatus form isMini setter', val, this.miniStatus)\n      }\n    },\n\n    showToggleButton() {\n      return !this.isLgAndUp || !this.$store.state.config.isMiniSidebar;\n    },\n    isLgAndUp() {\n      return this.$vuetify.display.lgAndUp;\n    },\n    ...mapState({\n      isMiniSidebar: state => state.config.isMiniSidebar\n    })\n  },\n  watch: {\n    isLgAndUp(val) {\n      // __log(\n      //     this.isMiniSidebar\n      // )\n      this.isMini = this.isMiniSidebar && val;\n      __log(this.sidebarToggle);\n      // this.sidebarToggle = false;\n    }\n  },\n\n  methods: {\n    toggleSidebar() {\n      this.sidebarToggle = !this.sidebarToggle;\n    },\n    handleMethodCall(functionName, ...val) {\n      // __log(functionName)\n      return this[functionName](...val);\n    },\n    handleVmFunctionCall(functionName, ...val) {\n      return window[process.env.VUE_APP_NAME].vm[functionName](...val);\n    },\n    openMediaLibrary() {},\n    bindProps(vue) {\n      __log(vue);\n    }\n  },\n  mounted() {\n    if (this.isMiniSidebar && this.isLgAndUp) {\n      this.sidebarToggle = true;\n    } else if (!this.$store.state.config.isMiniSidebar) {\n      this.sidebarToggle = true;\n    }\n    // __log(\n    //     'root mixin mounted',\n    //     this.miniStatus,\n    //     this.sidebarToggle\n    // )\n  },\n\n  created() {\n    openMediaLibrary();\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}