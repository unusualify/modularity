{"ast":null,"code":"import \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport _ from 'lodash';\nimport core from '@/core';\n\n// import VFormBase from 'vuetify-form-base';\nimport VCustomFormBase from '__components/others/CustomFormBase.vue';\n\n// Template Components\nimport UEModal from '__components/modals/Modal.vue';\nimport UEModalDialog from '__components/modals/ModalDialog.vue';\nimport UEModalMedia from '__components/modals/ModalMedia.vue';\n\n// global mixins\nimport { PropsMixin } from '@/mixins';\n\n// mutations\nimport { MEDIA_LIBRARY } from '@/store/mutations';\n\n// Add-ons\nimport vuetify from '@/plugins/vuetify';\n\n// Store\nimport store from '@/store';\n\n// Config\nimport i18n from '@/config/i18n';\n\n// Directives\nimport { VueMaskDirective } from 'v-mask';\n\n// Directives\nimport SvgSprite from '@/directives/svg';\nvar includeGlobalComponents = require.context('__components', false, /[A-Za-z]*(?<!_)\\.vue$/i);\nvar includeLayouts = require.context('__components/layouts/', false, /[A-Za-z]*(?<!_)\\.vue$/i);\nvar includeFormInputs = require.context('__components/inputs', true, /\\.vue$/i);\nvar includeCustomFormInputs = require.context('__components/customInputs', true, /\\.vue$/i);\nexport default {\n  install: function install(app, opts) {\n    document.addEventListener('DOMContentLoaded', core(app));\n    // treat all tags starting with 'ue-' as custom elements\n    // app.config.compilerOptions.isCustomElement = (tag) => {\n    //   return tag.startsWith('ue-')\n    // }\n    app.config.globalProperties.$ = $;\n    app.config.globalProperties.axios = axios;\n    app.config.errorHandler = function (err) {\n      __log(err);\n    };\n    // all components\n    // app.component('v-form-base', VFormBase);\n    app.component('v-custom-form-base', VCustomFormBase);\n    app.component('ue-modal', UEModal);\n    app.component('ue-modal-dialog', UEModalDialog);\n    app.component('ue-media', UEModalMedia);\n    // Vue.component('ue-medialibrary', UEMediaLibrary)\n\n    includeGlobalComponents.keys().forEach(function (path) {\n      var prefix = 'ue';\n      var fileName = path.split('/').pop().split('.')[0];\n      var componentName = prefix + fileName.replace(/[A-Z]/g, function (m) {\n        return '-' + m.toLowerCase();\n      });\n      app.component(componentName, require('__components/' + fileName + '.vue')[\"default\"]);\n    });\n    includeLayouts.keys().forEach(function (path) {\n      var prefix = 'ue';\n      var fileName = path.split('/').pop().split('.')[0];\n      var componentName = prefix + fileName.replace(/[A-Z]/g, function (m) {\n        return '-' + m.toLowerCase();\n      });\n      app.component(componentName, require('__components/layouts/' + fileName + '.vue')[\"default\"]);\n    });\n    includeFormInputs.keys().forEach(function (path) {\n      var prefix = 'ue-input';\n      var fileName = path.split('/').pop().split('.')[0];\n      var componentName = prefix + fileName.replace(/[A-Z]/g, function (m) {\n        return '-' + m.toLowerCase();\n      });\n      // __log(componentName)\n      app.component(componentName, require('__components/inputs/' + fileName + '.vue')[\"default\"]);\n    });\n    includeCustomFormInputs.keys().forEach(function (path) {\n      var prefix = 'v-custom-input';\n      var fileName = path.split('/').pop().split('.')[0];\n      var componentName = prefix + fileName.replace(/[A-Z]/g, function (m) {\n        return '-' + m.toLowerCase();\n      });\n      // __log(componentName)\n      app.component(componentName, require('__components/customInputs/' + fileName + '.vue')[\"default\"]);\n    });\n    app.use(vuetify);\n    app.use(store);\n    app.use(i18n);\n    app.mixin(PropsMixin);\n\n    // Global Vue mixin : Use global mixins sparsely and carefully!\n    app.mixin({\n      //   vuetify,\n      //   i18n,\n      methods: {\n        openFreeMediaLibrary: function openFreeMediaLibrary() {\n          // __log('openFreeMedialibrary triggered')\n          this.$store.commit(MEDIA_LIBRARY.UPDATE_MEDIA_CONNECTOR, null); // reset connector\n          this.$store.commit(MEDIA_LIBRARY.RESET_MEDIA_TYPE); // reset to first available type\n          this.$store.commit(MEDIA_LIBRARY.UPDATE_REPLACE_INDEX, -1); // we are not replacing an image here\n          this.$store.commit(MEDIA_LIBRARY.UPDATE_MEDIA_MAX, 0); // set max to 0\n          this.$store.commit(MEDIA_LIBRARY.UPDATE_MEDIA_FILESIZE_MAX, 0); // set filesize max to 0\n          this.$store.commit(MEDIA_LIBRARY.UPDATE_MEDIA_WIDTH_MIN, 0); // set width min to 0\n          this.$store.commit(MEDIA_LIBRARY.UPDATE_MEDIA_HEIGHT_MIN, 0); // set height min to 0\n          this.$store.commit(MEDIA_LIBRARY.UPDATE_MEDIA_MODE, false); // set the strict to false (you can change the active type)\n\n          if (this.$root.$refs.main && this.$root.$refs.main.$refs.mediaLibrary) {\n            this.$root.$refs.main.$refs.mediaLibrary.openModal();\n          }\n          // if (this.$root.$refs.mediaLibrary) this.$root.$refs.mediaLibrary.open()\n        }\n      }\n    });\n\n    // // Configurations\n    // Vue.config.productionTip = isProd\n    // Vue.config.devtools = true\n    // app.config.globalProperties.$http = axios\n\n    app.config.globalProperties.$trans = function (key, defaultValue) {\n      return _.get(window[process.env.VUE_APP_NAME].unusualLocalization.lang, key, defaultValue);\n      // return get(window[process.env.VUE_APP_NAME].unusualLocalization.lang, key, defaultValue)\n    };\n\n    // axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest'\n\n    // axios.interceptors.response.use((response) => response, (error) => {\n    //     globalError('CONTENT', error)\n\n    //     return Promise.reject(error)\n    // })\n\n    // // Plugins\n    // Vue.use(VueTimeago, {\n    //     name: 'timeago', // component name\n    //     locale: window[process.env.VUE_APP_NAME].twillLocalization.locale,\n    //     locales: mapValues(locales, 'date-fns')\n    // })\n\n    // Directives\n    app.directive('mask', VueMaskDirective);\n    app.use(SvgSprite);\n    // Vue.use(Tooltip)\n    // Vue.use(Sticky)\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}