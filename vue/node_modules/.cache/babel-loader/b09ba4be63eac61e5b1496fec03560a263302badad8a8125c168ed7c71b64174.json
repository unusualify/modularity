{"ast":null,"code":"import _typeof from \"/var/www/crm_template/packages/oobook/crm-base/vue/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"core-js/modules/es.date.now.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/web.timers.js\";\nvar scrollToY = function scrollToY(options) {\n  // Doc: https://code.area17.com/mike/a17-js-helpers/wikis/A17-Helpers-scrollToY\n\n  var settings = {\n    el: document,\n    offset: 0,\n    duration: 250,\n    easing: 'linear'\n  };\n  var start = Date.now();\n  var from = 0;\n  var isDocument = false;\n  var easingEquations = {\n    // Easing functions taken from: https://gist.github.com/gre/1650294\n    // -\n    // no easing, no acceleration\n    linear: function linear(t) {\n      return t;\n    },\n    // accelerating from zero velocity\n    easeIn: function easeIn(t) {\n      return t * t * t;\n    },\n    // decelerating to zero velocity\n    easeOut: function easeOut(t) {\n      return --t * t * t + 1;\n    },\n    // acceleration until halfway, then deceleration\n    easeInOut: function easeInOut(t) {\n      return t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n    }\n  };\n  var useRequestAnimationFrame = window.requestAnimationFrame;\n  var scrollInterval;\n  for (var def in options) {\n    if (typeof options[def] !== 'undefined') {\n      settings[def] = options[def];\n    }\n  }\n  if (settings.el === document) {\n    isDocument = true;\n    settings.el = document.documentElement.scrollTop ? document.documentElement : document.body;\n  }\n  from = settings.el.scrollTop;\n  if (from === settings.offset) {\n    // Prevent scrolling to the offset point if already there\n    return;\n  }\n  function min(a, b) {\n    return a < b ? a : b;\n  }\n  function cancelInterval() {\n    if (useRequestAnimationFrame) {\n      try {\n        cancelAnimationFrame(scrollInterval);\n      } catch (err) {\n        // continue execution in case cancelAnimationFrame fails\n      }\n    } else {\n      clearTimeout(scrollInterval);\n    }\n  }\n  function scroll() {\n    if (isDocument && from === 0) {\n      // eugh Firefox! (https://miketaylr.com/posts/2014/11/document-body-scrollTop.html)\n      document.documentElement.scrollTop = 1;\n      document.body.scrollTop = 1;\n      from = 1;\n      settings.el = document.documentElement.scrollTop ? document.documentElement : document.body;\n      requestAnimationFrame(scroll);\n    } else {\n      var currentTime = Date.now();\n      var time = min(1, (currentTime - start) / settings.duration);\n      var easedT = easingEquations[settings.easing](time);\n      settings.el.scrollTop = easedT * (settings.offset - from) + from;\n      if (time < 1) {\n        doScroll();\n      } else {\n        cancelInterval();\n        if (_typeof(settings.onComplete).toLowerCase() === 'function') {\n          settings.onComplete.call(this);\n        }\n      }\n    }\n  }\n  function doScroll() {\n    if (useRequestAnimationFrame) {\n      scrollInterval = requestAnimationFrame(scroll);\n    } else {\n      scrollInterval = setTimeout(function () {\n        scroll();\n      }, 1000 / 60);\n    }\n  }\n  doScroll();\n};\nexport default scrollToY;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}