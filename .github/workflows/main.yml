# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Main

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  vue:
    name: Vue Tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      #- run: npm run build --if-present
      - name: Execute Tests
        run: |
          npm ci
          npm run test:run
  laravel:
    needs: vue
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ ubuntu-latest ]
        php: [8.0, 8.1, 8.2, 8.3]
        laravel: [ 9.*, 10.*, 11.* ]
        stability: [ prefer-stable ]
        include:
          - laravel: 9.*
            testbench: ^7.0
          - laravel: 10.*
            testbench: 8.*
          - laravel: 11.*
            testbench: ^9.0
        exclude:
          - laravel: 9.*
            php: 8.3
          - laravel: 10.*
            php: 8.0
          - laravel: 11.*
            php: 8.0
          - laravel: 11.*
            php: 8.1

    name: P${{ matrix.php }} - L${{ matrix.laravel }} - ${{ matrix.dependency-version }} - ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo
          coverage: none

      - name: Setup problem matchers
        run: |
            echo "::add-matcher::${{ runner.tool_cache }}/php.json"
            echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"
      - name: Install dependencies
        run: |
            composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" --no-interaction --no-update
            composer update --${{ matrix.stability }} --prefer-dist --no-interaction
      - name: Execute Laravel tests
        run: vendor/bin/phpunit

