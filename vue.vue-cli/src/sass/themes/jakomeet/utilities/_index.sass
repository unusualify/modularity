@use 'sass:string'
@use 'sass:map'
@use 'sass:meta'
@use 'vuetify/settings' as v-settings
@use 'vuetify/tools' as v-tools
@use '../abstract' as abstract

// FROM VUETIFY UTILITY STRUCTURE
// Utilities
@each $breakpoint in map.keys(v-settings.$grid-breakpoints)
  // Generate media query if needed
  +v-tools.media-breakpoint-up($breakpoint)
    $infix: v-tools.breakpoint-infix($breakpoint, v-settings.$grid-breakpoints)

    // Loop over each utility property
    @each $key, $utility in abstract.$utilities
      // The utility can be disabled with `false`, thus check if the utility is a map first
      // Only proceed if responsive media queries are enabled or if it's the base media query
      @if string.slice($key, -4) == ':ltr'
        @if meta.type-of($utility) == "map" and (map.get($utility, responsive) or $infix == "")
          +v-tools.generate-utility($utility, $infix, 'ltr')
      @else if string.slice($key, -4) == ':rtl'
        @if meta.type-of($utility) == "map" and (map.get($utility, responsive) or $infix == "")
          +v-tools.generate-utility($utility, $infix, 'rtl')
      @else
        @if meta.type-of($utility) == "map" and (map.get($utility, responsive) or $infix == "")
          +v-tools.generate-utility($utility, $infix, 'bidi')


// Print utilities
@media print
  @each $key, $utility in abstract.$utilities
    // The utility can be disabled with `false`, thus check if the utility is a map first
    // Then check if the utility needs print styles
    @if string.slice($key, -4) == ':ltr'
      @if meta.type-of($utility) == "map" and map.get($utility, print) == true
        +v-tools.generate-utility($utility, "-print", 'ltr')
    @else if string.slice($key, -4) == ':rtl'
      @if meta.type-of($utility) == "map" and map.get($utility, print) == true
        +v-tools.generate-utility($utility, "-print", 'rtl')
    @else
      @if meta.type-of($utility) == "map" and map.get($utility, print) == true
        +v-tools.generate-utility($utility, "-print", 'bidi')
